2024-12-13 12:13:15.715 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-13 12:13:16.478 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-13 12:13:16.480 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-13 12:13:16.581 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-13 12:13:16.585 +05:30 [INF] Hosting environment: Development
2024-12-13 12:13:16.596 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-13 12:13:18.437 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-13 12:13:18.832 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 412.9238ms
2024-12-13 12:13:18.835 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-13 12:13:18.835 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-13 12:13:18.852 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 17.3384ms
2024-12-13 12:13:18.932 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 97.4664ms
2024-12-13 12:13:18.979 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-13 12:13:19.161 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 182.4328ms
2024-12-13 12:13:41.517 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-13 12:13:41.547 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:13:41.552 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 35.0307ms
2024-12-13 12:13:41.558 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-13 12:13:41.575 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:13:43.120 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-13 12:13:43.185 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-13 12:13:44.017 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-13 12:13:44.021 +05:30 [INF] Checking if the user present
2024-12-13 12:13:44.025 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-13 12:13:47.539 +05:30 [INF] Executed DbCommand (198ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-13 12:13:47.701 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-13 12:13:47.703 +05:30 [INF] Verifying the password
2024-12-13 12:13:48.726 +05:30 [INF] Password is valid and token is generated
2024-12-13 12:13:48.729 +05:30 [INF] Login successful
2024-12-13 12:13:48.750 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 12:13:48.768 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 5571.3423ms
2024-12-13 12:13:48.773 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-13 12:13:48.788 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 7230.7886ms
2024-12-13 12:13:48.807 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:13:48.811 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:13:48.814 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.673ms
2024-12-13 12:13:48.819 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:13:48.825 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:13:48.935 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:13:48.947 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:13:48.961 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:13:49.041 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:13:49.043 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 12:13:49.048 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 12:13:49.054 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 12:13:49.142 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 12:13:49.153 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 12:13:49.283 +05:30 [INF] Executed DbCommand (21ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 12:13:49.297 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 12:13:49.301 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 12:13:49.327 +05:30 [INF] Notes retrieved successfully
2024-12-13 12:13:49.333 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:13:49.343 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 392.3044ms
2024-12-13 12:13:49.347 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:13:49.351 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 532.6832ms
2024-12-13 12:15:00.032 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:15:00.052 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:15:00.053 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 29.5488ms
2024-12-13 12:15:00.058 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:15:00.065 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:15:00.072 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:15:00.075 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:15:00.082 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:15:00.091 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:15:00.092 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:15:00.093 +05:30 [INF] Deserializing the notes
2024-12-13 12:15:00.099 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:15:00.102 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.341ms
2024-12-13 12:15:00.105 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:15:00.106 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.2801ms
2024-12-13 12:15:07.582 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:15:07.586 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:15:07.588 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.4682ms
2024-12-13 12:15:07.593 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:15:07.597 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:15:07.601 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:15:07.602 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:15:07.612 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:15:07.616 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:15:07.618 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:15:07.620 +05:30 [INF] Deserializing the notes
2024-12-13 12:15:07.621 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:15:07.623 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.6905ms
2024-12-13 12:15:07.626 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:15:07.631 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.1311ms
2024-12-13 12:20:03.572 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:20:03.576 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:20:03.578 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.4941ms
2024-12-13 12:20:03.589 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:20:03.593 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:20:03.595 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:20:03.597 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:20:03.600 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:20:03.603 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:20:03.605 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 12:20:03.607 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 12:20:03.608 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 12:20:03.753 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 12:20:03.758 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 12:20:03.782 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 12:20:03.786 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 12:20:03.788 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 12:20:03.790 +05:30 [INF] Notes retrieved successfully
2024-12-13 12:20:03.792 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:20:03.794 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 194.7859ms
2024-12-13 12:20:03.796 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:20:03.797 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 208.1527ms
2024-12-13 12:20:07.483 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:20:07.487 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:20:07.490 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:20:07.492 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:20:07.495 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:20:07.499 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:20:07.509 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:20:07.512 +05:30 [INF] Deserializing the notes
2024-12-13 12:20:07.515 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:20:07.518 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.556ms
2024-12-13 12:20:07.519 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:20:07.520 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.5343ms
2024-12-13 12:20:21.244 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:20:21.247 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:20:21.248 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1022ms
2024-12-13 12:20:21.252 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:20:21.255 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:20:21.257 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:20:21.258 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:20:21.262 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:20:21.265 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:20:21.268 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:20:21.270 +05:30 [INF] Deserializing the notes
2024-12-13 12:20:21.272 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:20:21.275 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.0629ms
2024-12-13 12:20:21.279 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:20:21.281 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.8544ms
2024-12-13 12:20:28.206 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:20:28.211 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:20:28.213 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.3511ms
2024-12-13 12:20:28.217 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:20:28.222 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:20:28.223 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:20:28.225 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:20:28.228 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:20:28.233 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:20:28.235 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:20:28.237 +05:30 [INF] Deserializing the notes
2024-12-13 12:20:28.238 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:20:28.241 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.5592ms
2024-12-13 12:20:28.244 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:20:28.245 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.9031ms
2024-12-13 12:20:34.778 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:20:34.786 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:20:34.787 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.8957ms
2024-12-13 12:20:34.801 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:20:34.809 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:20:34.811 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:20:34.815 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:20:34.820 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:20:34.822 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:20:34.824 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:20:34.825 +05:30 [INF] Deserializing the notes
2024-12-13 12:20:34.826 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:20:34.828 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.8746ms
2024-12-13 12:20:34.832 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:20:34.834 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.0081ms
2024-12-13 12:21:26.920 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:21:26.926 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:21:26.928 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.2834ms
2024-12-13 12:21:26.932 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:21:26.941 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:21:26.943 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:21:26.944 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:21:26.948 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:21:26.951 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:21:26.954 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:21:26.955 +05:30 [INF] Deserializing the notes
2024-12-13 12:21:26.957 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:21:26.960 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.3927ms
2024-12-13 12:21:26.963 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:21:26.965 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.0838ms
2024-12-13 12:21:51.985 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:21:51.988 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:21:51.990 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1244ms
2024-12-13 12:21:51.993 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:21:51.997 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:21:51.999 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:21:52.000 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:21:52.004 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:21:52.009 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:21:52.011 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:21:52.012 +05:30 [INF] Deserializing the notes
2024-12-13 12:21:52.014 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:21:52.016 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.9923ms
2024-12-13 12:21:52.019 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:21:52.030 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.8876ms
2024-12-13 12:21:56.539 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:21:56.541 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:21:56.543 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:21:56.544 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:21:56.546 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:21:56.548 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:21:56.551 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:21:56.553 +05:30 [INF] Deserializing the notes
2024-12-13 12:21:56.555 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:21:56.558 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.606ms
2024-12-13 12:21:56.560 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:21:56.564 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.8443ms
2024-12-13 12:22:22.220 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:22:22.224 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:22:22.225 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3011ms
2024-12-13 12:22:22.230 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:22:22.234 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:22:22.236 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:22.238 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:22:22.241 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:22:22.247 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:22:22.249 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:22:22.250 +05:30 [INF] Deserializing the notes
2024-12-13 12:22:22.253 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:22:22.256 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.3726ms
2024-12-13 12:22:22.258 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:22.260 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.3222ms
2024-12-13 12:22:29.671 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:22:29.674 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:22:29.676 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.5361ms
2024-12-13 12:22:29.680 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:22:29.684 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:22:29.686 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:29.688 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:22:29.691 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:22:29.694 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:22:29.696 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:22:29.697 +05:30 [INF] Deserializing the notes
2024-12-13 12:22:29.698 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:22:29.700 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.8354ms
2024-12-13 12:22:29.702 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:29.704 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.9526ms
2024-12-13 12:22:31.811 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:22:31.815 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:22:31.818 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:31.819 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:22:31.823 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:22:31.825 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:22:31.828 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:22:31.830 +05:30 [INF] Deserializing the notes
2024-12-13 12:22:31.832 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:22:31.834 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.0663ms
2024-12-13 12:22:31.837 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:31.839 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.3322ms
2024-12-13 12:22:33.770 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:22:33.773 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:22:33.775 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:33.776 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:22:33.778 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:22:33.780 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:22:33.782 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:22:33.784 +05:30 [INF] Deserializing the notes
2024-12-13 12:22:33.785 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:22:33.788 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.8785ms
2024-12-13 12:22:33.790 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:33.792 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.427ms
2024-12-13 12:22:45.860 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:22:45.863 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:22:45.864 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1196ms
2024-12-13 12:22:45.869 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:22:45.872 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:22:45.874 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:45.876 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:22:45.879 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:22:45.882 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:22:45.885 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:22:45.886 +05:30 [INF] Deserializing the notes
2024-12-13 12:22:45.888 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:22:45.890 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.2298ms
2024-12-13 12:22:45.892 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:45.894 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.9633ms
2024-12-13 12:22:47.198 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:22:47.201 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:22:47.203 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:47.204 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:22:47.206 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:22:47.210 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:22:47.212 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:22:47.213 +05:30 [INF] Deserializing the notes
2024-12-13 12:22:47.214 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:22:47.216 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.9082ms
2024-12-13 12:22:47.218 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:47.220 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.141ms
2024-12-13 12:22:55.107 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:22:55.111 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:22:55.112 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2638ms
2024-12-13 12:22:55.116 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:22:55.121 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:22:55.123 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:55.124 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:22:55.127 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:22:55.128 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:22:55.133 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:22:55.134 +05:30 [INF] Deserializing the notes
2024-12-13 12:22:55.136 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:22:55.139 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.2321ms
2024-12-13 12:22:55.141 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:55.143 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.1388ms
2024-12-13 12:22:58.152 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:22:58.154 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:22:58.156 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:58.157 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:22:58.159 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:22:58.161 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:22:58.163 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:22:58.164 +05:30 [INF] Deserializing the notes
2024-12-13 12:22:58.166 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:22:58.168 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.1276ms
2024-12-13 12:22:58.169 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:22:58.171 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.2593ms
2024-12-13 12:23:00.704 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:23:00.707 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:23:00.709 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.5236ms
2024-12-13 12:23:00.713 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:23:00.722 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:23:00.724 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:23:00.726 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:23:00.732 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:23:00.736 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:23:00.740 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:23:00.743 +05:30 [INF] Deserializing the notes
2024-12-13 12:23:00.744 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:23:00.746 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.7214ms
2024-12-13 12:23:00.750 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:23:00.752 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.3358ms
2024-12-13 12:24:22.415 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:24:22.425 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:24:22.427 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.9999ms
2024-12-13 12:24:22.450 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:24:22.454 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:24:22.456 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:24:22.458 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:24:22.461 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:24:22.464 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:24:22.466 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:24:22.468 +05:30 [INF] Deserializing the notes
2024-12-13 12:24:22.469 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:24:22.472 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.0637ms
2024-12-13 12:24:22.474 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:24:22.476 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.2082ms
2024-12-13 12:24:29.234 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:24:29.237 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:24:29.239 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3817ms
2024-12-13 12:24:29.242 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:24:29.246 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:24:29.248 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:24:29.250 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:24:29.252 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:24:29.254 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:24:29.257 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:24:29.258 +05:30 [INF] Deserializing the notes
2024-12-13 12:24:29.260 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:24:29.262 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.388ms
2024-12-13 12:24:29.265 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:24:29.267 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.1527ms
2024-12-13 12:24:32.732 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:24:32.737 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:24:32.738 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:24:32.740 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:24:32.743 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:24:32.745 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:24:32.748 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:24:32.750 +05:30 [INF] Deserializing the notes
2024-12-13 12:24:32.753 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:24:32.756 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.0775ms
2024-12-13 12:24:32.758 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:24:32.759 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.1185ms
2024-12-13 12:24:59.231 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:24:59.236 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:24:59.238 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.1476ms
2024-12-13 12:24:59.242 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:24:59.247 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:24:59.249 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:24:59.251 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:24:59.254 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:24:59.256 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:24:59.259 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:24:59.260 +05:30 [INF] Deserializing the notes
2024-12-13 12:24:59.262 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:24:59.264 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7536ms
2024-12-13 12:24:59.266 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:24:59.268 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.0097ms
2024-12-13 12:25:19.066 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:25:19.069 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:25:19.070 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.9552ms
2024-12-13 12:25:19.074 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:25:19.077 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:25:19.078 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:25:19.079 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:25:19.083 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:25:19.085 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:25:19.088 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 12:25:19.089 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 12:25:19.090 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 12:25:19.117 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 12:25:19.121 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 12:25:19.136 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 12:25:19.140 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 12:25:19.141 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 12:25:19.143 +05:30 [INF] Notes retrieved successfully
2024-12-13 12:25:19.144 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:25:19.145 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 62.9479ms
2024-12-13 12:25:19.147 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:25:19.149 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 75.1999ms
2024-12-13 12:26:07.380 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:26:07.392 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:26:07.393 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.8565ms
2024-12-13 12:26:07.398 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:26:07.401 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:26:07.403 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:26:07.405 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:26:07.407 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:26:07.409 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:26:07.411 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:26:07.412 +05:30 [INF] Deserializing the notes
2024-12-13 12:26:07.414 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:26:07.416 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4787ms
2024-12-13 12:26:07.417 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:26:07.419 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.7944ms
2024-12-13 12:26:28.734 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:26:28.745 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:26:28.746 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.7285ms
2024-12-13 12:26:28.750 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:26:28.755 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:26:28.757 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:26:28.758 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:26:28.762 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:26:28.763 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:26:28.766 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:26:28.767 +05:30 [INF] Deserializing the notes
2024-12-13 12:26:28.769 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:26:28.772 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.1134ms
2024-12-13 12:26:28.775 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:26:28.777 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.5759ms
2024-12-13 12:26:37.756 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:26:37.760 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:26:37.761 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1938ms
2024-12-13 12:26:37.765 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:26:37.769 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:26:37.770 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:26:37.772 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:26:37.775 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:26:37.776 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:26:37.779 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:26:37.781 +05:30 [INF] Deserializing the notes
2024-12-13 12:26:37.782 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:26:37.785 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.5531ms
2024-12-13 12:26:37.787 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:26:37.796 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.765ms
2024-12-13 12:26:46.192 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:26:46.194 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:26:46.195 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.0452ms
2024-12-13 12:26:46.199 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:26:46.201 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:26:46.203 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:26:46.204 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:26:46.207 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:26:46.209 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:26:46.212 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:26:46.213 +05:30 [INF] Deserializing the notes
2024-12-13 12:26:46.214 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:26:46.215 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.2654ms
2024-12-13 12:26:46.217 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:26:46.219 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.011ms
2024-12-13 12:26:48.107 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:26:48.110 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:26:48.112 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:26:48.113 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:26:48.115 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:26:48.117 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:26:48.120 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:26:48.121 +05:30 [INF] Deserializing the notes
2024-12-13 12:26:48.122 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:26:48.125 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.6617ms
2024-12-13 12:26:48.126 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:26:48.127 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.3849ms
2024-12-13 12:27:01.913 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:27:01.917 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:27:01.918 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.463ms
2024-12-13 12:27:01.921 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:27:01.927 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:27:01.929 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:27:01.930 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:27:01.933 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:27:01.936 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:27:01.939 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:27:01.941 +05:30 [INF] Deserializing the notes
2024-12-13 12:27:01.943 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:27:01.946 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.4766ms
2024-12-13 12:27:01.948 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:27:01.950 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.312ms
2024-12-13 12:27:04.310 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:27:04.314 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:27:04.317 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:27:04.319 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:27:04.323 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:27:04.325 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:27:04.328 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:27:04.329 +05:30 [INF] Deserializing the notes
2024-12-13 12:27:04.331 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:27:04.334 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.7552ms
2024-12-13 12:27:04.336 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:27:04.338 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.3085ms
2024-12-13 12:27:17.307 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:27:17.311 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:27:17.312 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.4812ms
2024-12-13 12:27:17.316 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:27:17.321 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:27:17.323 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:27:17.325 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:27:17.328 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:27:17.331 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:27:17.334 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:27:17.336 +05:30 [INF] Deserializing the notes
2024-12-13 12:27:17.338 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:27:17.340 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.3695ms
2024-12-13 12:27:17.343 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:27:17.345 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.0694ms
2024-12-13 12:27:22.704 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:27:22.707 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:27:22.709 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8701ms
2024-12-13 12:27:22.726 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:27:22.731 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:27:22.733 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:27:22.735 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:27:22.740 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:27:22.743 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:27:22.745 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:27:22.747 +05:30 [INF] Deserializing the notes
2024-12-13 12:27:22.749 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:27:22.752 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.3099ms
2024-12-13 12:27:22.753 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:27:22.755 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.1052ms
2024-12-13 12:27:29.028 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:27:29.032 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:27:29.033 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.4872ms
2024-12-13 12:27:29.042 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:27:29.045 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:27:29.047 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:27:29.049 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:27:29.052 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:27:29.054 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:27:29.056 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:27:29.058 +05:30 [INF] Deserializing the notes
2024-12-13 12:27:29.059 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:27:29.061 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.9168ms
2024-12-13 12:27:29.064 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:27:29.066 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.2941ms
2024-12-13 12:28:48.156 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:28:48.167 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:28:48.169 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.0881ms
2024-12-13 12:28:48.173 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:28:48.177 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:28:48.179 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:28:48.180 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:28:48.183 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:28:48.184 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:28:48.187 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:28:48.188 +05:30 [INF] Deserializing the notes
2024-12-13 12:28:48.190 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:28:48.193 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.8057ms
2024-12-13 12:28:48.196 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:28:48.198 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.5153ms
2024-12-13 12:29:00.325 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:29:00.329 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:29:00.330 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.4332ms
2024-12-13 12:29:00.333 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:29:00.338 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:29:00.340 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:29:00.341 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:29:00.345 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:29:00.347 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:29:00.350 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:29:00.350 +05:30 [INF] Deserializing the notes
2024-12-13 12:29:00.351 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:29:00.353 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.1872ms
2024-12-13 12:29:00.355 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:29:00.357 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.8231ms
2024-12-13 12:29:03.447 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:29:03.450 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:29:03.451 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:29:03.452 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:29:03.454 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:29:03.456 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:29:03.458 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:29:03.459 +05:30 [INF] Deserializing the notes
2024-12-13 12:29:03.460 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:29:03.462 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.1475ms
2024-12-13 12:29:03.463 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:29:03.465 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.088ms
2024-12-13 12:30:08.863 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:30:08.874 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:30:08.875 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.6155ms
2024-12-13 12:30:08.883 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:30:08.889 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:30:08.891 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:30:08.892 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:30:08.895 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:30:08.897 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:30:08.899 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:30:08.900 +05:30 [INF] Deserializing the notes
2024-12-13 12:30:08.902 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:30:08.904 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5478ms
2024-12-13 12:30:08.906 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:30:08.907 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.6338ms
2024-12-13 12:30:23.441 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:30:23.445 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:30:23.446 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.366ms
2024-12-13 12:30:23.450 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:30:23.453 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:30:23.454 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:30:23.455 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:30:23.457 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:30:23.459 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:30:23.462 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 12:30:23.463 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 12:30:23.465 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 12:30:23.481 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 12:30:23.485 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 12:30:23.499 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 12:30:23.504 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 12:30:23.505 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 12:30:23.507 +05:30 [INF] Notes retrieved successfully
2024-12-13 12:30:23.508 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:30:23.511 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 53.9429ms
2024-12-13 12:30:23.513 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:30:23.515 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 64.8991ms
2024-12-13 12:36:10.700 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:36:10.712 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:36:10.713 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.8349ms
2024-12-13 12:36:10.717 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:36:10.722 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:36:10.724 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:36:10.727 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:36:10.733 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:36:10.735 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:36:10.737 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 12:36:10.738 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 12:36:10.738 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 12:36:10.750 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 12:36:10.759 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 12:36:10.773 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 12:36:10.777 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 12:36:10.778 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 12:36:10.780 +05:30 [INF] Notes retrieved successfully
2024-12-13 12:36:10.781 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:36:10.784 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 51.119ms
2024-12-13 12:36:10.785 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:36:10.793 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 75.5536ms
2024-12-13 12:36:20.716 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:36:20.719 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:36:20.720 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4426ms
2024-12-13 12:36:20.724 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:36:20.729 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:36:20.731 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:36:20.732 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:36:20.736 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:36:20.738 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:36:20.740 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:36:20.741 +05:30 [INF] Deserializing the notes
2024-12-13 12:36:20.743 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:36:20.745 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.3693ms
2024-12-13 12:36:20.748 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:36:20.750 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.4538ms
2024-12-13 12:37:16.684 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:37:16.696 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:37:16.696 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.1868ms
2024-12-13 12:37:16.701 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:37:16.705 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:37:16.707 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:37:16.709 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:37:16.712 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:37:16.715 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:37:16.716 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:37:16.717 +05:30 [INF] Deserializing the notes
2024-12-13 12:37:16.719 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:37:16.722 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.4067ms
2024-12-13 12:37:16.727 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:37:16.729 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.3025ms
2024-12-13 12:37:23.297 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:37:23.299 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:37:23.300 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.2806ms
2024-12-13 12:37:25.264 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:37:25.287 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:37:25.290 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:37:25.291 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:37:25.294 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:37:25.295 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:37:25.297 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:37:25.298 +05:30 [INF] Deserializing the notes
2024-12-13 12:37:25.299 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:37:25.301 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.4173ms
2024-12-13 12:37:25.303 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:37:25.306 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 57.3229ms
2024-12-13 12:43:21.815 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:43:21.825 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:43:21.826 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.7307ms
2024-12-13 12:43:21.875 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:43:21.879 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:43:21.881 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:43:21.882 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:43:21.886 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:43:21.888 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:43:21.890 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 12:43:21.891 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 12:43:21.892 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 12:43:21.923 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 12:43:21.926 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 12:43:21.938 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 12:43:21.942 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 12:43:21.943 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 12:43:21.944 +05:30 [INF] Notes retrieved successfully
2024-12-13 12:43:21.945 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:43:21.947 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 61.1365ms
2024-12-13 12:43:21.948 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:43:21.950 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 75.1657ms
2024-12-13 12:44:39.898 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:44:39.901 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:44:39.903 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.6287ms
2024-12-13 12:44:39.917 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:44:39.921 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:44:39.922 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:44:39.926 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:44:39.929 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:44:39.931 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:44:39.933 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:44:39.934 +05:30 [INF] Deserializing the notes
2024-12-13 12:44:39.961 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:44:39.977 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 48.5761ms
2024-12-13 12:44:39.978 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:44:39.984 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 64.2414ms
2024-12-13 12:46:51.636 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1037 - null null
2024-12-13 12:46:51.648 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:46:51.650 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1037 - 204 null null 13.825ms
2024-12-13 12:46:51.652 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1037 - application/json 69
2024-12-13 12:46:51.665 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:46:51.667 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 12:46:51.686 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:46:52.164 +05:30 [INF] Received note update: {"Title":"ardewrf","Description":"dergf","Color":"#E2F6D3"}
2024-12-13 12:46:52.168 +05:30 [INF] Updating note with ID: 1037
2024-12-13 12:46:52.174 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1037
2024-12-13 12:46:52.179 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 12:46:52.189 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 12:46:52.196 +05:30 [INF] Retrieving note with ID: 1037
2024-12-13 12:46:52.243 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 12:46:52.285 +05:30 [INF] User with ID: 1 has permission to update note ID: 1037
2024-12-13 12:46:52.461 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-13 12:46:52.498 +05:30 [INF] Successfully updated note with ID: 1037
2024-12-13 12:46:52.508 +05:30 [INF] Retrieved notes successfully
2024-12-13 12:46:52.511 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 12:46:52.516 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 825.839ms
2024-12-13 12:46:52.520 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 12:46:52.522 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1037 - 200 null application/json; charset=utf-8 870.2825ms
2024-12-13 12:46:53.078 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1037 - null null
2024-12-13 12:46:53.083 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:46:53.084 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1037 - 204 null null 6.0066ms
2024-12-13 12:46:53.086 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1037 - application/json 4
2024-12-13 12:46:53.096 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:46:53.098 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-13 12:46:53.107 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:46:53.123 +05:30 [INF] Received noteId: 1037, isArchive: True
2024-12-13 12:46:53.125 +05:30 [INF] Received request to toggle archive status for note with ID: 1037
2024-12-13 12:46:53.130 +05:30 [INF] Initiating toggle of archive status for note with ID: 1037 for user ID: 1
2024-12-13 12:46:53.139 +05:30 [INF] Received isArchive value: True
2024-12-13 12:46:53.149 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 12:46:53.161 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 12:46:53.176 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-13 12:46:53.182 +05:30 [INF] Note with ID: 1037 archive status updated to true
2024-12-13 12:46:53.184 +05:30 [INF] Successfully toggled archive status for note with ID: 1037
2024-12-13 12:46:53.185 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:46:53.187 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 74.5787ms
2024-12-13 12:46:53.189 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-13 12:46:53.190 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1037 - 200 null application/json; charset=utf-8 104.1657ms
2024-12-13 12:46:58.704 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:46:58.709 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:46:58.711 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.8956ms
2024-12-13 12:46:58.714 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:46:58.720 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:46:58.723 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:46:58.724 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:46:58.727 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:46:58.730 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:46:58.734 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 12:46:58.739 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 12:46:58.741 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 12:46:58.749 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 12:46:58.752 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 12:46:58.766 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 12:46:58.770 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 12:46:58.771 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 12:46:58.773 +05:30 [INF] Notes retrieved successfully
2024-12-13 12:46:58.774 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:46:58.776 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 48.8622ms
2024-12-13 12:46:58.778 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:46:58.779 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 65.4567ms
2024-12-13 12:47:01.078 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - null null
2024-12-13 12:47:01.083 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:47:01.084 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - 204 null null 5.9757ms
2024-12-13 12:47:01.087 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - application/json 5
2024-12-13 12:47:01.096 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:47:01.098 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-13 12:47:01.102 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:47:01.105 +05:30 [INF] Received noteId: 1034, isArchive: False
2024-12-13 12:47:01.107 +05:30 [INF] Received request to toggle archive status for note with ID: 1034
2024-12-13 12:47:01.110 +05:30 [INF] Initiating toggle of archive status for note with ID: 1034 for user ID: 1
2024-12-13 12:47:01.117 +05:30 [INF] Received isArchive value: False
2024-12-13 12:47:01.123 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 12:47:01.133 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 12:47:01.144 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-13 12:47:01.153 +05:30 [INF] Note with ID: 1034 archive status updated to false
2024-12-13 12:47:01.154 +05:30 [INF] Successfully toggled archive status for note with ID: 1034
2024-12-13 12:47:01.155 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:47:01.157 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 52.6025ms
2024-12-13 12:47:01.160 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-13 12:47:01.162 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - 200 null application/json; charset=utf-8 74.9038ms
2024-12-13 12:47:09.921 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:47:09.927 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:47:09.928 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.813ms
2024-12-13 12:47:09.931 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:47:09.939 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:47:09.941 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:47:09.943 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:47:09.948 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:47:09.953 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:47:09.956 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 12:47:09.961 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 12:47:09.962 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 12:47:09.968 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 12:47:09.974 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 12:47:09.979 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 12:47:09.986 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 12:47:09.989 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 12:47:09.992 +05:30 [INF] Notes retrieved successfully
2024-12-13 12:47:09.993 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:47:09.995 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 47.1024ms
2024-12-13 12:47:09.999 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:47:10.003 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 71.8352ms
2024-12-13 12:47:16.959 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:47:16.964 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:47:16.966 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.2319ms
2024-12-13 12:47:16.969 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:47:16.981 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:47:16.983 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:47:16.985 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:47:16.988 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:47:16.992 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:47:16.994 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:47:16.995 +05:30 [INF] Deserializing the notes
2024-12-13 12:47:16.996 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:47:16.998 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.4117ms
2024-12-13 12:47:17.000 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:47:17.002 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.0397ms
2024-12-13 12:50:28.799 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:50:28.811 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:50:28.812 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.1953ms
2024-12-13 12:50:28.815 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:50:28.819 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:50:28.822 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:50:28.824 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:50:28.828 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:50:28.833 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:50:28.836 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:50:28.837 +05:30 [INF] Deserializing the notes
2024-12-13 12:50:28.839 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:50:28.841 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.9001ms
2024-12-13 12:50:28.844 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:50:28.847 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.3997ms
2024-12-13 12:56:59.174 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 12:56:59.186 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:56:59.187 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.0807ms
2024-12-13 12:56:59.195 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:56:59.204 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:56:59.206 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:56:59.208 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:56:59.214 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:56:59.219 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:56:59.221 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 12:56:59.222 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 12:56:59.224 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 12:56:59.252 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 12:56:59.258 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 12:56:59.271 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 12:56:59.277 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 12:56:59.278 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 12:56:59.280 +05:30 [INF] Notes retrieved successfully
2024-12-13 12:56:59.282 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:56:59.286 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 72.1142ms
2024-12-13 12:56:59.289 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:56:59.290 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 95.7456ms
2024-12-13 12:57:02.435 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 12:57:02.438 +05:30 [INF] CORS policy execution successful.
2024-12-13 12:57:02.439 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:57:02.441 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 12:57:02.444 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 12:57:02.446 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 12:57:02.447 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 12:57:02.448 +05:30 [INF] Deserializing the notes
2024-12-13 12:57:02.449 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 12:57:02.451 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.1666ms
2024-12-13 12:57:02.452 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 12:57:02.454 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.029ms
2024-12-13 14:49:40.108 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 14:49:40.118 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:49:40.119 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.0581ms
2024-12-13 14:49:40.125 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 14:49:40.132 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:49:40.140 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '13-12-2024 07:43:48', Current time (UTC): '13-12-2024 09:19:40'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-13 14:49:40.166 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-13 14:49:40.256 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-13 14:49:40.349 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-13 14:49:40.355 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-13 14:49:40.359 +05:30 [ERR] Connection id "0HN8R85M9MPK2", Request id "0HN8R85M9MPK2:00000003": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-13 14:49:40.402 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 277.5802ms
2024-12-13 14:49:42.642 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 14:49:42.645 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:49:42.648 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '13-12-2024 07:43:48', Current time (UTC): '13-12-2024 09:19:42'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-13 14:49:42.656 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-13 14:49:42.690 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-13 14:49:42.765 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-13 14:49:42.772 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-13 14:49:42.775 +05:30 [ERR] Connection id "0HN8R85M9MPK2", Request id "0HN8R85M9MPK2:00000005": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-13 14:49:42.786 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 144.3988ms
2024-12-13 14:49:51.125 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 14:49:51.128 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:49:51.129 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.6439ms
2024-12-13 14:49:51.133 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 14:49:51.143 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:49:51.146 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '13-12-2024 07:43:48', Current time (UTC): '13-12-2024 09:19:51'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-13 14:49:51.154 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-13 14:49:51.188 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-13 14:49:51.254 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-13 14:49:51.259 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-13 14:49:51.262 +05:30 [ERR] Connection id "0HN8R85M9MPK2", Request id "0HN8R85M9MPK2:00000009": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-13 14:49:51.270 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 137.6065ms
2024-12-13 14:49:53.747 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 14:49:53.750 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:49:53.752 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '13-12-2024 07:43:48', Current time (UTC): '13-12-2024 09:19:53'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-13 14:49:53.758 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-13 14:49:53.787 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-13 14:49:53.845 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-13 14:49:53.851 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-13 14:49:53.853 +05:30 [ERR] Connection id "0HN8R85M9MPK2", Request id "0HN8R85M9MPK2:0000000B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-13 14:49:53.863 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 116.5626ms
2024-12-13 14:49:55.116 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 14:49:55.119 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:49:55.122 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '13-12-2024 07:43:48', Current time (UTC): '13-12-2024 09:19:55'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-13 14:49:55.127 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-13 14:49:55.158 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-13 14:49:55.215 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-13 14:49:55.221 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-13 14:49:55.223 +05:30 [ERR] Connection id "0HN8R85M9MPK2", Request id "0HN8R85M9MPK2:0000000D": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-13 14:49:55.232 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 116.5574ms
2024-12-13 14:49:57.948 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 14:49:57.952 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:49:57.955 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.8518ms
2024-12-13 14:49:57.959 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 14:49:57.964 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:49:57.967 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '13-12-2024 07:43:48', Current time (UTC): '13-12-2024 09:19:57'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-13 14:49:57.974 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-13 14:49:58.007 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-13 14:49:58.066 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-13 14:49:58.073 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-13 14:49:58.075 +05:30 [ERR] Connection id "0HN8R85M9MPK2", Request id "0HN8R85M9MPK2:00000011": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-13 14:49:58.082 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 123.3506ms
2024-12-13 14:50:00.145 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 14:50:00.149 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:50:00.152 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '13-12-2024 07:43:48', Current time (UTC): '13-12-2024 09:20:00'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-13 14:50:00.157 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-13 14:50:00.190 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-13 14:50:00.257 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-13 14:50:00.261 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-13 14:50:00.262 +05:30 [ERR] Connection id "0HN8R85M9MPK2", Request id "0HN8R85M9MPK2:00000013": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-13 14:50:00.269 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 124.8349ms
2024-12-13 14:50:39.637 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 14:50:39.649 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:50:39.651 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 15.6498ms
2024-12-13 14:50:39.656 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 14:50:39.664 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:50:39.666 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '13-12-2024 07:43:48', Current time (UTC): '13-12-2024 09:20:39'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-13 14:50:39.672 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-13 14:50:39.701 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-13 14:50:39.764 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-13 14:50:39.769 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-13 14:50:39.770 +05:30 [ERR] Connection id "0HN8R85M9MPK2", Request id "0HN8R85M9MPK2:00000017": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-13 14:50:39.777 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 121.6685ms
2024-12-13 14:52:23.709 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 14:52:23.723 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:52:23.725 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.4899ms
2024-12-13 14:52:23.728 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 14:52:23.732 +05:30 [INF] CORS policy execution successful.
2024-12-13 14:52:23.735 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '13-12-2024 07:43:48', Current time (UTC): '13-12-2024 09:22:23'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-13 14:52:23.740 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-13 14:52:23.769 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-13 14:52:23.834 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-13 14:52:23.844 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-13 14:52:23.848 +05:30 [ERR] Connection id "0HN8R85M9MPK2", Request id "0HN8R85M9MPK2:0000001B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-13 14:52:23.859 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 131.4489ms
2024-12-13 15:17:57.742 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-13 15:17:57.753 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:17:57.755 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 13.1962ms
2024-12-13 15:17:57.758 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-13 15:17:57.764 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:17:57.770 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-13 15:17:57.774 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-13 15:17:57.808 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-13 15:17:57.809 +05:30 [INF] Checking if the user present
2024-12-13 15:17:57.810 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-13 15:17:57.856 +05:30 [INF] Executed DbCommand (19ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-13 15:17:57.863 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-13 15:17:57.864 +05:30 [INF] Verifying the password
2024-12-13 15:17:58.205 +05:30 [INF] Password is valid and token is generated
2024-12-13 15:17:58.207 +05:30 [INF] Login successful
2024-12-13 15:17:58.208 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 15:17:58.209 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 433.3576ms
2024-12-13 15:17:58.214 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-13 15:17:58.216 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 458.4052ms
2024-12-13 15:17:58.248 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:17:58.253 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:17:58.255 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6541ms
2024-12-13 15:17:58.259 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:17:58.262 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:17:58.264 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:17:58.267 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:17:58.272 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:17:58.277 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:17:58.281 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 15:17:58.283 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 15:17:58.287 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:17:58.295 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:17:58.298 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 15:17:58.313 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 15:17:58.316 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 15:17:58.318 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 15:17:58.322 +05:30 [INF] Notes retrieved successfully
2024-12-13 15:17:58.323 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:17:58.325 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 53.3291ms
2024-12-13 15:17:58.327 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:17:58.332 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 73.2505ms
2024-12-13 15:18:07.081 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-13 15:18:07.086 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:18:07.087 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 6.356ms
2024-12-13 15:18:07.090 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 59
2024-12-13 15:18:07.100 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:18:07.102 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:18:07.103 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:18:07.107 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#B4DDD3"}
2024-12-13 15:18:07.109 +05:30 [INF] Updating note with ID: 1034
2024-12-13 15:18:07.112 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-13 15:18:07.113 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:18:07.124 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:18:07.136 +05:30 [INF] Retrieving note with ID: 1034
2024-12-13 15:18:07.141 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 15:18:07.144 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-13 15:18:07.145 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-13 15:18:07.147 +05:30 [INF] Retrieved notes successfully
2024-12-13 15:18:07.152 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 15:18:07.155 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 50.2003ms
2024-12-13 15:18:07.158 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:18:07.159 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 69.3147ms
2024-12-13 15:19:44.621 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:19:44.633 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:19:44.635 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.1956ms
2024-12-13 15:19:44.638 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:19:44.642 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:19:44.643 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:19:44.645 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:19:44.650 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:19:44.652 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:19:44.656 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 15:19:44.658 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 15:19:44.659 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:19:44.671 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:19:44.677 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 15:19:44.691 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 15:19:44.697 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 15:19:44.698 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 15:19:44.701 +05:30 [INF] Notes retrieved successfully
2024-12-13 15:19:44.702 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:19:44.704 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 54.2698ms
2024-12-13 15:19:44.708 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:19:44.717 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 79.0191ms
2024-12-13 15:19:49.054 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:19:49.058 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:19:49.059 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:19:49.060 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:19:49.064 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:19:49.066 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:19:49.069 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:19:49.070 +05:30 [INF] Deserializing the notes
2024-12-13 15:19:49.071 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:19:49.073 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5692ms
2024-12-13 15:19:49.075 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:19:49.077 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.3888ms
2024-12-13 15:19:52.935 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:19:52.939 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:19:52.940 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1267ms
2024-12-13 15:19:52.943 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:19:52.953 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:19:52.955 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:19:52.957 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:19:52.963 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:19:52.965 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:19:52.968 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:19:52.970 +05:30 [INF] Deserializing the notes
2024-12-13 15:19:52.973 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:19:52.974 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.7151ms
2024-12-13 15:19:52.978 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:19:52.981 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 38.8112ms
2024-12-13 15:20:53.866 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:20:53.871 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:20:53.872 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6958ms
2024-12-13 15:20:53.875 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:20:53.881 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:20:53.882 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:20:53.884 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:20:53.887 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:20:53.889 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:20:53.893 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:20:53.896 +05:30 [INF] Deserializing the notes
2024-12-13 15:20:53.897 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:20:53.900 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.0171ms
2024-12-13 15:20:53.903 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:20:53.905 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.1761ms
2024-12-13 15:21:00.620 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:21:00.625 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:21:00.626 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.4355ms
2024-12-13 15:21:00.630 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:21:00.637 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:21:00.639 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:21:00.641 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:21:00.646 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:21:00.650 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:21:00.652 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:21:00.655 +05:30 [INF] Deserializing the notes
2024-12-13 15:21:00.656 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:21:00.658 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.4935ms
2024-12-13 15:21:00.662 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:21:00.665 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.4506ms
2024-12-13 15:21:09.200 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:21:09.205 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:21:09.207 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6564ms
2024-12-13 15:21:09.211 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:21:09.216 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:21:09.218 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:21:09.220 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:21:09.224 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:21:09.227 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:21:09.230 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:21:09.231 +05:30 [INF] Deserializing the notes
2024-12-13 15:21:09.232 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:21:09.235 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6495ms
2024-12-13 15:21:09.237 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:21:09.239 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.5076ms
2024-12-13 15:21:50.704 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:21:50.717 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:21:50.718 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.7375ms
2024-12-13 15:21:50.726 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:21:50.732 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:21:50.734 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:21:50.735 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:21:50.738 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:21:50.740 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:21:50.743 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:21:50.744 +05:30 [INF] Deserializing the notes
2024-12-13 15:21:50.745 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:21:50.747 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.9333ms
2024-12-13 15:21:50.749 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:21:50.751 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.7945ms
2024-12-13 15:21:52.819 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:21:52.825 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:21:52.826 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:21:52.828 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:21:52.832 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:21:52.837 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:21:52.839 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:21:52.842 +05:30 [INF] Deserializing the notes
2024-12-13 15:21:52.843 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:21:52.848 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.5185ms
2024-12-13 15:21:52.850 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:21:52.851 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.6984ms
2024-12-13 15:23:07.506 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:23:07.522 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:23:07.524 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 17.9674ms
2024-12-13 15:23:07.528 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:23:07.539 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:23:07.541 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:23:07.543 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:23:07.549 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:23:07.551 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:23:07.554 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:23:07.555 +05:30 [INF] Deserializing the notes
2024-12-13 15:23:07.557 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:23:07.559 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.1124ms
2024-12-13 15:23:07.564 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:23:07.571 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.7278ms
2024-12-13 15:23:14.279 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-13 15:23:14.284 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:23:14.285 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 6.8442ms
2024-12-13 15:23:14.289 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 57
2024-12-13 15:23:14.299 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:23:14.301 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:23:14.302 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:23:14.305 +05:30 [INF] Received note update: {"Title":"stri","Description":"string","Color":"#B4DDD3"}
2024-12-13 15:23:14.306 +05:30 [INF] Updating note with ID: 1034
2024-12-13 15:23:14.307 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-13 15:23:14.308 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:23:14.335 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:23:14.342 +05:30 [INF] Retrieving note with ID: 1034
2024-12-13 15:23:14.351 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 15:23:14.354 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-13 15:23:14.365 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Title] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-13 15:23:14.368 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-13 15:23:14.372 +05:30 [INF] Retrieved notes successfully
2024-12-13 15:23:14.375 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 15:23:14.378 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 73.3484ms
2024-12-13 15:23:14.381 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:23:14.382 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 94.3068ms
2024-12-13 15:25:08.649 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-13 15:25:08.658 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:25:08.659 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 10.2053ms
2024-12-13 15:25:08.662 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 57
2024-12-13 15:25:08.667 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:25:08.668 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:25:08.671 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:25:08.681 +05:30 [INF] Received note update: {"Title":"stri","Description":"string","Color":"#B4DDD3"}
2024-12-13 15:25:08.684 +05:30 [INF] Updating note with ID: 1034
2024-12-13 15:25:08.685 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-13 15:25:08.685 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:25:08.694 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:25:08.697 +05:30 [INF] Retrieving note with ID: 1034
2024-12-13 15:25:08.703 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 15:25:08.709 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-13 15:25:08.711 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-13 15:25:08.713 +05:30 [INF] Retrieved notes successfully
2024-12-13 15:25:08.714 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 15:25:08.717 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 36.8063ms
2024-12-13 15:25:08.720 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:25:08.722 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 60.6478ms
2024-12-13 15:26:18.530 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/325 - application/json 71
2024-12-13 15:26:18.544 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:26:18.545 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-13 15:26:18.547 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2024-12-13 15:26:18.549 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/325 - 401 null application/json 19.5566ms
2024-12-13 15:27:37.589 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:27:37.594 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:27:37.595 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.3005ms
2024-12-13 15:27:37.599 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:27:37.605 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:27:37.607 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:27:37.609 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:27:37.613 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:27:37.616 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:27:37.619 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 15:27:37.621 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 15:27:37.623 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:27:37.656 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:27:37.661 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 15:27:37.673 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 15:27:37.677 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 15:27:37.678 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 15:27:37.680 +05:30 [INF] Notes retrieved successfully
2024-12-13 15:27:37.682 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:27:37.684 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 70.9821ms
2024-12-13 15:27:37.686 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:27:37.688 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 89.6551ms
2024-12-13 15:30:02.151 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:30:02.163 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:30:02.164 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.3153ms
2024-12-13 15:30:02.168 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:30:02.174 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:30:02.175 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:02.178 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:30:02.182 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:30:02.185 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:30:02.187 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:30:02.190 +05:30 [INF] Deserializing the notes
2024-12-13 15:30:02.193 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:30:02.198 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.8047ms
2024-12-13 15:30:02.201 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:02.202 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.8583ms
2024-12-13 15:30:24.834 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:30:24.845 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:30:24.846 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.3885ms
2024-12-13 15:30:24.851 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:30:24.856 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:30:24.857 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:24.858 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:30:24.861 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:30:24.864 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:30:24.868 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:30:24.869 +05:30 [INF] Deserializing the notes
2024-12-13 15:30:24.870 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:30:24.874 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.7625ms
2024-12-13 15:30:24.876 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:24.878 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.2572ms
2024-12-13 15:30:27.788 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:30:27.795 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:30:27.797 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:27.799 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:30:27.803 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:30:27.806 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:30:27.809 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:30:27.810 +05:30 [INF] Deserializing the notes
2024-12-13 15:30:27.813 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:30:27.814 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.1054ms
2024-12-13 15:30:27.817 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:27.820 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.3657ms
2024-12-13 15:30:43.871 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:30:43.878 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:30:43.879 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.7084ms
2024-12-13 15:30:43.882 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:30:43.886 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:30:43.887 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:43.890 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:30:43.893 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:30:43.898 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:30:43.900 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:30:43.901 +05:30 [INF] Deserializing the notes
2024-12-13 15:30:43.904 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:30:43.906 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.3617ms
2024-12-13 15:30:43.910 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:43.914 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.6204ms
2024-12-13 15:30:46.320 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:30:46.326 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:30:46.328 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:46.329 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:30:46.331 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:30:46.333 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:30:46.335 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:30:46.336 +05:30 [INF] Deserializing the notes
2024-12-13 15:30:46.337 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:30:46.340 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.2947ms
2024-12-13 15:30:46.342 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:46.344 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.8497ms
2024-12-13 15:30:47.960 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:30:47.965 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:30:47.966 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:47.968 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:30:47.970 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:30:47.973 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:30:47.976 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:30:47.977 +05:30 [INF] Deserializing the notes
2024-12-13 15:30:47.978 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:30:47.980 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.2039ms
2024-12-13 15:30:47.983 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:47.984 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.0408ms
2024-12-13 15:30:57.802 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:30:57.806 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:30:57.807 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.0607ms
2024-12-13 15:30:57.810 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:30:57.813 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:30:57.814 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:57.815 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:30:57.817 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:30:57.820 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:30:57.822 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:30:57.823 +05:30 [INF] Deserializing the notes
2024-12-13 15:30:57.825 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:30:57.827 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7955ms
2024-12-13 15:30:57.829 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:30:57.830 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.382ms
2024-12-13 15:39:53.488 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:39:53.508 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:39:53.509 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 21.6695ms
2024-12-13 15:39:53.513 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:39:53.519 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:39:53.521 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:39:53.525 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:39:53.530 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:39:53.533 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:39:53.535 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 15:39:53.536 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 15:39:53.537 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:39:53.565 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:39:53.569 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 15:39:53.580 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 15:39:53.584 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 15:39:53.585 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 15:39:53.586 +05:30 [INF] Notes retrieved successfully
2024-12-13 15:39:53.587 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:39:53.589 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 60.4628ms
2024-12-13 15:39:53.592 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:39:53.593 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 80.7634ms
2024-12-13 15:39:56.499 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:39:56.502 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:39:56.503 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:39:56.505 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:39:56.509 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:39:56.513 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:39:56.515 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:39:56.517 +05:30 [INF] Deserializing the notes
2024-12-13 15:39:56.520 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:39:56.524 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.7657ms
2024-12-13 15:39:56.526 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:39:56.527 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.638ms
2024-12-13 15:44:14.772 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - null null
2024-12-13 15:44:14.784 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:44:14.789 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - 204 null null 16.9676ms
2024-12-13 15:44:14.793 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1049 - application/json 63
2024-12-13 15:44:14.806 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:44:14.807 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:44:14.808 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:44:14.812 +05:30 [INF] Received note update: {"Title":"djbsued","Description":"bsdcuyzgs","Color":"#D3BFDB"}
2024-12-13 15:44:14.814 +05:30 [INF] Updating note with ID: 1049
2024-12-13 15:44:14.815 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1049
2024-12-13 15:44:14.816 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:44:14.827 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:44:14.831 +05:30 [INF] Retrieving note with ID: 1049
2024-12-13 15:44:14.836 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 15:44:14.840 +05:30 [INF] User with ID: 1 has permission to update note ID: 1049
2024-12-13 15:44:14.844 +05:30 [INF] Successfully updated note with ID: 1049
2024-12-13 15:44:14.848 +05:30 [INF] Retrieved notes successfully
2024-12-13 15:44:14.850 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 15:44:14.854 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 43.1149ms
2024-12-13 15:44:14.856 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:44:14.858 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1049 - 200 null application/json; charset=utf-8 65.4537ms
2024-12-13 15:44:21.999 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - null null
2024-12-13 15:44:22.004 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:44:22.006 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - 204 null null 7.0907ms
2024-12-13 15:44:22.008 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1049 - application/json 69
2024-12-13 15:44:22.013 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:44:22.015 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:44:22.022 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:44:22.025 +05:30 [INF] Received note update: {"Title":"djbsuedyyr67r","Description":"bsdcuyzgs","Color":"#D3BFDB"}
2024-12-13 15:44:22.026 +05:30 [INF] Updating note with ID: 1049
2024-12-13 15:44:22.027 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1049
2024-12-13 15:44:22.027 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:44:22.033 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:44:22.037 +05:30 [INF] Retrieving note with ID: 1049
2024-12-13 15:44:22.040 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 15:44:22.044 +05:30 [INF] User with ID: 1 has permission to update note ID: 1049
2024-12-13 15:44:22.055 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Title] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-13 15:44:22.062 +05:30 [INF] Successfully updated note with ID: 1049
2024-12-13 15:44:22.065 +05:30 [INF] Retrieved notes successfully
2024-12-13 15:44:22.066 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 15:44:22.068 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 43.6566ms
2024-12-13 15:44:22.072 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:44:22.073 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1049 - 200 null application/json; charset=utf-8 65.4327ms
2024-12-13 15:44:25.022 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:44:25.025 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:44:25.028 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.0867ms
2024-12-13 15:44:25.034 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:44:25.045 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:44:25.048 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:44:25.050 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:44:25.053 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:44:25.054 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:44:25.057 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 15:44:25.058 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 15:44:25.059 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:44:25.063 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:44:25.067 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 15:44:25.079 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 15:44:25.083 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 15:44:25.084 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 15:44:25.086 +05:30 [INF] Notes retrieved successfully
2024-12-13 15:44:25.088 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:44:25.090 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 37.2908ms
2024-12-13 15:44:25.091 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:44:25.093 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 58.7397ms
2024-12-13 15:45:23.496 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-13 15:45:23.509 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:45:23.510 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 14.332ms
2024-12-13 15:45:23.514 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 67
2024-12-13 15:45:23.520 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:45:23.521 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:45:23.522 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:45:23.526 +05:30 [INF] Received note update: {"Title":"stri","Description":"string","Color":"#E2F6D3"}
2024-12-13 15:45:23.528 +05:30 [INF] Updating note with ID: 1034
2024-12-13 15:45:23.529 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-13 15:45:23.530 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:45:23.538 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:45:23.545 +05:30 [INF] Retrieving note with ID: 1034
2024-12-13 15:45:23.549 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 15:45:23.558 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-13 15:45:23.571 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-13 15:45:23.576 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-13 15:45:23.578 +05:30 [INF] Retrieved notes successfully
2024-12-13 15:45:23.580 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 15:45:23.584 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 59.6669ms
2024-12-13 15:45:23.588 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:45:23.591 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 77.1113ms
2024-12-13 15:51:43.148 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:51:43.163 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:51:43.166 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 17.9228ms
2024-12-13 15:51:43.169 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:51:43.181 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:51:43.182 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:51:43.185 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:51:43.192 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:51:43.198 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:51:43.200 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 15:51:43.202 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 15:51:43.203 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:51:43.227 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:51:43.232 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 15:51:43.243 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 15:51:43.249 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 15:51:43.252 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 15:51:43.256 +05:30 [INF] Notes retrieved successfully
2024-12-13 15:51:43.257 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:51:43.260 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 68.6893ms
2024-12-13 15:51:43.264 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:51:43.265 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 96.4193ms
2024-12-13 15:51:53.839 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1037 - null null
2024-12-13 15:51:53.846 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:51:53.850 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1037 - 204 null null 10.6613ms
2024-12-13 15:51:53.855 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1037 - application/json 59
2024-12-13 15:51:53.860 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:51:53.861 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:51:53.862 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:51:53.866 +05:30 [INF] Received note update: {"Title":"ardewrf","Description":"dergf","Color":"#E2F6D3"}
2024-12-13 15:51:53.867 +05:30 [INF] Updating note with ID: 1037
2024-12-13 15:51:53.868 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1037
2024-12-13 15:51:53.869 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:51:53.878 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:51:53.881 +05:30 [INF] Retrieving note with ID: 1037
2024-12-13 15:51:53.886 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 15:51:53.889 +05:30 [INF] User with ID: 1 has permission to update note ID: 1037
2024-12-13 15:51:53.891 +05:30 [INF] Successfully updated note with ID: 1037
2024-12-13 15:51:53.893 +05:30 [INF] Retrieved notes successfully
2024-12-13 15:51:53.894 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 15:51:53.896 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 30.8573ms
2024-12-13 15:51:53.899 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:51:53.903 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1037 - 200 null application/json; charset=utf-8 47.9689ms
2024-12-13 15:54:53.932 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1037 - null null
2024-12-13 15:54:53.949 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:54:53.950 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1037 - 204 null null 19.1654ms
2024-12-13 15:54:53.954 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1037 - application/json 55
2024-12-13 15:54:53.959 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:54:53.960 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:54:53.962 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:54:53.971 +05:30 [INF] Received note update: {"Title":"ard","Description":"dergf","Color":"#E2F6D3"}
2024-12-13 15:54:53.972 +05:30 [INF] Updating note with ID: 1037
2024-12-13 15:54:53.973 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1037
2024-12-13 15:54:53.974 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:54:53.984 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:54:53.990 +05:30 [INF] Retrieving note with ID: 1037
2024-12-13 15:54:53.996 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 15:54:54.000 +05:30 [INF] User with ID: 1 has permission to update note ID: 1037
2024-12-13 15:54:54.011 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Title] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-13 15:54:54.017 +05:30 [INF] Successfully updated note with ID: 1037
2024-12-13 15:54:54.019 +05:30 [INF] Retrieved notes successfully
2024-12-13 15:54:54.021 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 15:54:54.023 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 53.021ms
2024-12-13 15:54:54.025 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:54:54.028 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1037 - 200 null application/json; charset=utf-8 74.619ms
2024-12-13 15:54:57.065 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:54:57.070 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:54:57.072 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.1191ms
2024-12-13 15:54:57.076 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:54:57.075 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:54:57.089 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:54:57.095 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:54:57.097 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:54:57.098 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 23.4976ms
2024-12-13 15:54:57.102 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:54:57.118 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:54:57.122 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:54:57.123 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 15:54:57.124 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 15:54:57.125 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:54:57.129 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:54:57.133 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 15:54:57.142 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 15:54:57.149 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 15:54:57.151 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 15:54:57.154 +05:30 [INF] Notes retrieved successfully
2024-12-13 15:54:57.156 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:54:57.160 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 42.6639ms
2024-12-13 15:54:57.163 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:54:57.165 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:54:57.170 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:54:57.172 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 95.8853ms
2024-12-13 15:54:57.173 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:54:57.180 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:54:57.183 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:54:57.185 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:54:57.187 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:54:57.189 +05:30 [INF] Deserializing the notes
2024-12-13 15:54:57.190 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:54:57.192 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4456ms
2024-12-13 15:54:57.193 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:54:57.195 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.105ms
2024-12-13 15:55:00.317 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:55:00.322 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:55:00.326 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:55:00.331 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:55:00.337 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:55:00.342 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:55:00.343 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:55:00.344 +05:30 [INF] Deserializing the notes
2024-12-13 15:55:00.345 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:55:00.347 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.1288ms
2024-12-13 15:55:00.349 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:55:00.350 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.3048ms
2024-12-13 15:55:04.130 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:55:04.135 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:55:04.137 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6988ms
2024-12-13 15:55:04.141 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:55:04.151 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:55:04.153 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:55:04.157 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:55:04.163 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:55:04.166 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:55:04.168 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:55:04.169 +05:30 [INF] Deserializing the notes
2024-12-13 15:55:04.171 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:55:04.173 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.6202ms
2024-12-13 15:55:04.174 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:55:04.176 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.49ms
2024-12-13 15:55:21.521 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-13 15:55:21.526 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:55:21.527 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 6.9135ms
2024-12-13 15:55:21.530 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 59
2024-12-13 15:55:21.534 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:55:21.537 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:55:21.540 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:55:21.544 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#E2F6D3"}
2024-12-13 15:55:21.546 +05:30 [INF] Updating note with ID: 1034
2024-12-13 15:55:21.550 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-13 15:55:21.556 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:55:21.569 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:55:21.576 +05:30 [INF] Retrieving note with ID: 1034
2024-12-13 15:55:21.584 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 15:55:21.587 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-13 15:55:21.597 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Title] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-13 15:55:21.611 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-13 15:55:21.615 +05:30 [INF] Retrieved notes successfully
2024-12-13 15:55:21.616 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 15:55:21.618 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 74.8287ms
2024-12-13 15:55:21.623 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:55:21.626 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 96.9822ms
2024-12-13 15:56:48.969 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:56:48.973 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:56:48.975 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.0595ms
2024-12-13 15:56:48.979 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:56:48.984 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:56:48.985 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:56:48.987 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:56:48.991 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:56:48.993 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:56:48.994 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 15:56:48.996 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 15:56:48.997 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:56:49.007 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:56:49.011 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 15:56:49.026 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 15:56:49.031 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 15:56:49.033 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 15:56:49.034 +05:30 [INF] Notes retrieved successfully
2024-12-13 15:56:49.057 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:56:49.060 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 69.5065ms
2024-12-13 15:56:49.061 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:56:49.068 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 90.0264ms
2024-12-13 15:56:58.325 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-13 15:56:58.332 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:56:58.334 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 8.9625ms
2024-12-13 15:56:58.336 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 69
2024-12-13 15:56:58.342 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:56:58.343 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:56:58.344 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:56:58.352 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#B4DDD3"}
2024-12-13 15:56:58.356 +05:30 [INF] Updating note with ID: 1034
2024-12-13 15:56:58.359 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-13 15:56:58.360 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:56:58.370 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:56:58.373 +05:30 [INF] Retrieving note with ID: 1034
2024-12-13 15:56:58.378 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 15:56:58.384 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-13 15:56:58.393 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-13 15:56:58.399 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-13 15:56:58.404 +05:30 [INF] Retrieved notes successfully
2024-12-13 15:56:58.406 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 15:56:58.409 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 57.7192ms
2024-12-13 15:56:58.413 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:56:58.414 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 77.9453ms
2024-12-13 15:57:43.038 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:57:43.050 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:57:43.051 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.91ms
2024-12-13 15:57:43.055 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:57:43.062 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:57:43.063 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:57:43.065 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:57:43.070 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:57:43.072 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:57:43.075 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 15:57:43.077 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 15:57:43.079 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:57:43.092 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:57:43.097 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 15:57:43.109 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 15:57:43.113 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 15:57:43.115 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 15:57:43.118 +05:30 [INF] Notes retrieved successfully
2024-12-13 15:57:43.120 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:57:43.124 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 54.5174ms
2024-12-13 15:57:43.125 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:57:43.127 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 71.5435ms
2024-12-13 15:57:55.972 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:57:55.978 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:57:55.979 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.1276ms
2024-12-13 15:57:55.982 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:57:55.987 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:57:55.990 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:57:55.992 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:57:55.995 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:57:55.998 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:57:56.001 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 15:57:56.004 +05:30 [INF] Deserializing the notes
2024-12-13 15:57:56.005 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:57:56.007 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.9668ms
2024-12-13 15:57:56.010 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:57:56.011 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.5498ms
2024-12-13 15:59:10.196 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-13 15:59:10.208 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:59:10.211 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 14.8888ms
2024-12-13 15:59:10.213 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 67
2024-12-13 15:59:10.220 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:59:10.223 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:59:10.224 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:59:10.230 +05:30 [INF] Received note update: {"Title":"stri","Description":"string","Color":"#B4DDD3"}
2024-12-13 15:59:10.231 +05:30 [INF] Updating note with ID: 1034
2024-12-13 15:59:10.234 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-13 15:59:10.235 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:59:10.245 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:59:10.250 +05:30 [INF] Retrieving note with ID: 1034
2024-12-13 15:59:10.255 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 15:59:10.259 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-13 15:59:10.266 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Title] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-13 15:59:10.272 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-13 15:59:10.274 +05:30 [INF] Retrieved notes successfully
2024-12-13 15:59:10.275 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 15:59:10.277 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 49.7694ms
2024-12-13 15:59:10.278 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:59:10.280 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 66.7617ms
2024-12-13 15:59:22.794 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-13 15:59:22.799 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:59:22.800 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 6.7833ms
2024-12-13 15:59:22.803 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 66
2024-12-13 15:59:22.814 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:59:22.818 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:59:22.822 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:59:22.831 +05:30 [INF] Received note update: {"Title":"str","Description":"string","Color":"#B4DDD3"}
2024-12-13 15:59:22.832 +05:30 [INF] Updating note with ID: 1034
2024-12-13 15:59:22.835 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-13 15:59:22.837 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:59:22.845 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:59:22.848 +05:30 [INF] Retrieving note with ID: 1034
2024-12-13 15:59:22.852 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 15:59:22.857 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-13 15:59:22.867 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Title] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-13 15:59:22.875 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-13 15:59:22.878 +05:30 [INF] Retrieved notes successfully
2024-12-13 15:59:22.879 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 15:59:22.881 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 52.5208ms
2024-12-13 15:59:22.883 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 15:59:22.885 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 82.7439ms
2024-12-13 15:59:33.429 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 15:59:33.433 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:59:33.436 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.6315ms
2024-12-13 15:59:33.439 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 15:59:33.450 +05:30 [INF] CORS policy execution successful.
2024-12-13 15:59:33.454 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:59:33.457 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 15:59:33.460 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 15:59:33.464 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 15:59:33.465 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 15:59:33.466 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 15:59:33.467 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 15:59:33.475 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 15:59:33.479 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 15:59:33.490 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 15:59:33.494 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 15:59:33.495 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 15:59:33.497 +05:30 [INF] Notes retrieved successfully
2024-12-13 15:59:33.498 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 15:59:33.500 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 39.4434ms
2024-12-13 15:59:33.503 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 15:59:33.506 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 67.4494ms
2024-12-13 16:03:56.998 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-13 16:03:57.011 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:03:57.013 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 15.9003ms
2024-12-13 16:03:57.016 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 70
2024-12-13 16:03:57.018 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:03:57.018 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 16:03:57.019 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:03:57.023 +05:30 [INF] Received note update: {"Title":"strdedf","Description":"string","Color":"#B4DDD3"}
2024-12-13 16:03:57.024 +05:30 [INF] Updating note with ID: 1034
2024-12-13 16:03:57.024 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-13 16:03:57.025 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 16:03:57.029 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:03:57.030 +05:30 [INF] Retrieving note with ID: 1034
2024-12-13 16:03:57.032 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 16:03:57.033 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-13 16:03:57.037 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Title] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-13 16:03:57.038 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-13 16:03:57.039 +05:30 [INF] Retrieved notes successfully
2024-12-13 16:03:57.040 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 16:03:57.040 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 18.9964ms
2024-12-13 16:03:57.041 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 16:03:57.042 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 25.438ms
2024-12-13 16:03:58.697 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:03:58.698 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:03:58.699 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.702ms
2024-12-13 16:03:58.702 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:03:58.706 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:03:58.706 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:03:58.707 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:03:58.709 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:03:58.710 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:03:58.711 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 16:03:58.712 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 16:03:58.713 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 16:03:58.716 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:03:58.719 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 16:03:58.724 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 16:03:58.725 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 16:03:58.726 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 16:03:58.727 +05:30 [INF] Notes retrieved successfully
2024-12-13 16:03:58.727 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:03:58.728 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.3501ms
2024-12-13 16:03:58.729 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:03:58.730 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.302ms
2024-12-13 16:16:11.059 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:16:11.064 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:16:11.065 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.5634ms
2024-12-13 16:16:11.068 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:16:11.070 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:16:11.071 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:16:11.072 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:16:11.074 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:16:11.075 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:16:11.076 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 16:16:11.076 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 16:16:11.077 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 16:16:11.093 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:16:11.095 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 16:16:11.103 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 16:16:11.104 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-13 16:16:11.105 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 16:16:11.106 +05:30 [INF] Notes retrieved successfully
2024-12-13 16:16:11.106 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:16:11.107 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 33.5199ms
2024-12-13 16:16:11.108 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:16:11.110 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.8526ms
2024-12-13 16:16:12.959 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:16:12.963 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:16:12.965 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:16:12.966 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:16:12.968 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:16:12.969 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:16:12.970 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:16:12.971 +05:30 [INF] Deserializing the notes
2024-12-13 16:16:12.972 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:16:12.973 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8349ms
2024-12-13 16:16:12.974 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:16:12.975 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.1583ms
2024-12-13 16:17:10.437 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:17:10.447 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:17:10.449 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.7759ms
2024-12-13 16:17:10.451 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:17:10.457 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:17:10.458 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:17:10.460 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:17:10.462 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:17:10.464 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:17:10.465 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:17:10.467 +05:30 [INF] Deserializing the notes
2024-12-13 16:17:10.468 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:17:10.470 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.4565ms
2024-12-13 16:17:10.471 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:17:10.472 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.7046ms
2024-12-13 16:17:18.479 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:17:18.482 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:17:18.482 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8221ms
2024-12-13 16:17:18.486 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:17:18.490 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:17:18.491 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:17:18.492 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:17:18.494 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:17:18.494 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:17:18.495 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:17:18.496 +05:30 [INF] Deserializing the notes
2024-12-13 16:17:18.496 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:17:18.497 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7048ms
2024-12-13 16:17:18.498 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:17:18.499 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.1243ms
2024-12-13 16:17:33.509 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:17:33.511 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:17:33.511 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.0586ms
2024-12-13 16:17:33.513 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:17:33.514 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:17:33.515 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:17:33.515 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:17:33.516 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:17:33.517 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:17:33.518 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:17:33.518 +05:30 [INF] Deserializing the notes
2024-12-13 16:17:33.520 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:17:33.522 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.7633ms
2024-12-13 16:17:33.524 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:17:33.524 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.6011ms
2024-12-13 16:17:34.773 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:17:34.778 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:17:34.780 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:17:34.781 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:17:34.782 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:17:34.783 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:17:34.785 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:17:34.785 +05:30 [INF] Deserializing the notes
2024-12-13 16:17:34.786 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:17:34.789 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.4174ms
2024-12-13 16:17:34.790 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:17:34.791 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.7903ms
2024-12-13 16:17:52.869 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:17:52.874 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:17:52.875 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.1705ms
2024-12-13 16:17:52.876 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:17:52.881 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:17:52.882 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:17:52.884 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:17:52.886 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:17:52.889 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:17:52.890 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:17:52.892 +05:30 [INF] Deserializing the notes
2024-12-13 16:17:52.893 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:17:52.895 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.4624ms
2024-12-13 16:17:52.896 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:17:52.897 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.7491ms
2024-12-13 16:18:22.606 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:18:22.610 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:18:22.611 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.0547ms
2024-12-13 16:18:22.612 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 53
2024-12-13 16:18:22.615 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:18:22.616 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-13 16:18:22.622 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:18:22.629 +05:30 [INF] Attempt to create a note
2024-12-13 16:18:22.639 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:18:22.751 +05:30 [INF] Executed DbCommand (23ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-13 16:18:22.776 +05:30 [INF] Created notes successfully
2024-12-13 16:18:22.777 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 16:18:22.779 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 154.1797ms
2024-12-13 16:18:22.781 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-13 16:18:22.782 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 169.5508ms
2024-12-13 16:18:24.897 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:18:24.899 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:18:24.902 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:18:24.903 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:18:24.907 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:18:24.908 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:18:24.909 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 16:18:24.909 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 16:18:24.910 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 16:18:24.912 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:18:24.913 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 16:18:24.919 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 16:18:24.922 +05:30 [INF] 12 notes retrieved for user with ID: 1
2024-12-13 16:18:24.925 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 16:18:24.926 +05:30 [INF] Notes retrieved successfully
2024-12-13 16:18:24.927 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:18:24.929 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.9268ms
2024-12-13 16:18:24.930 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:18:24.931 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.3997ms
2024-12-13 16:18:32.399 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:18:32.405 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:18:32.406 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7282ms
2024-12-13 16:18:32.407 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 56
2024-12-13 16:18:32.408 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:18:32.409 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-13 16:18:32.409 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:18:32.413 +05:30 [INF] Attempt to create a note
2024-12-13 16:18:32.418 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:18:32.423 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-13 16:18:32.426 +05:30 [INF] Created notes successfully
2024-12-13 16:18:32.427 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 16:18:32.428 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 15.3851ms
2024-12-13 16:18:32.429 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-13 16:18:32.429 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.6248ms
2024-12-13 16:18:34.083 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:18:34.087 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:18:34.089 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:18:34.090 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:18:34.092 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:18:34.094 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:18:34.096 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 16:18:34.100 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 16:18:34.101 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 16:18:34.104 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:18:34.105 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 16:18:34.106 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 16:18:34.107 +05:30 [INF] 13 notes retrieved for user with ID: 1
2024-12-13 16:18:34.108 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 16:18:34.108 +05:30 [INF] Notes retrieved successfully
2024-12-13 16:18:34.109 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:18:34.110 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.5851ms
2024-12-13 16:18:34.111 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:18:34.111 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.1401ms
2024-12-13 16:18:50.710 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:18:50.715 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:18:50.716 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.8509ms
2024-12-13 16:18:50.718 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:18:50.720 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:18:50.721 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:18:50.721 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:18:50.723 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:18:50.724 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:18:50.725 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:18:50.726 +05:30 [INF] Deserializing the notes
2024-12-13 16:18:50.726 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:18:50.727 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9395ms
2024-12-13 16:18:50.728 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:18:50.730 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.1428ms
2024-12-13 16:19:03.863 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:19:03.867 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:19:03.869 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.461ms
2024-12-13 16:19:03.871 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 56
2024-12-13 16:19:03.875 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:19:03.876 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-13 16:19:03.880 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:19:03.881 +05:30 [INF] Attempt to create a note
2024-12-13 16:19:03.887 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:19:03.893 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-13 16:19:03.896 +05:30 [INF] Created notes successfully
2024-12-13 16:19:03.897 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 16:19:03.898 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 16.9562ms
2024-12-13 16:19:03.898 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-13 16:19:03.899 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.9361ms
2024-12-13 16:19:07.417 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:19:07.422 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:19:07.422 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:19:07.423 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:19:07.428 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:19:07.429 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:19:07.430 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 16:19:07.431 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 16:19:07.433 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 16:19:07.435 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:19:07.441 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 16:19:07.449 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 16:19:07.451 +05:30 [INF] 14 notes retrieved for user with ID: 1
2024-12-13 16:19:07.451 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 16:19:07.452 +05:30 [INF] Notes retrieved successfully
2024-12-13 16:19:07.452 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:19:07.453 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.5922ms
2024-12-13 16:19:07.457 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:19:07.458 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.8802ms
2024-12-13 16:19:18.084 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:19:18.089 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:19:18.091 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.5525ms
2024-12-13 16:19:18.093 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 57
2024-12-13 16:19:18.097 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:19:18.097 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-13 16:19:18.097 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:19:18.099 +05:30 [INF] Attempt to create a note
2024-12-13 16:19:18.103 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:19:18.109 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-13 16:19:18.112 +05:30 [INF] Created notes successfully
2024-12-13 16:19:18.113 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 16:19:18.113 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 15.0554ms
2024-12-13 16:19:18.114 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-13 16:19:18.115 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.7938ms
2024-12-13 16:25:12.580 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:25:12.590 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:25:12.591 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.8899ms
2024-12-13 16:25:12.594 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:25:12.599 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:25:12.602 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '13-12-2024 10:47:58', Current time (UTC): '13-12-2024 10:55:12'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-13 16:25:12.605 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-13 16:25:12.630 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-13 16:25:12.667 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-13 16:25:12.670 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-13 16:25:12.671 +05:30 [ERR] Connection id "0HN8R85M9MPK3", Request id "0HN8R85M9MPK3:000000B9": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-13 16:25:12.676 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 82.3775ms
2024-12-13 16:25:15.095 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:25:15.100 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:25:15.101 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '13-12-2024 10:47:58', Current time (UTC): '13-12-2024 10:55:15'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-13 16:25:15.106 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-13 16:25:15.131 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-13 16:25:15.172 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-13 16:25:15.176 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-13 16:25:15.177 +05:30 [ERR] Connection id "0HN8R85M9MPK3", Request id "0HN8R85M9MPK3:000000BB": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-13 16:25:15.183 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 89.2649ms
2024-12-13 16:25:34.442 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-13 16:25:34.446 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:25:34.447 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 5.5506ms
2024-12-13 16:25:34.450 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-13 16:25:34.454 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:25:34.456 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-13 16:25:34.457 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-13 16:25:34.482 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-13 16:25:34.484 +05:30 [INF] Checking if the user present
2024-12-13 16:25:34.485 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-13 16:25:34.503 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-13 16:25:34.506 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-13 16:25:34.507 +05:30 [INF] Verifying the password
2024-12-13 16:25:34.698 +05:30 [INF] Password is valid and token is generated
2024-12-13 16:25:34.699 +05:30 [INF] Login successful
2024-12-13 16:25:34.701 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 16:25:34.703 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 242.3518ms
2024-12-13 16:25:34.704 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-13 16:25:34.705 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 255.8708ms
2024-12-13 16:25:34.717 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:25:34.719 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:25:34.720 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.3333ms
2024-12-13 16:25:34.724 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:25:34.726 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:25:34.727 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:25:34.730 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:25:34.732 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:25:34.734 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:25:34.735 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 16:25:34.739 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 16:25:34.741 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 16:25:34.747 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:25:34.749 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 16:25:34.758 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 16:25:34.762 +05:30 [INF] 15 notes retrieved for user with ID: 1
2024-12-13 16:25:34.762 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 16:25:34.763 +05:30 [INF] Notes retrieved successfully
2024-12-13 16:25:34.764 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:25:34.766 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 34.0484ms
2024-12-13 16:25:34.767 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:25:34.768 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.6716ms
2024-12-13 16:25:53.807 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:25:53.814 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:25:53.816 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.839ms
2024-12-13 16:25:53.819 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 59
2024-12-13 16:25:53.824 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:25:53.825 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-13 16:25:53.826 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:25:53.827 +05:30 [INF] Attempt to create a note
2024-12-13 16:25:53.832 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:25:53.840 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-13 16:25:53.842 +05:30 [INF] Created notes successfully
2024-12-13 16:25:53.843 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 16:25:53.844 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 16.779ms
2024-12-13 16:25:53.845 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-13 16:25:53.846 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.5675ms
2024-12-13 16:25:56.353 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:25:56.354 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:25:56.355 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:25:56.356 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:25:56.357 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:25:56.358 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:25:56.361 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 16:25:56.362 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 16:25:56.362 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 16:25:56.367 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:25:56.370 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 16:25:56.378 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 16:25:56.380 +05:30 [INF] 16 notes retrieved for user with ID: 1
2024-12-13 16:25:56.381 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 16:25:56.382 +05:30 [INF] Notes retrieved successfully
2024-12-13 16:25:56.383 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:25:56.385 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 27.6974ms
2024-12-13 16:25:56.385 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:25:56.386 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.9384ms
2024-12-13 16:29:39.379 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:29:39.393 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:29:39.394 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 15.1542ms
2024-12-13 16:29:39.396 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:29:39.400 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:29:39.401 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:29:39.403 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:29:39.405 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:29:39.406 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:29:39.407 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:29:39.408 +05:30 [INF] Deserializing the notes
2024-12-13 16:29:39.410 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:29:39.412 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.3558ms
2024-12-13 16:29:39.413 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:29:39.415 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.073ms
2024-12-13 16:37:13.351 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:37:13.354 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:37:13.355 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.2181ms
2024-12-13 16:37:13.358 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:37:13.362 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:37:13.364 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:37:13.366 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:37:13.370 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:37:13.371 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:37:13.373 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 16:37:13.374 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 16:37:13.374 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 16:37:13.395 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:37:13.397 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 16:37:13.402 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 16:37:13.404 +05:30 [INF] 16 notes retrieved for user with ID: 1
2024-12-13 16:37:13.405 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 16:37:13.407 +05:30 [INF] Notes retrieved successfully
2024-12-13 16:37:13.407 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:37:13.408 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 38.311ms
2024-12-13 16:37:13.410 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:37:13.411 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 53.8152ms
2024-12-13 16:39:30.416 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:39:30.429 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:39:30.430 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.6287ms
2024-12-13 16:39:30.434 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:39:30.438 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:39:30.438 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:39:30.441 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:39:30.445 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:39:30.448 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:39:30.448 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:39:30.449 +05:30 [INF] Deserializing the notes
2024-12-13 16:39:30.449 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:39:30.450 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.4227ms
2024-12-13 16:39:30.452 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:39:30.453 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.1684ms
2024-12-13 16:39:33.101 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:39:33.104 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:39:33.105 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:39:33.106 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:39:33.109 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:39:33.111 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:39:33.113 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:39:33.114 +05:30 [INF] Deserializing the notes
2024-12-13 16:39:33.116 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:39:33.118 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7695ms
2024-12-13 16:39:33.120 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:39:33.123 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.6948ms
2024-12-13 16:39:46.439 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:39:46.440 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:39:46.441 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2446ms
2024-12-13 16:39:46.443 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:39:46.446 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:39:46.447 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:39:46.448 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:39:46.451 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:39:46.454 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:39:46.456 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:39:46.456 +05:30 [INF] Deserializing the notes
2024-12-13 16:39:46.458 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:39:46.461 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.4512ms
2024-12-13 16:39:46.463 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:39:46.465 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.1843ms
2024-12-13 16:41:54.389 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:41:54.398 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:41:54.399 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.6398ms
2024-12-13 16:41:54.401 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:41:54.405 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:41:54.406 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:41:54.407 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:41:54.409 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:41:54.410 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:41:54.412 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:41:54.413 +05:30 [INF] Deserializing the notes
2024-12-13 16:41:54.414 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:41:54.417 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.754ms
2024-12-13 16:41:54.419 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:41:54.422 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.6681ms
2024-12-13 16:57:26.716 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:57:26.729 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:57:26.730 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 15.0643ms
2024-12-13 16:57:26.734 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:57:26.743 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:57:26.745 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:57:26.747 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:57:26.752 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:57:26.755 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:57:26.758 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 16:57:26.759 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 16:57:26.761 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 16:57:26.787 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:57:26.791 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 16:57:26.802 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 16:57:26.806 +05:30 [INF] 16 notes retrieved for user with ID: 1
2024-12-13 16:57:26.808 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 16:57:26.810 +05:30 [INF] Notes retrieved successfully
2024-12-13 16:57:26.813 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:57:26.820 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 68.6028ms
2024-12-13 16:57:26.822 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:57:26.825 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 91.2565ms
2024-12-13 16:57:28.337 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:57:28.341 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:57:28.342 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:57:28.344 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:57:28.347 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:57:28.350 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:57:28.353 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:57:28.354 +05:30 [INF] Deserializing the notes
2024-12-13 16:57:28.355 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:57:28.357 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5492ms
2024-12-13 16:57:28.359 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:57:28.361 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.8965ms
2024-12-13 16:57:45.067 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-13 16:57:45.071 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:57:45.074 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 7.2673ms
2024-12-13 16:57:45.082 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 68
2024-12-13 16:57:45.088 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:57:45.090 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 16:57:45.091 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:57:45.098 +05:30 [INF] Received note update: {"Title":"strde","Description":"string","Color":"#B4DDD3"}
2024-12-13 16:57:45.099 +05:30 [INF] Updating note with ID: 1034
2024-12-13 16:57:45.100 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-13 16:57:45.101 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 16:57:45.109 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:57:45.114 +05:30 [INF] Retrieving note with ID: 1034
2024-12-13 16:57:45.120 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-13 16:57:45.123 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-13 16:57:45.131 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Title] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-13 16:57:45.135 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-13 16:57:45.136 +05:30 [INF] Retrieved notes successfully
2024-12-13 16:57:45.137 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-13 16:57:45.139 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 43.3387ms
2024-12-13 16:57:45.141 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-13 16:57:45.143 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 60.7627ms
2024-12-13 16:57:46.913 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:57:46.918 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:57:46.919 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.3977ms
2024-12-13 16:57:46.933 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:57:46.938 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:57:46.940 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:57:46.943 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:57:46.948 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:57:46.952 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:57:46.955 +05:30 [WRN] Failed to fetch notes from cache
2024-12-13 16:57:46.956 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-13 16:57:46.957 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-13 16:57:46.960 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-13 16:57:46.962 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-13 16:57:46.972 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-13 16:57:46.980 +05:30 [INF] 16 notes retrieved for user with ID: 1
2024-12-13 16:57:46.981 +05:30 [INF] Serializing notes to store it in cache
2024-12-13 16:57:46.982 +05:30 [INF] Notes retrieved successfully
2024-12-13 16:57:46.983 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:57:46.985 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 37.3246ms
2024-12-13 16:57:46.986 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:57:46.988 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 55.974ms
2024-12-13 16:59:25.571 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-13 16:59:25.582 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:59:25.583 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.835ms
2024-12-13 16:59:25.587 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-13 16:59:25.594 +05:30 [INF] CORS policy execution successful.
2024-12-13 16:59:25.596 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:59:25.598 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-13 16:59:25.602 +05:30 [INF] Attempt to get all notes from Database
2024-12-13 16:59:25.605 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-13 16:59:25.607 +05:30 [INF] Fetched notes from cache successfully
2024-12-13 16:59:25.607 +05:30 [INF] Deserializing the notes
2024-12-13 16:59:25.609 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-13 16:59:25.612 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.6324ms
2024-12-13 16:59:25.614 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-13 16:59:25.617 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.3477ms
