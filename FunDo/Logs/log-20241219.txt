2024-12-19 12:01:20.103 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-19 12:01:20.835 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-19 12:01:20.837 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-19 12:01:20.932 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-19 12:01:20.934 +05:30 [INF] Hosting environment: Development
2024-12-19 12:01:20.935 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-19 12:01:22.976 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-19 12:01:23.375 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 418.0712ms
2024-12-19 12:01:23.377 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-19 12:01:23.377 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-19 12:01:23.401 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 24.7396ms
2024-12-19 12:01:23.465 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 88.1128ms
2024-12-19 12:01:23.567 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-19 12:01:23.776 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 209.3165ms
2024-12-19 12:02:10.249 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-19 12:02:10.265 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:02:10.273 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 24.5221ms
2024-12-19 12:02:10.285 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-19 12:02:10.302 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:02:11.943 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-19 12:02:12.016 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-19 12:02:12.909 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-19 12:02:12.912 +05:30 [INF] Checking if the user present
2024-12-19 12:02:12.920 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-19 12:02:16.353 +05:30 [INF] Executed DbCommand (211ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-19 12:02:16.500 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-19 12:02:16.502 +05:30 [INF] Verifying the password
2024-12-19 12:02:17.450 +05:30 [INF] Password is valid and token is generated
2024-12-19 12:02:17.452 +05:30 [INF] Login successful
2024-12-19 12:02:17.472 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 12:02:17.489 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 5461.5028ms
2024-12-19 12:02:17.495 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-19 12:02:17.510 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 7225.9719ms
2024-12-19 12:02:17.533 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:02:17.540 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:02:17.542 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.2176ms
2024-12-19 12:02:17.583 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:02:17.590 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:02:17.704 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:02:17.715 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:02:17.731 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:02:17.835 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:02:17.836 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 12:02:17.841 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 12:02:17.850 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:02:17.930 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:02:17.941 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 12:02:18.047 +05:30 [INF] Executed DbCommand (20ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 12:02:18.061 +05:30 [INF] 22 notes retrieved for user with ID: 1
2024-12-19 12:02:18.064 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 12:02:18.086 +05:30 [INF] Notes retrieved successfully
2024-12-19 12:02:18.090 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:02:18.099 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 377.5805ms
2024-12-19 12:02:18.101 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:02:18.103 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 520.2539ms
2024-12-19 12:02:47.611 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:02:47.617 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:02:47.621 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.8621ms
2024-12-19 12:02:47.625 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 87
2024-12-19 12:02:47.640 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:02:47.648 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-19 12:02:47.657 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:02:47.677 +05:30 [INF] Attempt to create a note
2024-12-19 12:02:47.791 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:02:48.054 +05:30 [INF] Executed DbCommand (19ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-19 12:02:48.121 +05:30 [INF] Created notes successfully
2024-12-19 12:02:48.123 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 12:02:48.130 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 470.0351ms
2024-12-19 12:02:48.133 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-19 12:02:48.134 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 510.5643ms
2024-12-19 12:02:51.598 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:02:51.602 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:02:51.609 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:02:51.612 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:02:51.622 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:02:51.629 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:02:51.630 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 12:02:51.631 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 12:02:51.632 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:02:51.636 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:02:51.639 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 12:02:51.645 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 12:02:51.648 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 12:02:51.650 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 12:02:51.652 +05:30 [INF] Notes retrieved successfully
2024-12-19 12:02:51.653 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:02:51.656 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 39.7811ms
2024-12-19 12:02:51.658 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:02:51.663 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 64.8433ms
2024-12-19 12:02:54.196 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1097 - null null
2024-12-19 12:02:54.202 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:02:54.204 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1097 - 204 null null 8.2749ms
2024-12-19 12:02:54.207 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1097 - application/json 5
2024-12-19 12:02:54.218 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:02:54.220 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-19 12:02:54.236 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:02:54.253 +05:30 [INF] Received request to toggle trash status for note with ID: 1097
2024-12-19 12:02:54.256 +05:30 [INF] Initiating toggle of trash status for note with ID: 1097 for user ID: 1
2024-12-19 12:02:54.263 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:02:54.304 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 12:02:54.327 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-19 12:02:54.332 +05:30 [INF] Note with ID: 1097 trash status updated to false
2024-12-19 12:02:54.335 +05:30 [INF] Successfully toggled trash status for note with ID: 1097
2024-12-19 12:02:54.336 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:02:54.340 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 96.6802ms
2024-12-19 12:02:54.343 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-19 12:02:54.344 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1097 - 200 null application/json; charset=utf-8 137.7494ms
2024-12-19 12:02:56.911 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:02:56.914 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:02:56.916 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1893ms
2024-12-19 12:02:56.920 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:02:56.930 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:02:56.932 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:02:56.934 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:02:56.937 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:02:56.943 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:02:56.946 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 12:02:56.948 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 12:02:56.951 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:02:56.956 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:02:56.961 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 12:02:56.965 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 12:02:56.968 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 12:02:56.969 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 12:02:56.971 +05:30 [INF] Notes retrieved successfully
2024-12-19 12:02:56.973 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:02:56.977 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 39.761ms
2024-12-19 12:02:56.981 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:02:56.985 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 65.8638ms
2024-12-19 12:03:05.211 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1051 - null null
2024-12-19 12:03:05.215 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:03:05.216 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1051 - 204 null null 6.1034ms
2024-12-19 12:03:05.223 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1051 - application/json 96
2024-12-19 12:03:05.229 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:03:05.231 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:03:05.244 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:03:05.732 +05:30 [INF] Received note update: {"Title":"z","Description":"zxcz","Color":"#B4DDD3"}
2024-12-19 12:03:05.734 +05:30 [INF] Updating note with ID: 1051
2024-12-19 12:03:05.736 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1051
2024-12-19 12:03:05.741 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:03:05.745 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:03:05.754 +05:30 [INF] Retrieving note with ID: 1051
2024-12-19 12:03:05.771 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 12:03:05.778 +05:30 [INF] User with ID: 1 has permission to update note ID: 1051
2024-12-19 12:03:05.791 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Title] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-19 12:03:05.796 +05:30 [INF] Successfully updated note with ID: 1051
2024-12-19 12:03:05.799 +05:30 [INF] Retrieved notes successfully
2024-12-19 12:03:05.801 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 12:03:05.807 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 557.7214ms
2024-12-19 12:03:05.811 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:03:05.814 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1051 - 200 null application/json; charset=utf-8 591.8355ms
2024-12-19 12:03:23.602 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - null null
2024-12-19 12:03:23.612 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:03:23.613 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - 204 null null 12.0641ms
2024-12-19 12:03:23.618 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1049 - application/json 100
2024-12-19 12:03:23.624 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:03:23.626 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:03:23.628 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:03:23.639 +05:30 [INF] Received note update: {"Title":"sxhdg","Description":"bsvxy","Color":"#D3BFDB"}
2024-12-19 12:03:23.641 +05:30 [INF] Updating note with ID: 1049
2024-12-19 12:03:23.642 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1049
2024-12-19 12:03:23.643 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:03:23.664 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:03:23.671 +05:30 [INF] Retrieving note with ID: 1049
2024-12-19 12:03:23.678 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 12:03:23.681 +05:30 [INF] User with ID: 1 has permission to update note ID: 1049
2024-12-19 12:03:23.683 +05:30 [INF] Successfully updated note with ID: 1049
2024-12-19 12:03:23.686 +05:30 [INF] Retrieved notes successfully
2024-12-19 12:03:23.687 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 12:03:23.691 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 54.7289ms
2024-12-19 12:03:23.693 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:03:23.695 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1049 - 200 null application/json; charset=utf-8 76.7645ms
2024-12-19 12:03:26.092 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:03:26.095 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:03:26.096 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.0032ms
2024-12-19 12:03:26.103 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:03:26.107 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:03:26.109 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:03:26.110 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:03:26.114 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:03:26.116 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:03:26.120 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 12:03:26.127 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 12:03:26.128 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:03:26.132 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:03:26.136 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 12:03:26.149 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 12:03:26.153 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 12:03:26.155 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 12:03:26.156 +05:30 [INF] Notes retrieved successfully
2024-12-19 12:03:26.157 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:03:26.159 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 45.3062ms
2024-12-19 12:03:26.160 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:03:26.161 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 58.408ms
2024-12-19 12:03:36.048 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - null null
2024-12-19 12:03:36.057 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:03:36.060 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - 204 null null 12.7376ms
2024-12-19 12:03:36.063 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1049 - application/json 101
2024-12-19 12:03:36.070 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:03:36.074 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:03:36.078 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:03:36.086 +05:30 [INF] Received note update: {"Title":"sxhdg","Description":"bsvxy","Color":"#F39F76"}
2024-12-19 12:03:36.088 +05:30 [INF] Updating note with ID: 1049
2024-12-19 12:03:36.090 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1049
2024-12-19 12:03:36.094 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:03:36.103 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:03:36.110 +05:30 [INF] Retrieving note with ID: 1049
2024-12-19 12:03:36.114 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 12:03:36.121 +05:30 [INF] User with ID: 1 has permission to update note ID: 1049
2024-12-19 12:03:36.130 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-19 12:03:36.137 +05:30 [INF] Successfully updated note with ID: 1049
2024-12-19 12:03:36.142 +05:30 [INF] Retrieved notes successfully
2024-12-19 12:03:36.144 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 12:03:36.149 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 65.0112ms
2024-12-19 12:03:36.153 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:03:36.158 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1049 - 200 null application/json; charset=utf-8 95.2179ms
2024-12-19 12:03:42.347 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - null null
2024-12-19 12:03:42.351 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:03:42.354 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - 204 null null 7.5621ms
2024-12-19 12:03:42.357 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1049 - application/json 101
2024-12-19 12:03:42.367 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:03:42.370 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:03:42.372 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:03:42.378 +05:30 [INF] Received note update: {"Title":"sxhdg","Description":"bsvxy","Color":"#F39F76"}
2024-12-19 12:03:42.382 +05:30 [INF] Updating note with ID: 1049
2024-12-19 12:03:42.386 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1049
2024-12-19 12:03:42.389 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:03:42.394 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:03:42.403 +05:30 [INF] Retrieving note with ID: 1049
2024-12-19 12:03:42.409 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 12:03:42.415 +05:30 [INF] User with ID: 1 has permission to update note ID: 1049
2024-12-19 12:03:42.419 +05:30 [INF] Successfully updated note with ID: 1049
2024-12-19 12:03:42.423 +05:30 [INF] Retrieved notes successfully
2024-12-19 12:03:42.424 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 12:03:42.426 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 49.3601ms
2024-12-19 12:03:42.429 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:03:42.432 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1049 - 200 null application/json; charset=utf-8 75.0516ms
2024-12-19 12:09:43.243 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:09:43.247 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:09:43.248 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4742ms
2024-12-19 12:09:43.251 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:09:43.256 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:09:43.259 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:09:43.260 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:09:43.263 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:09:43.266 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:09:43.269 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 12:09:43.271 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 12:09:43.272 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:09:43.309 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:09:43.312 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 12:09:43.330 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 12:09:43.333 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 12:09:43.334 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 12:09:43.335 +05:30 [INF] Notes retrieved successfully
2024-12-19 12:09:43.336 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:09:43.339 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 76.6906ms
2024-12-19 12:09:43.342 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:09:43.343 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 91.9737ms
2024-12-19 12:09:55.854 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - null null
2024-12-19 12:09:55.858 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:09:55.859 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - 204 null null 6.3545ms
2024-12-19 12:09:55.863 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1049 - application/json 91
2024-12-19 12:09:55.874 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:09:55.878 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:09:55.882 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:09:55.886 +05:30 [INF] Received note update: {"Title":"","Description":"","Color":"#ffffff"}
2024-12-19 12:09:55.890 +05:30 [INF] Updating note with ID: 1049
2024-12-19 12:09:55.894 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1049
2024-12-19 12:09:55.896 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:09:55.915 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:09:55.919 +05:30 [INF] Retrieving note with ID: 1049
2024-12-19 12:09:55.927 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 12:09:55.931 +05:30 [INF] User with ID: 1 has permission to update note ID: 1049
2024-12-19 12:09:55.941 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-19 12:09:55.946 +05:30 [INF] Successfully updated note with ID: 1049
2024-12-19 12:09:55.948 +05:30 [INF] Retrieved notes successfully
2024-12-19 12:09:55.951 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 12:09:55.957 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 71.9463ms
2024-12-19 12:09:55.960 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:09:55.962 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1049 - 200 null application/json; charset=utf-8 99.6195ms
2024-12-19 12:10:06.099 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:10:06.102 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:10:06.104 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.5527ms
2024-12-19 12:10:06.108 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:10:06.112 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:10:06.115 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:10:06.116 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:10:06.119 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:10:06.122 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:10:06.124 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 12:10:06.125 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 12:10:06.126 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:10:06.130 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:10:06.133 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 12:10:06.152 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 12:10:06.156 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 12:10:06.157 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 12:10:06.158 +05:30 [INF] Notes retrieved successfully
2024-12-19 12:10:06.159 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:10:06.161 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 41.9783ms
2024-12-19 12:10:06.162 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:10:06.164 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 56.8974ms
2024-12-19 12:10:15.323 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - null null
2024-12-19 12:10:15.328 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:10:15.329 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - 204 null null 6.9816ms
2024-12-19 12:10:15.333 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1049 - application/json 101
2024-12-19 12:10:15.340 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:10:15.347 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:10:15.351 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:10:15.357 +05:30 [INF] Received note update: {"Title":"sxhdg","Description":"bsvxy","Color":"#ffffff"}
2024-12-19 12:10:15.359 +05:30 [INF] Updating note with ID: 1049
2024-12-19 12:10:15.360 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1049
2024-12-19 12:10:15.361 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:10:15.372 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:10:15.379 +05:30 [INF] Retrieving note with ID: 1049
2024-12-19 12:10:15.385 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 12:10:15.391 +05:30 [INF] User with ID: 1 has permission to update note ID: 1049
2024-12-19 12:10:15.393 +05:30 [INF] Successfully updated note with ID: 1049
2024-12-19 12:10:15.394 +05:30 [INF] Retrieved notes successfully
2024-12-19 12:10:15.397 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 12:10:15.399 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 42.3513ms
2024-12-19 12:10:15.401 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:10:15.402 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1049 - 200 null application/json; charset=utf-8 69.2411ms
2024-12-19 12:12:13.880 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:12:13.884 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:12:13.886 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.7164ms
2024-12-19 12:12:13.894 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:12:13.899 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:12:13.902 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:12:13.904 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:12:13.921 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:12:13.926 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:12:13.930 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 12:12:13.932 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 12:12:13.934 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:12:13.948 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:12:13.952 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 12:12:13.966 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 12:12:13.970 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 12:12:13.972 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 12:12:13.973 +05:30 [INF] Notes retrieved successfully
2024-12-19 12:12:13.975 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:12:13.976 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 55.922ms
2024-12-19 12:12:13.979 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:12:13.980 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 86.5424ms
2024-12-19 12:12:18.115 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:12:18.119 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:12:18.121 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:12:18.123 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:12:18.128 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:12:18.138 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:12:18.140 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:12:18.141 +05:30 [INF] Deserializing the notes
2024-12-19 12:12:18.146 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:12:18.151 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 24.1428ms
2024-12-19 12:12:18.154 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:12:18.155 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.5431ms
2024-12-19 12:12:35.454 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1051 - null null
2024-12-19 12:12:35.459 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:12:35.460 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1051 - 204 null null 5.8119ms
2024-12-19 12:12:35.464 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1051 - application/json 95
2024-12-19 12:12:35.473 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:12:35.477 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:12:35.481 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:12:35.487 +05:30 [INF] Received note update: {"Title":"z","Description":"zxcz","Color":"#B4DDD3"}
2024-12-19 12:12:35.488 +05:30 [INF] Updating note with ID: 1051
2024-12-19 12:12:35.489 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1051
2024-12-19 12:12:35.490 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:12:35.498 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:12:35.508 +05:30 [INF] Retrieving note with ID: 1051
2024-12-19 12:12:35.514 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 12:12:35.519 +05:30 [INF] User with ID: 1 has permission to update note ID: 1051
2024-12-19 12:12:35.521 +05:30 [INF] Successfully updated note with ID: 1051
2024-12-19 12:12:35.524 +05:30 [INF] Retrieved notes successfully
2024-12-19 12:12:35.526 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 12:12:35.529 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 42.9744ms
2024-12-19 12:12:35.533 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:12:35.536 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1051 - 200 null application/json; charset=utf-8 72.8231ms
2024-12-19 12:17:14.600 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-19 12:17:14.930 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-19 12:17:14.936 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-19 12:17:14.982 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-19 12:17:14.987 +05:30 [INF] Hosting environment: Development
2024-12-19 12:17:14.989 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-19 12:17:15.370 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-19 12:17:15.580 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 222.075ms
2024-12-19 12:17:15.594 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-19 12:17:15.595 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-19 12:17:15.608 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 13.3525ms
2024-12-19 12:17:15.658 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 63.6418ms
2024-12-19 12:17:15.694 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-19 12:17:15.818 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 124.486ms
2024-12-19 12:17:52.990 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-19 12:17:53.014 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:17:53.019 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 29.6605ms
2024-12-19 12:17:53.032 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-19 12:17:53.043 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:17:53.177 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-19 12:17:53.231 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-19 12:17:53.572 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-19 12:17:53.575 +05:30 [INF] Checking if the user present
2024-12-19 12:17:53.581 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-19 12:17:55.782 +05:30 [INF] Executed DbCommand (104ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-19 12:17:55.917 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-19 12:17:55.920 +05:30 [INF] Verifying the password
2024-12-19 12:17:56.827 +05:30 [INF] Password is valid and token is generated
2024-12-19 12:17:56.829 +05:30 [INF] Login successful
2024-12-19 12:17:56.847 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 12:17:56.861 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 3623.0603ms
2024-12-19 12:17:56.867 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-19 12:17:56.884 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 3852.1782ms
2024-12-19 12:17:56.909 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:17:56.919 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:17:56.921 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.679ms
2024-12-19 12:17:56.952 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:17:56.957 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:17:57.054 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:17:57.064 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:17:57.074 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:17:57.135 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:17:57.137 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 12:17:57.142 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 12:17:57.150 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:17:57.236 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:17:57.246 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 12:17:57.350 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 12:17:57.358 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 12:17:57.362 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 12:17:57.381 +05:30 [INF] Notes retrieved successfully
2024-12-19 12:17:57.385 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:17:57.393 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 326.1185ms
2024-12-19 12:17:57.397 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:17:57.400 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 447.656ms
2024-12-19 12:18:15.485 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1051 - null null
2024-12-19 12:18:15.490 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:18:15.492 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1051 - 204 null null 7.3502ms
2024-12-19 12:18:15.498 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1051 - application/json 95
2024-12-19 12:18:15.512 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:18:15.523 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:18:15.538 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:18:15.775 +05:30 [INF] Received note update: {"Title":"z","Description":"zxcz","Color":"#B4DDD3","IsArchive":true,"IsTrash":false}
2024-12-19 12:18:15.777 +05:30 [INF] Updating note with ID: 1051
2024-12-19 12:18:15.780 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1051
2024-12-19 12:18:15.787 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:18:15.902 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:18:15.909 +05:30 [INF] Retrieving note with ID: 1051
2024-12-19 12:18:15.944 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 12:18:15.974 +05:30 [INF] User with ID: 1 has permission to update note ID: 1051
2024-12-19 12:18:16.121 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-19 12:18:16.151 +05:30 [INF] Successfully updated note with ID: 1051
2024-12-19 12:18:16.158 +05:30 [INF] Retrieved notes successfully
2024-12-19 12:18:16.160 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 12:18:16.166 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 624.9815ms
2024-12-19 12:18:16.170 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:18:16.173 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1051 - 200 null application/json; charset=utf-8 675.323ms
2024-12-19 12:18:25.456 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:18:25.460 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:18:25.461 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.6922ms
2024-12-19 12:18:25.466 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:18:25.474 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:18:25.478 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:18:25.481 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:18:25.493 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:18:25.498 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:18:25.500 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 12:18:25.502 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 12:18:25.504 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:18:25.509 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:18:25.516 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 12:18:25.523 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 12:18:25.528 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 12:18:25.529 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 12:18:25.531 +05:30 [INF] Notes retrieved successfully
2024-12-19 12:18:25.533 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:18:25.535 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 48.8511ms
2024-12-19 12:18:25.537 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:18:25.539 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 74.6446ms
2024-12-19 12:20:11.191 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:20:11.196 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:20:11.199 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.8128ms
2024-12-19 12:20:11.203 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:20:11.210 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:20:11.212 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:20:11.216 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:20:11.223 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:20:11.233 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:20:11.235 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:20:11.237 +05:30 [INF] Deserializing the notes
2024-12-19 12:20:11.244 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:20:11.248 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.9852ms
2024-12-19 12:20:11.253 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:20:11.255 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.1889ms
2024-12-19 12:22:12.918 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:22:12.925 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:22:12.926 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.5ms
2024-12-19 12:22:12.929 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:22:12.935 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:22:12.938 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:12.940 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:22:12.945 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:22:12.947 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:22:12.950 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:22:12.951 +05:30 [INF] Deserializing the notes
2024-12-19 12:22:12.953 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:22:12.955 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.0549ms
2024-12-19 12:22:12.959 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:12.971 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.7895ms
2024-12-19 12:22:21.804 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:22:21.807 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:22:21.809 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.5366ms
2024-12-19 12:22:21.812 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:22:21.821 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:22:21.824 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:21.826 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:22:21.831 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:22:21.838 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:22:21.839 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:22:21.843 +05:30 [INF] Deserializing the notes
2024-12-19 12:22:21.845 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:22:21.847 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.7706ms
2024-12-19 12:22:21.849 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:21.853 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.7312ms
2024-12-19 12:22:26.918 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:22:26.922 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:22:26.923 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1007ms
2024-12-19 12:22:26.926 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:22:26.932 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:22:26.934 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:26.937 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:22:26.940 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:22:26.945 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:22:26.946 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:22:26.947 +05:30 [INF] Deserializing the notes
2024-12-19 12:22:26.949 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:22:26.953 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.2693ms
2024-12-19 12:22:26.960 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:26.962 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.2591ms
2024-12-19 12:22:42.048 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:22:42.052 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:22:42.054 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.5683ms
2024-12-19 12:22:42.058 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:22:42.065 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:22:42.067 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:42.069 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:22:42.073 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:22:42.076 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:22:42.080 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:22:42.081 +05:30 [INF] Deserializing the notes
2024-12-19 12:22:42.083 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:22:42.086 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.4422ms
2024-12-19 12:22:42.089 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:42.092 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.9411ms
2024-12-19 12:22:43.249 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:22:43.253 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:22:43.254 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:43.256 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:22:43.259 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:22:43.263 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:22:43.266 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:22:43.268 +05:30 [INF] Deserializing the notes
2024-12-19 12:22:43.270 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:22:43.273 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.1371ms
2024-12-19 12:22:43.276 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:43.278 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.0091ms
2024-12-19 12:22:48.399 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:22:48.405 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:22:48.407 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.1778ms
2024-12-19 12:22:48.411 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:22:48.417 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:22:48.419 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:48.421 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:22:48.426 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:22:48.430 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:22:48.434 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:22:48.436 +05:30 [INF] Deserializing the notes
2024-12-19 12:22:48.437 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:22:48.442 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.7607ms
2024-12-19 12:22:48.446 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:48.451 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.5653ms
2024-12-19 12:22:56.101 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:22:56.106 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:22:56.109 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.0404ms
2024-12-19 12:22:56.113 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:22:56.126 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:22:56.129 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:56.132 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:22:56.138 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:22:56.141 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:22:56.145 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:22:56.147 +05:30 [INF] Deserializing the notes
2024-12-19 12:22:56.149 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:22:56.153 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.4365ms
2024-12-19 12:22:56.155 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:22:56.157 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.3125ms
2024-12-19 12:23:19.613 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:23:19.620 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:23:19.621 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.6734ms
2024-12-19 12:23:19.624 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:23:19.631 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:23:19.634 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:23:19.636 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:23:19.642 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:23:19.646 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:23:19.649 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:23:19.651 +05:30 [INF] Deserializing the notes
2024-12-19 12:23:19.653 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:23:19.657 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.4199ms
2024-12-19 12:23:19.660 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:23:19.662 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.6947ms
2024-12-19 12:23:21.551 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:23:21.555 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:23:21.558 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:23:21.560 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:23:21.564 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:23:21.566 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:23:21.569 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:23:21.571 +05:30 [INF] Deserializing the notes
2024-12-19 12:23:21.573 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:23:21.575 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.2499ms
2024-12-19 12:23:21.578 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:23:21.580 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.8958ms
2024-12-19 12:24:09.716 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:24:09.718 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:24:09.719 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.3991ms
2024-12-19 12:24:09.723 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:24:09.728 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:24:09.731 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:24:09.733 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:24:09.737 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:24:09.739 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:24:09.743 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 12:24:09.744 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 12:24:09.748 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:24:09.772 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:24:09.780 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 12:24:09.795 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 12:24:09.803 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 12:24:09.805 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 12:24:09.807 +05:30 [INF] Notes retrieved successfully
2024-12-19 12:24:09.808 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:24:09.812 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 75.8162ms
2024-12-19 12:24:09.815 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:24:09.816 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 93.9422ms
2024-12-19 12:24:22.525 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:24:22.530 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:24:22.531 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.174ms
2024-12-19 12:24:22.535 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:24:22.545 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:24:22.547 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:24:22.549 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:24:22.553 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:24:22.555 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:24:22.558 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:24:22.561 +05:30 [INF] Deserializing the notes
2024-12-19 12:24:22.564 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:24:22.570 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.4338ms
2024-12-19 12:24:22.573 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:24:22.575 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.2429ms
2024-12-19 12:24:29.246 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:24:29.250 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:24:29.251 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.4425ms
2024-12-19 12:24:29.254 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:24:29.259 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:24:29.261 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:24:29.262 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:24:29.266 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:24:29.268 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:24:29.271 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:24:29.272 +05:30 [INF] Deserializing the notes
2024-12-19 12:24:29.274 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:24:29.276 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.703ms
2024-12-19 12:24:29.279 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:24:29.282 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.7079ms
2024-12-19 12:24:41.687 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:24:41.694 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:24:41.695 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.0883ms
2024-12-19 12:24:41.698 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:24:41.701 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:24:41.703 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:24:41.705 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:24:41.707 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:24:41.711 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:24:41.713 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:24:41.714 +05:30 [INF] Deserializing the notes
2024-12-19 12:24:41.716 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:24:41.720 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.9747ms
2024-12-19 12:24:41.728 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:24:41.734 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.9151ms
2024-12-19 12:26:10.828 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:26:10.847 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:26:10.849 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 21.3385ms
2024-12-19 12:26:10.854 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:26:10.860 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:26:10.861 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:10.863 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:26:10.867 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:26:10.870 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:26:10.874 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:26:10.876 +05:30 [INF] Deserializing the notes
2024-12-19 12:26:10.879 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:26:10.882 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.9086ms
2024-12-19 12:26:10.886 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:10.887 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.9347ms
2024-12-19 12:26:12.939 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:26:12.946 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:26:12.949 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:12.952 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:26:12.958 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:26:12.962 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:26:12.965 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:26:12.968 +05:30 [INF] Deserializing the notes
2024-12-19 12:26:12.971 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:26:12.975 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.9719ms
2024-12-19 12:26:12.977 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:12.978 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.1506ms
2024-12-19 12:26:36.873 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:26:36.888 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:26:36.890 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 17.1372ms
2024-12-19 12:26:36.896 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:26:36.901 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:26:36.904 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:36.906 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:26:36.910 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:26:36.912 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:26:36.916 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:26:36.918 +05:30 [INF] Deserializing the notes
2024-12-19 12:26:36.920 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:26:36.922 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.0688ms
2024-12-19 12:26:36.924 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:36.926 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.0671ms
2024-12-19 12:26:39.175 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:26:39.180 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:26:39.183 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:39.185 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:26:39.189 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:26:39.192 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:26:39.196 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:26:39.199 +05:30 [INF] Deserializing the notes
2024-12-19 12:26:39.201 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:26:39.205 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.7084ms
2024-12-19 12:26:39.207 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:39.209 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.4166ms
2024-12-19 12:26:48.166 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:26:48.172 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:26:48.175 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.9269ms
2024-12-19 12:26:48.182 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:26:48.196 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:26:48.199 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:48.202 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:26:48.206 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:26:48.209 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:26:48.213 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:26:48.214 +05:30 [INF] Deserializing the notes
2024-12-19 12:26:48.216 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:26:48.219 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.1412ms
2024-12-19 12:26:48.223 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:48.227 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.9953ms
2024-12-19 12:26:56.917 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:26:56.921 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:26:56.922 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.1513ms
2024-12-19 12:26:56.926 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:26:56.934 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:26:56.935 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:56.938 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:26:56.944 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:26:56.947 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:26:56.950 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:26:56.950 +05:30 [INF] Deserializing the notes
2024-12-19 12:26:56.951 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:26:56.953 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.683ms
2024-12-19 12:26:56.955 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:56.957 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.6957ms
2024-12-19 12:26:59.248 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:26:59.252 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:26:59.254 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:59.256 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:26:59.261 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:26:59.263 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:26:59.269 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:26:59.270 +05:30 [INF] Deserializing the notes
2024-12-19 12:26:59.273 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:26:59.277 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.9021ms
2024-12-19 12:26:59.279 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:26:59.281 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.7593ms
2024-12-19 12:27:00.642 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:27:00.646 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:00.647 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:00.649 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:27:00.653 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:27:00.656 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:27:00.659 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:27:00.660 +05:30 [INF] Deserializing the notes
2024-12-19 12:27:00.662 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:27:00.666 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.1572ms
2024-12-19 12:27:00.669 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:00.670 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.1109ms
2024-12-19 12:27:01.828 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:27:01.835 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:01.838 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:01.841 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:27:01.847 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:27:01.850 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:27:01.854 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:27:01.856 +05:30 [INF] Deserializing the notes
2024-12-19 12:27:01.859 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:27:01.864 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.5474ms
2024-12-19 12:27:01.867 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:01.868 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.8743ms
2024-12-19 12:27:07.479 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:27:07.485 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:07.487 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.9389ms
2024-12-19 12:27:07.491 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:27:07.496 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:07.498 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:07.500 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:27:07.503 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:27:07.505 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:27:07.508 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:27:07.509 +05:30 [INF] Deserializing the notes
2024-12-19 12:27:07.511 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:27:07.513 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.288ms
2024-12-19 12:27:07.515 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:07.516 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.8085ms
2024-12-19 12:27:12.837 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:27:12.842 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:12.843 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.5681ms
2024-12-19 12:27:12.847 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:27:12.857 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:12.860 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:12.861 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:27:12.867 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:27:12.869 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:27:12.873 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:27:12.875 +05:30 [INF] Deserializing the notes
2024-12-19 12:27:12.877 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:27:12.880 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.3456ms
2024-12-19 12:27:12.889 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:12.893 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.2708ms
2024-12-19 12:27:15.600 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:27:15.620 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:15.623 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:15.628 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:27:15.632 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:27:15.636 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:27:15.639 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:27:15.641 +05:30 [INF] Deserializing the notes
2024-12-19 12:27:15.643 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:27:15.646 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.7396ms
2024-12-19 12:27:15.648 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:15.650 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 50.2406ms
2024-12-19 12:27:21.994 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:27:21.999 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:22.002 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.1913ms
2024-12-19 12:27:22.005 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:27:22.014 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:22.016 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:22.019 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:27:22.023 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:27:22.026 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:27:22.029 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:27:22.032 +05:30 [INF] Deserializing the notes
2024-12-19 12:27:22.033 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:27:22.036 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.7597ms
2024-12-19 12:27:22.039 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:22.041 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.4923ms
2024-12-19 12:27:24.112 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:27:24.120 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:24.122 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:24.125 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:27:24.128 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:27:24.131 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:27:24.134 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:27:24.135 +05:30 [INF] Deserializing the notes
2024-12-19 12:27:24.136 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:27:24.139 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.8811ms
2024-12-19 12:27:24.140 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:24.142 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.2093ms
2024-12-19 12:27:25.041 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:27:25.045 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:25.049 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:25.052 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:27:25.057 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:27:25.060 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:27:25.064 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:27:25.066 +05:30 [INF] Deserializing the notes
2024-12-19 12:27:25.068 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:27:25.072 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.9546ms
2024-12-19 12:27:25.075 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:25.077 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.139ms
2024-12-19 12:27:52.643 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1052 - null null
2024-12-19 12:27:52.657 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:52.658 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1052 - 204 null null 15.3811ms
2024-12-19 12:27:52.662 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1052 - application/json 97
2024-12-19 12:27:52.668 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:52.672 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:27:52.677 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:27:52.687 +05:30 [INF] Received note update: {"Title":"sv","Description":"kcduy","Color":"#AECCDC","IsArchive":true,"IsTrash":false}
2024-12-19 12:27:52.688 +05:30 [INF] Updating note with ID: 1052
2024-12-19 12:27:52.690 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1052
2024-12-19 12:27:52.692 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:27:52.732 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:27:52.740 +05:30 [INF] Retrieving note with ID: 1052
2024-12-19 12:27:52.749 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 12:27:52.753 +05:30 [INF] User with ID: 1 has permission to update note ID: 1052
2024-12-19 12:27:52.763 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0, [Title] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2024-12-19 12:27:52.766 +05:30 [INF] Successfully updated note with ID: 1052
2024-12-19 12:27:52.768 +05:30 [INF] Retrieved notes successfully
2024-12-19 12:27:52.769 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 12:27:52.771 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 86.0517ms
2024-12-19 12:27:52.776 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 12:27:52.778 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1052 - 200 null application/json; charset=utf-8 115.7897ms
2024-12-19 12:27:54.853 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:27:54.857 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:54.860 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.7533ms
2024-12-19 12:27:54.866 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:27:54.876 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:54.878 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:54.879 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:27:54.886 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:27:54.888 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:27:54.891 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 12:27:54.893 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 12:27:54.894 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:27:54.897 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:27:54.901 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 12:27:54.915 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 12:27:54.918 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 12:27:54.920 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 12:27:54.922 +05:30 [INF] Notes retrieved successfully
2024-12-19 12:27:54.923 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:27:54.925 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 39.7978ms
2024-12-19 12:27:54.926 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:54.928 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 62.2259ms
2024-12-19 12:27:58.417 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:27:58.424 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:27:58.426 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:58.429 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:27:58.434 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:27:58.438 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:27:58.442 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:27:58.442 +05:30 [INF] Deserializing the notes
2024-12-19 12:27:58.443 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:27:58.445 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.0216ms
2024-12-19 12:27:58.449 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:27:58.451 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.7135ms
2024-12-19 12:28:26.991 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:28:27.004 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:28:27.006 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.5845ms
2024-12-19 12:28:27.009 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:28:27.014 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:28:27.016 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:28:27.018 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:28:27.022 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:28:27.024 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:28:27.027 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:28:27.029 +05:30 [INF] Deserializing the notes
2024-12-19 12:28:27.030 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:28:27.032 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.048ms
2024-12-19 12:28:27.034 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:28:27.034 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:28:27.042 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.6871ms
2024-12-19 12:28:27.047 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:28:27.052 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:28:27.053 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:28:27.056 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:28:27.058 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:28:27.065 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:28:27.066 +05:30 [INF] Deserializing the notes
2024-12-19 12:28:27.067 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:28:27.069 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.6478ms
2024-12-19 12:28:27.072 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:28:27.073 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 38.7485ms
2024-12-19 12:28:28.714 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:28:28.719 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:28:28.722 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:28:28.724 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:28:28.728 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:28:28.731 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:28:28.734 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:28:28.736 +05:30 [INF] Deserializing the notes
2024-12-19 12:28:28.738 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:28:28.741 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.7801ms
2024-12-19 12:28:28.743 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:28:28.746 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.3145ms
2024-12-19 12:28:30.347 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:28:30.350 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:28:30.352 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:28:30.353 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:28:30.355 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:28:30.358 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:28:30.361 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:28:30.363 +05:30 [INF] Deserializing the notes
2024-12-19 12:28:30.364 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:28:30.368 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.9171ms
2024-12-19 12:28:30.370 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:28:30.372 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.4004ms
2024-12-19 12:28:38.638 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:28:38.642 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:28:38.643 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.0105ms
2024-12-19 12:28:38.646 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:28:38.650 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:28:38.651 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:28:38.653 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:28:38.657 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:28:38.659 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:28:38.662 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:28:38.663 +05:30 [INF] Deserializing the notes
2024-12-19 12:28:38.664 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:28:38.666 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.8353ms
2024-12-19 12:28:38.668 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:28:38.670 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.4116ms
2024-12-19 12:29:33.601 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:29:33.605 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:29:33.609 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.966ms
2024-12-19 12:29:33.613 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:29:33.621 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:29:33.625 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:29:33.628 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:29:33.633 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:29:33.638 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:29:33.639 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:29:33.640 +05:30 [INF] Deserializing the notes
2024-12-19 12:29:33.641 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:29:33.643 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.0682ms
2024-12-19 12:29:33.645 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:29:33.648 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.9651ms
2024-12-19 12:29:35.933 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:29:35.938 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:29:35.940 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:29:35.946 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:29:35.950 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:29:35.954 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:29:35.956 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:29:35.958 +05:30 [INF] Deserializing the notes
2024-12-19 12:29:35.959 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:29:35.961 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.5171ms
2024-12-19 12:29:35.963 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:29:35.965 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.2555ms
2024-12-19 12:29:37.180 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:29:37.184 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:29:37.186 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:29:37.191 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:29:37.197 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:29:37.201 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:29:37.205 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:29:37.208 +05:30 [INF] Deserializing the notes
2024-12-19 12:29:37.211 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:29:37.214 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.7125ms
2024-12-19 12:29:37.219 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:29:37.223 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.0487ms
2024-12-19 12:30:07.963 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:30:07.968 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:30:07.972 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.0252ms
2024-12-19 12:30:07.975 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:30:07.982 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:30:07.983 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:07.984 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:30:07.987 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:30:07.990 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:30:07.995 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:30:07.996 +05:30 [INF] Deserializing the notes
2024-12-19 12:30:07.997 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:30:08.000 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.8979ms
2024-12-19 12:30:08.004 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:08.015 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.2791ms
2024-12-19 12:30:08.854 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:30:08.859 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:30:08.862 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:08.864 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:30:08.868 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:30:08.871 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:30:08.875 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:30:08.876 +05:30 [INF] Deserializing the notes
2024-12-19 12:30:08.878 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:30:08.882 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.7384ms
2024-12-19 12:30:08.885 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:08.886 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.5997ms
2024-12-19 12:30:10.990 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:30:10.994 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:30:10.996 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:10.997 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:30:11.001 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:30:11.003 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:30:11.009 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:30:11.011 +05:30 [INF] Deserializing the notes
2024-12-19 12:30:11.012 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:30:11.015 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.9623ms
2024-12-19 12:30:11.018 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:11.020 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.1023ms
2024-12-19 12:30:20.883 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:30:20.886 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:30:20.889 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.2151ms
2024-12-19 12:30:20.894 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:30:20.899 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:30:20.901 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:20.904 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:30:20.907 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:30:20.911 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:30:20.913 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:30:20.914 +05:30 [INF] Deserializing the notes
2024-12-19 12:30:20.915 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:30:20.917 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.2897ms
2024-12-19 12:30:20.920 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:20.921 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.8299ms
2024-12-19 12:30:22.011 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:30:22.015 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:30:22.017 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:22.019 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:30:22.022 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:30:22.024 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:30:22.028 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:30:22.030 +05:30 [INF] Deserializing the notes
2024-12-19 12:30:22.032 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:30:22.035 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.1743ms
2024-12-19 12:30:22.037 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:22.040 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.7713ms
2024-12-19 12:30:23.774 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:30:23.778 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:30:23.779 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:23.782 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:30:23.786 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:30:23.792 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:30:23.795 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:30:23.796 +05:30 [INF] Deserializing the notes
2024-12-19 12:30:23.798 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:30:23.801 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.1154ms
2024-12-19 12:30:23.803 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:23.805 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.1858ms
2024-12-19 12:30:31.540 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:30:31.544 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:30:31.545 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6708ms
2024-12-19 12:30:31.550 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:30:31.560 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:30:31.562 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:31.564 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:30:31.567 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:30:31.570 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:30:31.573 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:30:31.575 +05:30 [INF] Deserializing the notes
2024-12-19 12:30:31.577 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:30:31.579 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.4809ms
2024-12-19 12:30:31.581 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:31.582 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.6935ms
2024-12-19 12:30:38.059 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:30:38.068 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:30:38.070 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.6726ms
2024-12-19 12:30:38.073 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:30:38.089 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:30:38.090 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:38.092 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:30:38.097 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:30:38.104 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:30:38.106 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:30:38.107 +05:30 [INF] Deserializing the notes
2024-12-19 12:30:38.109 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:30:38.110 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.8162ms
2024-12-19 12:30:38.112 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:30:38.113 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.4756ms
2024-12-19 12:35:12.378 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:35:12.382 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:35:12.384 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.422ms
2024-12-19 12:35:12.389 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:35:12.406 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:35:12.408 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:35:12.411 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:35:12.413 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:35:12.417 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:35:12.419 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 12:35:12.421 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 12:35:12.422 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:35:12.466 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:35:12.469 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 12:35:12.485 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 12:35:12.490 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 12:35:12.491 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 12:35:12.494 +05:30 [INF] Notes retrieved successfully
2024-12-19 12:35:12.495 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:35:12.497 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 84.2856ms
2024-12-19 12:35:12.500 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:35:12.502 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 113.6896ms
2024-12-19 12:35:25.374 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:35:25.378 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:35:25.382 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.9114ms
2024-12-19 12:35:25.386 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:35:25.408 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:35:25.412 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:35:25.414 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:35:25.420 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:35:25.423 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:35:25.426 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:35:25.427 +05:30 [INF] Deserializing the notes
2024-12-19 12:35:25.428 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:35:25.430 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.8795ms
2024-12-19 12:35:25.433 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:35:25.435 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.4454ms
2024-12-19 12:35:49.496 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:35:49.510 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:35:49.512 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 15.9368ms
2024-12-19 12:35:49.521 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:35:49.525 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:35:49.527 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.8191ms
2024-12-19 12:35:49.524 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:35:49.536 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:35:49.538 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:35:49.540 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:35:49.543 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:35:49.547 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:35:49.550 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:35:49.551 +05:30 [INF] Deserializing the notes
2024-12-19 12:35:49.552 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:35:49.554 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.6795ms
2024-12-19 12:35:49.556 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:35:49.557 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:35:49.560 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:35:49.561 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.3507ms
2024-12-19 12:35:49.570 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:35:49.575 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:35:49.577 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:35:49.579 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:35:49.583 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:35:49.584 +05:30 [INF] Deserializing the notes
2024-12-19 12:35:49.585 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:35:49.586 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5574ms
2024-12-19 12:35:49.588 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:35:49.589 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.3536ms
2024-12-19 12:35:52.322 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:35:52.340 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:35:52.343 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:35:52.345 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:35:52.349 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:35:52.354 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:35:52.358 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:35:52.360 +05:30 [INF] Deserializing the notes
2024-12-19 12:35:52.361 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:35:52.363 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.209ms
2024-12-19 12:35:52.365 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:35:52.366 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.7279ms
2024-12-19 12:36:13.870 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:36:13.875 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:36:13.877 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.427ms
2024-12-19 12:36:13.879 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:36:13.885 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:36:13.888 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:13.890 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:36:13.894 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:36:13.900 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:36:13.909 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:36:13.911 +05:30 [INF] Deserializing the notes
2024-12-19 12:36:13.914 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:36:13.917 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 23.0915ms
2024-12-19 12:36:13.920 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:36:13.922 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:13.934 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:36:13.936 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 56.8531ms
2024-12-19 12:36:13.938 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:13.945 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:36:13.947 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:36:13.949 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:36:13.952 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:36:13.953 +05:30 [INF] Deserializing the notes
2024-12-19 12:36:13.954 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:36:13.957 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.0193ms
2024-12-19 12:36:13.959 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:13.960 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.5631ms
2024-12-19 12:36:17.069 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:36:17.074 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:36:17.076 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:17.077 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:36:17.081 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:36:17.085 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:36:17.089 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:36:17.092 +05:30 [INF] Deserializing the notes
2024-12-19 12:36:17.095 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:36:17.100 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.6096ms
2024-12-19 12:36:17.102 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:17.106 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.4052ms
2024-12-19 12:36:18.847 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:36:18.853 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:36:18.857 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:18.859 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:36:18.866 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:36:18.871 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:36:18.876 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:36:18.878 +05:30 [INF] Deserializing the notes
2024-12-19 12:36:18.881 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:36:18.886 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.4817ms
2024-12-19 12:36:18.889 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:18.890 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.0047ms
2024-12-19 12:36:20.127 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:36:20.133 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:36:20.135 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.1067ms
2024-12-19 12:36:20.139 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:36:20.147 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:36:20.152 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:20.156 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:36:20.158 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:36:20.160 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:36:20.162 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:36:20.163 +05:30 [INF] Deserializing the notes
2024-12-19 12:36:20.164 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:36:20.166 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.4348ms
2024-12-19 12:36:20.168 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:20.169 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.9127ms
2024-12-19 12:36:21.564 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:36:21.570 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:36:21.574 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:21.579 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:36:21.586 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:36:21.590 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:36:21.593 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:36:21.595 +05:30 [INF] Deserializing the notes
2024-12-19 12:36:21.598 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:36:21.604 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.5824ms
2024-12-19 12:36:21.608 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:21.609 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.6635ms
2024-12-19 12:36:22.458 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:36:22.465 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:36:22.467 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:22.470 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:36:22.474 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:36:22.477 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:36:22.481 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:36:22.484 +05:30 [INF] Deserializing the notes
2024-12-19 12:36:22.487 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:36:22.490 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.42ms
2024-12-19 12:36:22.492 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:36:22.494 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.5008ms
2024-12-19 12:37:48.479 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:37:48.494 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:37:48.497 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 18.8262ms
2024-12-19 12:37:48.501 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:37:48.509 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:37:48.510 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:37:48.511 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:37:48.514 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:37:48.516 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:37:48.519 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:37:48.519 +05:30 [INF] Deserializing the notes
2024-12-19 12:37:48.520 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:37:48.522 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.5172ms
2024-12-19 12:37:48.523 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:37:48.526 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.6085ms
2024-12-19 12:37:50.124 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:37:50.129 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:37:50.133 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:37:50.136 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:37:50.142 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:37:50.144 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:37:50.148 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:37:50.150 +05:30 [INF] Deserializing the notes
2024-12-19 12:37:50.153 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:37:50.157 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.6784ms
2024-12-19 12:37:50.159 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:37:50.160 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.1558ms
2024-12-19 12:37:51.532 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:37:51.537 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:37:51.539 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:37:51.543 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:37:51.549 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:37:51.553 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:37:51.557 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:37:51.558 +05:30 [INF] Deserializing the notes
2024-12-19 12:37:51.563 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:37:51.567 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.2851ms
2024-12-19 12:37:51.569 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:37:51.576 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.1274ms
2024-12-19 12:37:52.434 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:37:52.440 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:37:52.442 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:37:52.444 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:37:52.453 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:37:52.460 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:37:52.461 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:37:52.462 +05:30 [INF] Deserializing the notes
2024-12-19 12:37:52.463 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:37:52.465 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.1393ms
2024-12-19 12:37:52.470 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:37:52.472 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.9971ms
2024-12-19 12:37:57.353 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:37:57.360 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:37:57.363 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.5022ms
2024-12-19 12:37:57.367 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:37:57.383 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:37:57.384 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:37:57.385 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:37:57.388 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:37:57.392 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:37:57.395 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:37:57.396 +05:30 [INF] Deserializing the notes
2024-12-19 12:37:57.397 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:37:57.399 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.0997ms
2024-12-19 12:37:57.400 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:37:57.403 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.1272ms
2024-12-19 12:38:23.151 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:38:23.156 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:38:23.161 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.2887ms
2024-12-19 12:38:23.165 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:38:23.175 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:38:23.179 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:38:23.181 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:38:23.184 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:38:23.188 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:38:23.189 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:38:23.190 +05:30 [INF] Deserializing the notes
2024-12-19 12:38:23.191 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:38:23.197 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.3008ms
2024-12-19 12:38:23.199 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:38:23.207 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.8034ms
2024-12-19 12:38:24.396 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:38:24.401 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:38:24.404 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:38:24.408 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:38:24.418 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:38:24.421 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:38:24.425 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:38:24.426 +05:30 [INF] Deserializing the notes
2024-12-19 12:38:24.430 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:38:24.432 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.6657ms
2024-12-19 12:38:24.433 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:38:24.434 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 38.4721ms
2024-12-19 12:38:26.002 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:38:26.008 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:38:26.010 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:38:26.013 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:38:26.019 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:38:26.022 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:38:26.026 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:38:26.027 +05:30 [INF] Deserializing the notes
2024-12-19 12:38:26.032 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:38:26.037 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.0759ms
2024-12-19 12:38:26.041 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:38:26.044 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.8302ms
2024-12-19 12:39:56.546 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:39:56.560 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:39:56.561 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 15.6789ms
2024-12-19 12:39:56.565 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:39:56.571 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:39:56.573 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:39:56.575 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:39:56.580 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:39:56.583 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:39:56.586 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:39:56.588 +05:30 [INF] Deserializing the notes
2024-12-19 12:39:56.590 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:39:56.593 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.8217ms
2024-12-19 12:39:56.597 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:39:56.599 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.7536ms
2024-12-19 12:39:58.356 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:39:58.363 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:39:58.366 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:39:58.368 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:39:58.374 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:39:58.377 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:39:58.380 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:39:58.381 +05:30 [INF] Deserializing the notes
2024-12-19 12:39:58.382 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:39:58.384 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.1467ms
2024-12-19 12:39:58.386 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:39:58.387 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.9988ms
2024-12-19 12:40:03.804 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:40:03.809 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:40:03.811 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.7053ms
2024-12-19 12:40:03.814 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:40:03.820 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:40:03.824 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:40:03.826 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:40:03.831 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:40:03.834 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:40:03.837 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:40:03.839 +05:30 [INF] Deserializing the notes
2024-12-19 12:40:03.842 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:40:03.845 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.6163ms
2024-12-19 12:40:03.848 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:40:03.850 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.5391ms
2024-12-19 12:40:13.590 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:40:13.595 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:40:13.598 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.0265ms
2024-12-19 12:40:13.601 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:40:13.614 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:40:13.616 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:40:13.620 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:40:13.625 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:40:13.632 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:40:13.633 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 12:40:13.634 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 12:40:13.635 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 12:40:13.655 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 12:40:13.659 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 12:40:13.678 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 12:40:13.683 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 12:40:13.686 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 12:40:13.689 +05:30 [INF] Notes retrieved successfully
2024-12-19 12:40:13.691 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:40:13.695 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 70.1366ms
2024-12-19 12:40:13.698 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:40:13.701 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 100.1663ms
2024-12-19 12:40:14.779 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:40:14.784 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:40:14.789 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:40:14.792 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:40:14.796 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:40:14.801 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:40:14.804 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:40:14.808 +05:30 [INF] Deserializing the notes
2024-12-19 12:40:14.813 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:40:14.815 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.6795ms
2024-12-19 12:40:14.816 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:40:14.818 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.3588ms
2024-12-19 12:40:16.091 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:40:16.095 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:40:16.097 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:40:16.101 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:40:16.105 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:40:16.111 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:40:16.115 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:40:16.116 +05:30 [INF] Deserializing the notes
2024-12-19 12:40:16.117 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:40:16.119 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.7244ms
2024-12-19 12:40:16.123 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:40:16.125 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.838ms
2024-12-19 12:41:10.715 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:41:10.733 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:41:10.737 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 21.6872ms
2024-12-19 12:41:10.739 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:41:10.746 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:41:10.747 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:41:10.749 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:41:10.753 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:41:10.755 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:41:10.758 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:41:10.759 +05:30 [INF] Deserializing the notes
2024-12-19 12:41:10.761 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:41:10.764 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.4955ms
2024-12-19 12:41:10.767 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:41:10.768 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.7649ms
2024-12-19 12:41:28.727 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 12:41:28.735 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:41:28.738 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.7739ms
2024-12-19 12:41:28.743 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:41:28.757 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:41:28.759 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:41:28.760 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:41:28.762 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:41:28.767 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:41:28.768 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:41:28.769 +05:30 [INF] Deserializing the notes
2024-12-19 12:41:28.770 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:41:28.772 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.8872ms
2024-12-19 12:41:28.774 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:41:28.775 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.4652ms
2024-12-19 12:41:30.512 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 12:41:30.516 +05:30 [INF] CORS policy execution successful.
2024-12-19 12:41:30.519 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:41:30.522 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 12:41:30.530 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 12:41:30.538 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 12:41:30.541 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 12:41:30.542 +05:30 [INF] Deserializing the notes
2024-12-19 12:41:30.543 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 12:41:30.544 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.1744ms
2024-12-19 12:41:30.546 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 12:41:30.547 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.8339ms
2024-12-19 13:01:11.105 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-19 13:01:11.574 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-19 13:01:11.575 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-19 13:01:11.654 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-19 13:01:11.656 +05:30 [INF] Hosting environment: Development
2024-12-19 13:01:11.657 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-19 13:01:12.620 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-19 13:01:12.946 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-19 13:01:12.945 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-19 13:01:12.948 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 343.4016ms
2024-12-19 13:01:12.968 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 24.7768ms
2024-12-19 13:01:13.038 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 92.5412ms
2024-12-19 13:01:13.076 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-19 13:01:13.196 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 120.5345ms
2024-12-19 13:02:44.421 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-19 13:02:44.441 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:02:44.447 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 26.5318ms
2024-12-19 13:02:44.461 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-19 13:02:44.473 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:02:44.600 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-19 13:02:44.657 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-19 13:02:44.963 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-19 13:02:44.966 +05:30 [INF] Checking if the user present
2024-12-19 13:02:44.970 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-19 13:02:47.197 +05:30 [INF] Executed DbCommand (103ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-19 13:02:47.340 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-19 13:02:47.342 +05:30 [INF] Verifying the password
2024-12-19 13:02:48.292 +05:30 [INF] Password is valid and token is generated
2024-12-19 13:02:48.295 +05:30 [INF] Login successful
2024-12-19 13:02:48.311 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 13:02:48.327 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 3661.1946ms
2024-12-19 13:02:48.331 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-19 13:02:48.345 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 3884.7431ms
2024-12-19 13:02:48.369 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 13:02:48.377 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:02:48.381 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.4797ms
2024-12-19 13:02:48.404 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 13:02:48.410 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:02:48.503 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:02:48.515 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:02:48.531 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 13:02:48.607 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 13:02:48.609 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 13:02:48.616 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 13:02:48.623 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 13:02:48.692 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 13:02:48.700 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 13:02:48.828 +05:30 [INF] Executed DbCommand (21ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 13:02:48.838 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 13:02:48.840 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 13:02:48.864 +05:30 [INF] Notes retrieved successfully
2024-12-19 13:02:48.867 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 13:02:48.872 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 348.8246ms
2024-12-19 13:02:48.874 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:02:48.876 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 472.5361ms
2024-12-19 13:02:58.939 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 13:02:58.945 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:02:58.948 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.1848ms
2024-12-19 13:02:58.952 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 13:02:58.963 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:02:58.971 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:02:58.972 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:02:58.977 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 13:02:58.987 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 13:02:58.989 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 13:02:58.990 +05:30 [INF] Deserializing the notes
2024-12-19 13:02:58.995 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 13:02:58.997 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.3631ms
2024-12-19 13:02:59.000 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:02:59.002 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.9466ms
2024-12-19 13:02:59.961 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 13:02:59.967 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:02:59.972 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:02:59.974 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:02:59.987 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 13:02:59.992 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 13:02:59.995 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 13:02:59.997 +05:30 [INF] Deserializing the notes
2024-12-19 13:02:59.998 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 13:03:00.001 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.3346ms
2024-12-19 13:03:00.003 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:03:00.005 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.46ms
2024-12-19 13:03:01.252 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 13:03:01.256 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:03:01.258 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:03:01.264 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:03:01.272 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 13:03:01.278 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 13:03:01.281 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 13:03:01.282 +05:30 [INF] Deserializing the notes
2024-12-19 13:03:01.283 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 13:03:01.285 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.9119ms
2024-12-19 13:03:01.287 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:03:01.288 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.5371ms
2024-12-19 13:51:05.930 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 13:51:05.939 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:51:05.940 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.9778ms
2024-12-19 13:51:05.945 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 13:51:05.949 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:51:05.951 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:51:05.953 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:51:05.956 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 13:51:05.960 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 13:51:05.961 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 13:51:05.962 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 13:51:05.963 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 13:51:06.113 +05:30 [INF] Executed DbCommand (19ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 13:51:06.119 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 13:51:06.138 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 13:51:06.145 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 13:51:06.147 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 13:51:06.149 +05:30 [INF] Notes retrieved successfully
2024-12-19 13:51:06.150 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 13:51:06.152 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 197.4897ms
2024-12-19 13:51:06.154 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:51:06.155 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 210.6413ms
2024-12-19 13:51:07.173 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 13:51:07.178 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:51:07.181 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:51:07.183 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:51:07.190 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 13:51:07.194 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 13:51:07.197 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 13:51:07.198 +05:30 [INF] Deserializing the notes
2024-12-19 13:51:07.201 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 13:51:07.205 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.2708ms
2024-12-19 13:51:07.210 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:51:07.213 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.5039ms
2024-12-19 13:51:17.647 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 13:51:17.661 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:51:17.665 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 18.5029ms
2024-12-19 13:51:17.668 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 13:51:17.678 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:51:17.679 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:51:17.681 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:51:17.687 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 13:51:17.690 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 13:51:17.692 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 13:51:17.693 +05:30 [INF] Deserializing the notes
2024-12-19 13:51:17.694 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 13:51:17.696 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.1973ms
2024-12-19 13:51:17.698 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:51:17.700 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.3431ms
2024-12-19 13:51:33.686 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - null null
2024-12-19 13:51:33.693 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:51:33.695 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - 204 null null 8.9672ms
2024-12-19 13:51:33.698 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1049 - application/json 101
2024-12-19 13:51:33.708 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:51:33.713 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 13:51:33.724 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:51:33.950 +05:30 [INF] Received note update: {"Title":"sxhdg","Description":"bsvxy","Color":"#ffffff","IsArchive":false,"IsTrash":false}
2024-12-19 13:51:33.955 +05:30 [INF] Updating note with ID: 1049
2024-12-19 13:51:33.959 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1049
2024-12-19 13:51:33.966 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 13:51:33.973 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 13:51:33.982 +05:30 [INF] Retrieving note with ID: 1049
2024-12-19 13:51:34.016 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 13:51:34.045 +05:30 [INF] User with ID: 1 has permission to update note ID: 1049
2024-12-19 13:51:34.094 +05:30 [INF] Successfully updated note with ID: 1049
2024-12-19 13:51:34.102 +05:30 [INF] Retrieved notes successfully
2024-12-19 13:51:34.103 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 13:51:34.106 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 378.1451ms
2024-12-19 13:51:34.109 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 13:51:34.111 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1049 - 200 null application/json; charset=utf-8 413.3164ms
2024-12-19 13:54:44.689 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 13:54:44.701 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:54:44.703 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.5706ms
2024-12-19 13:54:44.713 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 13:54:44.726 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:54:44.728 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:54:44.730 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:54:44.734 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 13:54:44.737 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 13:54:44.740 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 13:54:44.743 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 13:54:44.744 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 13:54:44.759 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 13:54:44.762 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 13:54:44.776 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 13:54:44.780 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 13:54:44.781 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 13:54:44.783 +05:30 [INF] Notes retrieved successfully
2024-12-19 13:54:44.784 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 13:54:44.786 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 52.1447ms
2024-12-19 13:54:44.788 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:54:44.789 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 80.4415ms
2024-12-19 13:54:49.604 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 13:54:49.610 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:54:49.613 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:54:49.623 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:54:49.630 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 13:54:49.636 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 13:54:49.639 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 13:54:49.641 +05:30 [INF] Deserializing the notes
2024-12-19 13:54:49.643 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 13:54:49.646 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.6998ms
2024-12-19 13:54:49.649 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:54:49.651 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.551ms
2024-12-19 13:54:55.314 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 13:54:55.320 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:54:55.322 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.5288ms
2024-12-19 13:54:55.327 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 13:54:55.333 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:54:55.335 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:54:55.337 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:54:55.339 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 13:54:55.343 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 13:54:55.345 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 13:54:55.347 +05:30 [INF] Deserializing the notes
2024-12-19 13:54:55.349 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 13:54:55.352 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.6326ms
2024-12-19 13:54:55.355 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:54:55.357 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.8205ms
2024-12-19 13:54:58.945 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 13:54:58.951 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:54:58.954 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:54:58.956 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:54:58.964 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 13:54:58.971 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 13:54:58.982 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 13:54:58.984 +05:30 [INF] Deserializing the notes
2024-12-19 13:54:58.986 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 13:54:58.989 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 26.6172ms
2024-12-19 13:54:58.992 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:54:58.995 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 50.5428ms
2024-12-19 13:55:01.953 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 13:55:01.959 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:55:01.964 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.5553ms
2024-12-19 13:55:01.969 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 13:55:01.976 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:55:01.979 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:55:01.980 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:55:01.983 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 13:55:01.985 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 13:55:01.989 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 13:55:01.990 +05:30 [INF] Deserializing the notes
2024-12-19 13:55:01.991 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 13:55:01.994 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.572ms
2024-12-19 13:55:01.996 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:55:01.998 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.9247ms
2024-12-19 13:55:31.233 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 13:55:31.259 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:55:31.261 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 27.7113ms
2024-12-19 13:55:31.265 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 13:55:31.269 +05:30 [INF] CORS policy execution successful.
2024-12-19 13:55:31.271 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:55:31.273 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 13:55:31.275 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 13:55:31.278 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 13:55:31.280 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 13:55:31.280 +05:30 [INF] Deserializing the notes
2024-12-19 13:55:31.282 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 13:55:31.284 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.3426ms
2024-12-19 13:55:31.287 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 13:55:31.289 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.1458ms
2024-12-19 14:49:10.254 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 14:49:10.273 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:49:10.275 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 21.1713ms
2024-12-19 14:49:10.294 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:49:10.300 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:49:10.307 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:19:10'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:49:10.337 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:49:10.430 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:49:10.533 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:49:10.539 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:49:10.545 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:00000003": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:49:10.578 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 284.7626ms
2024-12-19 14:49:58.759 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 14:49:58.762 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:49:58.763 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9205ms
2024-12-19 14:49:58.766 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:49:58.770 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:49:58.772 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:19:58'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:49:58.778 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:49:58.810 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:49:58.871 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:49:58.876 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:49:58.878 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:00000007": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:49:58.885 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 119.2499ms
2024-12-19 14:49:59.392 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:49:59.400 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:49:59.403 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:19:59'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:49:59.409 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:49:59.448 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:49:59.532 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:49:59.551 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:49:59.554 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:00000009": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:49:59.567 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 175.0319ms
2024-12-19 14:50:07.710 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 14:50:07.714 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:07.719 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.501ms
2024-12-19 14:50:07.722 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:50:07.728 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:07.731 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:20:07'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:50:07.737 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:50:07.780 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:50:07.881 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:50:07.888 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:50:07.890 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:0000000D": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:50:07.897 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 175.2017ms
2024-12-19 14:50:10.037 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:50:10.041 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:10.043 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:20:10'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:50:10.052 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:50:10.089 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:50:10.157 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:50:10.162 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:50:10.164 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:0000000F": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:50:10.174 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 137.0596ms
2024-12-19 14:50:11.503 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:50:11.506 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:11.509 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:20:11'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:50:11.517 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:50:11.551 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:50:11.613 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:50:11.620 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:50:11.621 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:00000011": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:50:11.629 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 126.9725ms
2024-12-19 14:50:14.280 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 14:50:14.286 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:14.288 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.8315ms
2024-12-19 14:50:14.291 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:50:14.300 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:14.302 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:20:14'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:50:14.309 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:50:14.343 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:50:14.408 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:50:14.419 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:50:14.423 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:00000015": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:50:14.434 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 142.6372ms
2024-12-19 14:50:15.340 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:50:15.344 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:15.347 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:20:15'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:50:15.353 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:50:15.387 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:50:15.454 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:50:15.459 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:50:15.462 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:00000017": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:50:15.472 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 132.1569ms
2024-12-19 14:50:21.562 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 14:50:21.568 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:21.571 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.4677ms
2024-12-19 14:50:21.574 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:50:21.580 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:21.585 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:20:21'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:50:21.592 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:50:21.623 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:50:21.684 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:50:21.690 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:50:21.693 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:0000001B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:50:21.707 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 133.7407ms
2024-12-19 14:50:46.446 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 14:50:46.452 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:46.456 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.9304ms
2024-12-19 14:50:46.461 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:50:46.469 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:46.473 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:20:46'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:50:46.480 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:50:46.511 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:50:46.586 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:50:46.594 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:50:46.596 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:0000001F": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:50:46.603 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 144.3182ms
2024-12-19 14:50:53.492 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 14:50:53.495 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:53.496 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.9859ms
2024-12-19 14:50:53.501 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:50:53.507 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:53.509 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:20:53'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:50:53.514 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:50:53.551 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:50:53.625 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:50:53.630 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:50:53.632 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:00000023": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:50:53.643 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 141.776ms
2024-12-19 14:50:55.969 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:50:55.974 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:55.977 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:20:55'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:50:55.987 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:50:56.024 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:50:56.095 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:50:56.106 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:50:56.109 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:00000025": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:50:56.117 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 148.5565ms
2024-12-19 14:50:57.113 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:50:57.150 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:50:57.155 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:20:57'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:50:57.160 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:50:57.192 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:50:57.256 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:50:57.263 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:50:57.265 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:00000027": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:50:57.275 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 162.411ms
2024-12-19 14:51:03.515 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 14:51:03.518 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:51:03.519 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.0605ms
2024-12-19 14:51:03.522 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:51:03.532 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:51:03.534 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '19-12-2024 08:32:48', Current time (UTC): '19-12-2024 09:21:03'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-19 14:51:03.541 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-19 14:51:03.576 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-19 14:51:03.647 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-19 14:51:03.658 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-19 14:51:03.660 +05:30 [ERR] Connection id "0HN8VVSEGT6GT", Request id "0HN8VVSEGT6GT:0000002B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-19 14:51:03.674 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 152.5893ms
2024-12-19 14:51:44.505 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-19 14:51:44.519 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:51:44.522 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 17.719ms
2024-12-19 14:51:44.525 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-19 14:51:44.534 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:51:44.535 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-19 14:51:44.540 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-19 14:51:44.568 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-19 14:51:44.573 +05:30 [INF] Checking if the user present
2024-12-19 14:51:44.574 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-19 14:51:44.615 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-19 14:51:44.620 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-19 14:51:44.624 +05:30 [INF] Verifying the password
2024-12-19 14:51:45.095 +05:30 [INF] Password is valid and token is generated
2024-12-19 14:51:45.096 +05:30 [INF] Login successful
2024-12-19 14:51:45.099 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 14:51:45.100 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 555.7994ms
2024-12-19 14:51:45.104 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-19 14:51:45.107 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 581.8474ms
2024-12-19 14:51:45.132 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 14:51:45.137 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:51:45.139 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.2792ms
2024-12-19 14:51:45.141 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:51:45.150 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:51:45.155 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 14:51:45.156 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 14:51:45.162 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 14:51:45.165 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 14:51:45.169 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 14:51:45.175 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 14:51:45.177 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 14:51:45.185 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 14:51:45.191 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 14:51:45.211 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 14:51:45.217 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 14:51:45.220 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 14:51:45.223 +05:30 [INF] Notes retrieved successfully
2024-12-19 14:51:45.225 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 14:51:45.229 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 66.9411ms
2024-12-19 14:51:45.230 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 14:51:45.232 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 90.8872ms
2024-12-19 14:52:01.920 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 14:52:01.924 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:52:01.925 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.4804ms
2024-12-19 14:52:01.936 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:52:01.946 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:52:01.949 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 14:52:01.950 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 14:52:01.955 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 14:52:01.959 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 14:52:01.962 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 14:52:01.963 +05:30 [INF] Deserializing the notes
2024-12-19 14:52:01.965 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 14:52:01.967 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.1274ms
2024-12-19 14:52:01.970 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 14:52:01.972 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.7069ms
2024-12-19 14:52:22.852 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 14:52:22.865 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:52:22.870 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 18.9909ms
2024-12-19 14:52:22.877 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:52:22.883 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:52:22.885 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 14:52:22.886 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 14:52:22.890 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 14:52:22.893 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 14:52:22.896 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 14:52:22.897 +05:30 [INF] Deserializing the notes
2024-12-19 14:52:22.899 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 14:52:22.902 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.5471ms
2024-12-19 14:52:22.905 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 14:52:22.906 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.4734ms
2024-12-19 14:52:31.287 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 14:52:31.294 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:52:31.297 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.9859ms
2024-12-19 14:52:31.300 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:52:31.310 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:52:31.312 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 14:52:31.313 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 14:52:31.317 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 14:52:31.319 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 14:52:31.322 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 14:52:31.323 +05:30 [INF] Deserializing the notes
2024-12-19 14:52:31.324 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 14:52:31.326 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5447ms
2024-12-19 14:52:31.329 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 14:52:31.330 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.4841ms
2024-12-19 14:52:40.872 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 14:52:40.879 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:52:40.885 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.4909ms
2024-12-19 14:52:40.889 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 14:52:40.895 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:52:40.896 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 14:52:40.898 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 14:52:40.904 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 14:52:40.905 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 14:52:40.908 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 14:52:40.909 +05:30 [INF] Deserializing the notes
2024-12-19 14:52:40.911 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 14:52:40.912 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.1369ms
2024-12-19 14:52:40.914 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 14:52:40.917 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.9103ms
2024-12-19 14:58:50.123 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - null null
2024-12-19 14:58:50.129 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:58:50.130 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - 204 null null 6.8689ms
2024-12-19 14:58:50.132 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1049 - application/json 101
2024-12-19 14:58:50.134 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:58:50.135 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 14:58:50.135 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 14:58:50.137 +05:30 [INF] Received note update: {"Title":"sxhdg","Description":"bsvxy","Color":"#ffffff","IsArchive":false,"IsTrash":false}
2024-12-19 14:58:50.138 +05:30 [INF] Updating note with ID: 1049
2024-12-19 14:58:50.138 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1049
2024-12-19 14:58:50.139 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 14:58:50.157 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 14:58:50.160 +05:30 [INF] Retrieving note with ID: 1049
2024-12-19 14:58:50.164 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 14:58:50.165 +05:30 [INF] User with ID: 1 has permission to update note ID: 1049
2024-12-19 14:58:50.166 +05:30 [INF] Successfully updated note with ID: 1049
2024-12-19 14:58:50.167 +05:30 [INF] Retrieved notes successfully
2024-12-19 14:58:50.168 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 14:58:50.168 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 31.9808ms
2024-12-19 14:58:50.169 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 14:58:50.170 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1049 - 200 null application/json; charset=utf-8 38.5582ms
2024-12-19 14:58:51.208 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1049 - application/json 101
2024-12-19 14:58:51.210 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:58:51.211 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 14:58:51.212 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 14:58:51.213 +05:30 [INF] Received note update: {"Title":"sxhdg","Description":"bsvxy","Color":"#ffffff","IsArchive":false,"IsTrash":false}
2024-12-19 14:58:51.214 +05:30 [INF] Updating note with ID: 1049
2024-12-19 14:58:51.214 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1049
2024-12-19 14:58:51.214 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 14:58:51.217 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 14:58:51.218 +05:30 [INF] Retrieving note with ID: 1049
2024-12-19 14:58:51.220 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 14:58:51.222 +05:30 [INF] User with ID: 1 has permission to update note ID: 1049
2024-12-19 14:58:51.222 +05:30 [INF] Successfully updated note with ID: 1049
2024-12-19 14:58:51.223 +05:30 [INF] Retrieved notes successfully
2024-12-19 14:58:51.223 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 14:58:51.224 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 11.7063ms
2024-12-19 14:58:51.226 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 14:58:51.226 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1049 - 200 null application/json; charset=utf-8 18.9045ms
2024-12-19 14:58:52.055 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1049 - application/json 101
2024-12-19 14:58:52.059 +05:30 [INF] CORS policy execution successful.
2024-12-19 14:58:52.059 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 14:58:52.060 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 14:58:52.061 +05:30 [INF] Received note update: {"Title":"sxhdg","Description":"bsvxy","Color":"#ffffff","IsArchive":false,"IsTrash":false}
2024-12-19 14:58:52.062 +05:30 [INF] Updating note with ID: 1049
2024-12-19 14:58:52.062 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1049
2024-12-19 14:58:52.062 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 14:58:52.066 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 14:58:52.070 +05:30 [INF] Retrieving note with ID: 1049
2024-12-19 14:58:52.071 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 14:58:52.073 +05:30 [INF] User with ID: 1 has permission to update note ID: 1049
2024-12-19 14:58:52.074 +05:30 [INF] Successfully updated note with ID: 1049
2024-12-19 14:58:52.076 +05:30 [INF] Retrieved notes successfully
2024-12-19 14:58:52.076 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 14:58:52.077 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 15.8238ms
2024-12-19 14:58:52.077 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 14:58:52.078 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1049 - 200 null application/json; charset=utf-8 23.3773ms
2024-12-19 15:08:32.624 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 15:08:32.629 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:08:32.630 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.6439ms
2024-12-19 15:08:32.632 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:08:32.634 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:08:32.635 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:08:32.636 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:08:32.637 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:08:32.638 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:08:32.640 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 15:08:32.640 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 15:08:32.641 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 15:08:32.665 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 15:08:32.666 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 15:08:32.674 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 15:08:32.676 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 15:08:32.676 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 15:08:32.677 +05:30 [INF] Notes retrieved successfully
2024-12-19 15:08:32.678 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:08:32.678 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 41.3022ms
2024-12-19 15:08:32.679 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:08:32.680 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.0455ms
2024-12-19 15:08:49.907 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 15:08:49.909 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:08:49.910 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.5372ms
2024-12-19 15:08:49.912 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:08:49.913 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:08:49.914 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:08:49.915 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:08:49.917 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:08:49.919 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:08:49.920 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 15:08:49.921 +05:30 [INF] Deserializing the notes
2024-12-19 15:08:49.921 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:08:49.922 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5003ms
2024-12-19 15:08:49.923 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:08:49.924 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.7833ms
2024-12-19 15:10:29.584 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 15:10:29.586 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:10:29.587 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8887ms
2024-12-19 15:10:29.592 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:10:29.597 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:10:29.598 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:10:29.598 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:10:29.600 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:10:29.601 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:10:29.602 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 15:10:29.602 +05:30 [INF] Deserializing the notes
2024-12-19 15:10:29.603 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:10:29.604 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.547ms
2024-12-19 15:10:29.606 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:10:29.607 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.5059ms
2024-12-19 15:10:41.910 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 15:10:41.911 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:10:41.911 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.5557ms
2024-12-19 15:10:41.912 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:10:41.915 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:10:41.916 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:10:41.917 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:10:41.918 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:10:41.920 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:10:41.920 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 15:10:41.921 +05:30 [INF] Deserializing the notes
2024-12-19 15:10:41.921 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:10:41.922 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2393ms
2024-12-19 15:10:41.923 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:10:41.924 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.4697ms
2024-12-19 15:13:09.394 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 15:13:09.398 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:13:09.398 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.943ms
2024-12-19 15:13:09.402 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:13:09.405 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:13:09.406 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:13:09.408 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:13:09.410 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:13:09.411 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:13:09.412 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 15:13:09.412 +05:30 [INF] Deserializing the notes
2024-12-19 15:13:09.413 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:13:09.414 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2829ms
2024-12-19 15:13:09.414 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:13:09.415 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.0267ms
2024-12-19 15:17:22.743 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 15:17:22.744 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:17:22.745 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.8986ms
2024-12-19 15:17:22.746 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:17:22.748 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:17:22.750 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:22.751 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:17:22.752 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:17:22.753 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:17:22.754 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 15:17:22.755 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 15:17:22.755 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 15:17:22.775 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 15:17:22.777 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 15:17:22.784 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 15:17:22.787 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 15:17:22.787 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 15:17:22.788 +05:30 [INF] Notes retrieved successfully
2024-12-19 15:17:22.813 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:17:22.814 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 62.6371ms
2024-12-19 15:17:22.815 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:22.816 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 69.8153ms
2024-12-19 15:17:41.388 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 15:17:41.393 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:17:41.395 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6317ms
2024-12-19 15:17:41.398 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:17:41.404 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:17:41.405 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:41.406 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:17:41.407 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:17:41.408 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:17:41.409 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 15:17:41.409 +05:30 [INF] Deserializing the notes
2024-12-19 15:17:41.410 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:17:41.411 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.685ms
2024-12-19 15:17:41.412 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:41.413 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.2078ms
2024-12-19 15:17:42.336 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:17:42.340 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:17:42.341 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:42.342 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:17:42.343 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:17:42.344 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:17:42.345 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 15:17:42.345 +05:30 [INF] Deserializing the notes
2024-12-19 15:17:42.346 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:17:42.347 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.953ms
2024-12-19 15:17:42.348 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:42.349 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.8906ms
2024-12-19 15:17:43.471 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:17:43.473 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:17:43.474 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:43.475 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:17:43.477 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:17:43.479 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:17:43.480 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 15:17:43.480 +05:30 [INF] Deserializing the notes
2024-12-19 15:17:43.481 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:17:43.483 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.8809ms
2024-12-19 15:17:43.483 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:43.485 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.3397ms
2024-12-19 15:17:52.514 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 15:17:52.517 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:17:52.518 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.421ms
2024-12-19 15:17:52.521 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:17:52.525 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:17:52.526 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:52.527 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:17:52.530 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:17:52.532 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:17:52.533 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 15:17:52.535 +05:30 [INF] Deserializing the notes
2024-12-19 15:17:52.535 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:17:52.537 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.9196ms
2024-12-19 15:17:52.538 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:52.539 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.9152ms
2024-12-19 15:17:55.063 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:17:55.064 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:17:55.065 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:55.066 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:17:55.067 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:17:55.069 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:17:55.070 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 15:17:55.071 +05:30 [INF] Deserializing the notes
2024-12-19 15:17:55.071 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:17:55.073 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.3004ms
2024-12-19 15:17:55.076 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:55.077 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7062ms
2024-12-19 15:17:55.580 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:17:55.584 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:17:55.585 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:55.586 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:17:55.589 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:17:55.590 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:17:55.591 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 15:17:55.591 +05:30 [INF] Deserializing the notes
2024-12-19 15:17:55.592 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:17:55.593 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9181ms
2024-12-19 15:17:55.593 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:17:55.594 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7427ms
2024-12-19 15:40:52.340 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-19 15:40:52.346 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:40:52.347 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.0501ms
2024-12-19 15:40:52.349 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:40:52.350 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:40:52.351 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:40:52.352 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:40:52.353 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:40:52.354 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:40:52.355 +05:30 [WRN] Failed to fetch notes from cache
2024-12-19 15:40:52.356 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-19 15:40:52.356 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 15:40:52.369 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 15:40:52.371 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-19 15:40:52.377 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-19 15:40:52.379 +05:30 [INF] 23 notes retrieved for user with ID: 1
2024-12-19 15:40:52.380 +05:30 [INF] Serializing notes to store it in cache
2024-12-19 15:40:52.380 +05:30 [INF] Notes retrieved successfully
2024-12-19 15:40:52.381 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:40:52.382 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 29.0127ms
2024-12-19 15:40:52.382 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:40:52.383 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.3649ms
2024-12-19 15:40:53.315 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:40:53.317 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:40:53.318 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:40:53.318 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:40:53.321 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:40:53.322 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:40:53.323 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 15:40:53.326 +05:30 [INF] Deserializing the notes
2024-12-19 15:40:53.327 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:40:53.328 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.5993ms
2024-12-19 15:40:53.329 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:40:53.330 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.1966ms
2024-12-19 15:40:54.427 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-19 15:40:54.430 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:40:54.431 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:40:54.432 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:40:54.433 +05:30 [INF] Attempt to get all notes from Database
2024-12-19 15:40:54.434 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-19 15:40:54.435 +05:30 [INF] Fetched notes from cache successfully
2024-12-19 15:40:54.435 +05:30 [INF] Deserializing the notes
2024-12-19 15:40:54.435 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-19 15:40:54.436 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.3635ms
2024-12-19 15:40:54.437 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-19 15:40:54.438 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.2034ms
2024-12-19 15:41:07.046 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - null null
2024-12-19 15:41:07.047 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:41:07.048 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1049 - 204 null null 2.2225ms
2024-12-19 15:41:07.050 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1049 - application/json 101
2024-12-19 15:41:07.052 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:41:07.053 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 15:41:07.054 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:41:07.056 +05:30 [INF] Received note update: {"Title":"sxhdg","Description":"bsvxy","Color":"#ffffff","IsArchive":false,"IsTrash":false}
2024-12-19 15:41:07.057 +05:30 [INF] Updating note with ID: 1049
2024-12-19 15:41:07.057 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1049
2024-12-19 15:41:07.058 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 15:41:07.062 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 15:41:07.064 +05:30 [INF] Retrieving note with ID: 1049
2024-12-19 15:41:07.068 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 15:41:07.070 +05:30 [INF] User with ID: 1 has permission to update note ID: 1049
2024-12-19 15:41:07.070 +05:30 [INF] Successfully updated note with ID: 1049
2024-12-19 15:41:07.071 +05:30 [INF] Retrieved notes successfully
2024-12-19 15:41:07.072 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 15:41:07.073 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 17.8947ms
2024-12-19 15:41:07.074 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 15:41:07.074 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1049 - 200 null application/json; charset=utf-8 24.7463ms
2024-12-19 15:41:17.711 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1078 - null null
2024-12-19 15:41:17.713 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:41:17.714 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1078 - 204 null null 2.4986ms
2024-12-19 15:41:17.716 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1078 - application/json 98
2024-12-19 15:41:17.717 +05:30 [INF] CORS policy execution successful.
2024-12-19 15:41:17.718 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 15:41:17.719 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-19 15:41:17.721 +05:30 [INF] Received note update: {"Title":"ne","Description":"jdfvc","Color":"#F6E2DD","IsArchive":false,"IsTrash":false}
2024-12-19 15:41:17.721 +05:30 [INF] Updating note with ID: 1078
2024-12-19 15:41:17.722 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1078
2024-12-19 15:41:17.722 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-19 15:41:17.725 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-19 15:41:17.727 +05:30 [INF] Retrieving note with ID: 1078
2024-12-19 15:41:17.731 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-19 15:41:17.733 +05:30 [INF] User with ID: 1 has permission to update note ID: 1078
2024-12-19 15:41:17.800 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-19 15:41:17.816 +05:30 [INF] Successfully updated note with ID: 1078
2024-12-19 15:41:17.816 +05:30 [INF] Retrieved notes successfully
2024-12-19 15:41:17.817 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-19 15:41:17.817 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 97.6937ms
2024-12-19 15:41:17.818 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-19 15:41:17.819 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1078 - 200 null application/json; charset=utf-8 103.1617ms
