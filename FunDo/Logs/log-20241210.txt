2024-12-10 10:39:02.345 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-10 10:39:02.822 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-10 10:39:02.824 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-10 10:39:02.900 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-10 10:39:02.901 +05:30 [INF] Hosting environment: Development
2024-12-10 10:39:02.902 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-10 10:39:04.254 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-10 10:39:04.675 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 439.4455ms
2024-12-10 10:39:04.682 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-10 10:39:04.682 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-10 10:39:04.697 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 15.6857ms
2024-12-10 10:39:04.779 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 96.9644ms
2024-12-10 10:39:04.957 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-10 10:39:05.155 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 198.5265ms
2024-12-10 10:40:49.566 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-10 10:40:49.591 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:40:49.597 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 30.8559ms
2024-12-10 10:40:49.609 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-10 10:40:49.619 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:40:51.535 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 10:40:51.595 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-10 10:40:52.673 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-10 10:40:52.676 +05:30 [INF] Checking if the user present
2024-12-10 10:40:52.680 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-10 10:40:56.280 +05:30 [INF] Executed DbCommand (154ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-10 10:40:56.445 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-10 10:40:56.448 +05:30 [INF] Verifying the password
2024-12-10 10:40:57.411 +05:30 [INF] Password is valid and token is generated
2024-12-10 10:40:57.414 +05:30 [INF] Login successful
2024-12-10 10:40:57.432 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 10:40:57.451 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 5845.8654ms
2024-12-10 10:40:57.454 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 10:40:57.469 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 7859.4475ms
2024-12-10 10:40:57.494 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:40:57.500 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:40:57.502 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.0856ms
2024-12-10 10:40:57.506 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:40:57.509 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:40:57.612 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:40:57.623 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:40:57.635 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:40:57.717 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:40:57.719 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 10:40:57.723 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 10:40:57.730 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 10:40:57.805 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 10:40:57.814 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 10:40:57.944 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 10:40:57.953 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-10 10:40:57.955 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 10:40:57.976 +05:30 [INF] Notes retrieved successfully
2024-12-10 10:40:57.980 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:40:57.986 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 359.4379ms
2024-12-10 10:40:57.989 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:40:57.991 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 485.4267ms
2024-12-10 10:41:11.871 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - null null
2024-12-10 10:41:11.877 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:41:11.880 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - 204 null null 9.5488ms
2024-12-10 10:41:11.884 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1035 - application/json 133
2024-12-10 10:41:11.900 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:41:11.909 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 10:41:11.918 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:41:12.420 +05:30 [INF] Received note update: {"Title":"wqeqweqwewqewq","Description":"qweewqererw","Color":"#AECCDC","isArchive":false,"isCreated":true,"isTrash":false}
2024-12-10 10:41:12.422 +05:30 [INF] Updating note with ID: 1035
2024-12-10 10:41:12.426 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1035
2024-12-10 10:41:12.431 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 10:41:12.563 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 10:41:12.567 +05:30 [INF] Retrieving note with ID: 1035
2024-12-10 10:41:12.602 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 10:41:12.638 +05:30 [INF] User with ID: 1 has permission to update note ID: 1035
2024-12-10 10:41:12.826 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 10:41:12.853 +05:30 [INF] Successfully updated note with ID: 1035
2024-12-10 10:41:12.863 +05:30 [INF] Retrieved notes successfully
2024-12-10 10:41:12.866 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 10:41:12.871 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 947.303ms
2024-12-10 10:41:12.873 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 10:41:12.875 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1035 - 200 null application/json; charset=utf-8 991.4868ms
2024-12-10 10:41:30.322 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:41:30.331 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:41:30.332 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.8324ms
2024-12-10 10:41:30.336 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:41:30.340 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:41:30.345 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:41:30.346 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:41:30.355 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:41:30.358 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:41:30.361 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 10:41:30.363 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 10:41:30.364 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 10:41:30.369 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 10:41:30.372 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 10:41:30.387 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 10:41:30.390 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-10 10:41:30.391 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 10:41:30.393 +05:30 [INF] Notes retrieved successfully
2024-12-10 10:41:30.394 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:41:30.396 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 46.6398ms
2024-12-10 10:41:30.397 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:41:30.399 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 63.0731ms
2024-12-10 10:42:04.139 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:42:04.143 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:42:04.145 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6847ms
2024-12-10 10:42:04.162 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:42:04.171 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:42:04.173 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:04.175 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:42:04.179 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:42:04.187 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:42:04.188 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:42:04.189 +05:30 [INF] Deserializing the notes
2024-12-10 10:42:04.195 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:42:04.197 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.3641ms
2024-12-10 10:42:04.199 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:04.199 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:42:04.201 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.7609ms
2024-12-10 10:42:04.204 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:42:04.210 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:04.211 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:42:04.214 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:42:04.217 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:42:04.220 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:42:04.221 +05:30 [INF] Deserializing the notes
2024-12-10 10:42:04.222 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:42:04.225 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.2889ms
2024-12-10 10:42:04.227 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:04.229 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.0115ms
2024-12-10 10:42:22.212 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:42:22.216 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:42:22.219 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.5543ms
2024-12-10 10:42:22.222 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:42:22.226 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:42:22.228 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:22.229 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:42:22.233 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:42:22.235 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:42:22.239 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:42:22.240 +05:30 [INF] Deserializing the notes
2024-12-10 10:42:22.242 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:42:22.244 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.6824ms
2024-12-10 10:42:22.246 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:22.248 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.2419ms
2024-12-10 10:42:29.187 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:42:29.194 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:42:29.195 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.898ms
2024-12-10 10:42:29.199 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:42:29.205 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:42:29.207 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:29.208 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:42:29.213 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:42:29.215 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:42:29.218 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:42:29.219 +05:30 [INF] Deserializing the notes
2024-12-10 10:42:29.221 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:42:29.224 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.2712ms
2024-12-10 10:42:29.226 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:29.228 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.6959ms
2024-12-10 10:42:37.345 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:42:37.349 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:42:37.351 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7316ms
2024-12-10 10:42:37.354 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:42:37.362 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:42:37.364 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:37.366 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:42:37.372 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:42:37.377 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:42:37.382 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:42:37.383 +05:30 [INF] Deserializing the notes
2024-12-10 10:42:37.385 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:42:37.387 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.3996ms
2024-12-10 10:42:37.389 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:37.391 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.7796ms
2024-12-10 10:42:42.596 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:42:42.600 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:42:42.603 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.5586ms
2024-12-10 10:42:42.608 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:42:42.614 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:42:42.615 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:42.618 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:42:42.621 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:42:42.625 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:42:42.629 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:42:42.631 +05:30 [INF] Deserializing the notes
2024-12-10 10:42:42.635 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:42:42.640 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.86ms
2024-12-10 10:42:42.643 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:42.646 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.0771ms
2024-12-10 10:42:46.989 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:42:46.992 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:42:46.994 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:46.995 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:42:47.001 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:42:47.004 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:42:47.008 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:42:47.009 +05:30 [INF] Deserializing the notes
2024-12-10 10:42:47.011 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:42:47.012 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.8627ms
2024-12-10 10:42:47.015 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:42:47.016 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.6077ms
2024-12-10 10:43:10.626 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:43:10.630 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:43:10.632 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.9366ms
2024-12-10 10:43:10.635 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:43:10.639 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:43:10.641 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:10.643 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:43:10.646 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:43:10.648 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:43:10.651 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:43:10.652 +05:30 [INF] Deserializing the notes
2024-12-10 10:43:10.653 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:43:10.658 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.4571ms
2024-12-10 10:43:10.667 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:10.669 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.597ms
2024-12-10 10:43:10.706 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:43:10.710 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:43:10.712 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:10.714 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:43:10.724 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:43:10.727 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:43:10.728 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:43:10.730 +05:30 [INF] Deserializing the notes
2024-12-10 10:43:10.731 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:43:10.733 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4198ms
2024-12-10 10:43:10.735 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:10.736 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.6503ms
2024-12-10 10:43:14.494 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:43:14.497 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:43:14.499 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:14.500 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:43:14.503 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:43:14.505 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:43:14.507 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:43:14.509 +05:30 [INF] Deserializing the notes
2024-12-10 10:43:14.510 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:43:14.512 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.9291ms
2024-12-10 10:43:14.514 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:14.515 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.1368ms
2024-12-10 10:43:15.652 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:43:15.655 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:43:15.656 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8246ms
2024-12-10 10:43:15.660 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:43:15.666 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:43:15.668 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:15.670 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:43:15.673 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:43:15.678 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:43:15.679 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:43:15.680 +05:30 [INF] Deserializing the notes
2024-12-10 10:43:15.681 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:43:15.684 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.1054ms
2024-12-10 10:43:15.689 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:15.692 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.8742ms
2024-12-10 10:43:19.157 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:43:19.161 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:43:19.162 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:19.163 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:43:19.165 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:43:19.167 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:43:19.170 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:43:19.171 +05:30 [INF] Deserializing the notes
2024-12-10 10:43:19.172 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:43:19.174 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.7557ms
2024-12-10 10:43:19.177 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:19.178 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.1282ms
2024-12-10 10:43:26.259 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:43:26.268 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:43:26.270 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.6768ms
2024-12-10 10:43:26.276 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:43:26.282 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:43:26.284 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:26.286 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:43:26.290 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:43:26.292 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:43:26.295 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:43:26.297 +05:30 [INF] Deserializing the notes
2024-12-10 10:43:26.298 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:43:26.301 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.5202ms
2024-12-10 10:43:26.303 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:26.307 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.5454ms
2024-12-10 10:43:27.977 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:43:27.981 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:43:27.982 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:27.984 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:43:27.988 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:43:27.990 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:43:27.993 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:43:27.995 +05:30 [INF] Deserializing the notes
2024-12-10 10:43:27.997 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:43:27.999 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.1147ms
2024-12-10 10:43:28.001 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:28.003 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.0347ms
2024-12-10 10:43:28.928 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:43:28.932 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:43:28.934 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:28.936 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:43:28.940 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:43:28.942 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:43:28.945 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:43:28.947 +05:30 [INF] Deserializing the notes
2024-12-10 10:43:28.949 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:43:28.952 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.6582ms
2024-12-10 10:43:28.954 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:28.956 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.1675ms
2024-12-10 10:43:55.009 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:43:55.013 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:43:55.014 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.1742ms
2024-12-10 10:43:55.018 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:43:55.022 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:43:55.023 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:55.026 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:43:55.031 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:43:55.034 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:43:55.035 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:43:55.037 +05:30 [INF] Deserializing the notes
2024-12-10 10:43:55.038 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:43:55.042 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7766ms
2024-12-10 10:43:55.044 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:43:55.046 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.5121ms
2024-12-10 10:44:07.910 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:44:07.915 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:44:07.916 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.4686ms
2024-12-10 10:44:07.919 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:44:07.934 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:44:07.937 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:44:07.938 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:44:07.943 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:44:07.946 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:44:07.948 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:44:07.949 +05:30 [INF] Deserializing the notes
2024-12-10 10:44:07.950 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:44:07.952 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.1597ms
2024-12-10 10:44:07.953 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:44:07.956 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.1422ms
2024-12-10 10:44:30.989 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:44:30.992 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:44:30.993 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.6714ms
2024-12-10 10:44:30.997 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:44:31.001 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:44:31.002 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:44:31.003 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:44:31.006 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:44:31.009 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:44:31.011 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:44:31.012 +05:30 [INF] Deserializing the notes
2024-12-10 10:44:31.013 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:44:31.016 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6226ms
2024-12-10 10:44:31.019 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:44:31.020 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.6681ms
2024-12-10 10:44:33.173 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:44:33.176 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:44:33.178 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:44:33.179 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:44:33.182 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:44:33.184 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:44:33.187 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:44:33.188 +05:30 [INF] Deserializing the notes
2024-12-10 10:44:33.190 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:44:33.192 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.4818ms
2024-12-10 10:44:33.196 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:44:33.213 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.7262ms
2024-12-10 10:44:36.952 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:44:36.961 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:44:36.963 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.2016ms
2024-12-10 10:44:36.967 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:44:36.972 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:44:36.973 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:44:36.975 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:44:36.978 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:44:36.980 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:44:36.982 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:44:36.983 +05:30 [INF] Deserializing the notes
2024-12-10 10:44:36.985 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:44:36.987 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.6628ms
2024-12-10 10:44:36.990 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:44:36.992 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.9525ms
2024-12-10 10:44:40.330 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:44:40.333 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:44:40.336 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:44:40.337 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:44:40.341 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:44:40.349 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:44:40.350 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:44:40.351 +05:30 [INF] Deserializing the notes
2024-12-10 10:44:40.352 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:44:40.354 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.8698ms
2024-12-10 10:44:40.355 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:44:40.358 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.3778ms
2024-12-10 10:44:41.407 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:44:41.415 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:44:41.417 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:44:41.419 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:44:41.424 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:44:41.427 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:44:41.431 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:44:41.433 +05:30 [INF] Deserializing the notes
2024-12-10 10:44:41.435 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:44:41.438 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.8036ms
2024-12-10 10:44:41.439 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:44:41.441 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.2103ms
2024-12-10 10:45:11.106 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:45:11.108 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:45:11.110 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.3618ms
2024-12-10 10:45:11.113 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:45:11.117 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:45:11.119 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:11.122 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:45:11.125 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:45:11.128 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:45:11.130 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:45:11.132 +05:30 [INF] Deserializing the notes
2024-12-10 10:45:11.134 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:45:11.137 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.4001ms
2024-12-10 10:45:11.139 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:11.143 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.6508ms
2024-12-10 10:45:12.065 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:45:12.068 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:45:12.070 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:12.071 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:45:12.075 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:45:12.078 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:45:12.081 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:45:12.083 +05:30 [INF] Deserializing the notes
2024-12-10 10:45:12.085 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:45:12.087 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.0134ms
2024-12-10 10:45:12.091 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:12.094 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.822ms
2024-12-10 10:45:15.201 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:45:15.205 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:45:15.207 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:15.209 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:45:15.213 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:45:15.215 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:45:15.220 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:45:15.221 +05:30 [INF] Deserializing the notes
2024-12-10 10:45:15.222 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:45:15.226 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.426ms
2024-12-10 10:45:15.228 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:15.230 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.6157ms
2024-12-10 10:45:17.363 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:45:17.366 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:45:17.367 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8542ms
2024-12-10 10:45:17.373 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:45:17.387 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:45:17.389 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:17.391 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:45:17.394 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:45:17.396 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:45:17.399 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:45:17.400 +05:30 [INF] Deserializing the notes
2024-12-10 10:45:17.402 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:45:17.406 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.8249ms
2024-12-10 10:45:17.408 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:17.410 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.5165ms
2024-12-10 10:45:21.087 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:45:21.094 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:45:21.095 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:21.097 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:45:21.101 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:45:21.105 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:45:21.109 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:45:21.111 +05:30 [INF] Deserializing the notes
2024-12-10 10:45:21.112 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:45:21.116 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.5105ms
2024-12-10 10:45:21.118 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:21.121 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.0794ms
2024-12-10 10:45:28.861 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:45:28.868 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:45:28.871 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.0719ms
2024-12-10 10:45:28.874 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:45:28.881 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:45:28.884 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:28.887 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:45:28.892 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:45:28.896 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:45:28.898 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:45:28.899 +05:30 [INF] Deserializing the notes
2024-12-10 10:45:28.900 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:45:28.902 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.4068ms
2024-12-10 10:45:28.904 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:28.905 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.2619ms
2024-12-10 10:45:30.061 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:45:30.068 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:45:30.074 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:30.077 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:45:30.083 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:45:30.088 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:45:30.091 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:45:30.092 +05:30 [INF] Deserializing the notes
2024-12-10 10:45:30.096 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:45:30.100 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.1377ms
2024-12-10 10:45:30.103 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:45:30.105 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.6941ms
2024-12-10 10:46:10.112 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:46:10.126 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:46:10.128 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.5364ms
2024-12-10 10:46:10.133 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:46:10.146 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:46:10.147 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:46:10.150 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:46:10.154 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:46:10.157 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:46:10.160 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:46:10.162 +05:30 [INF] Deserializing the notes
2024-12-10 10:46:10.164 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:46:10.168 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.0912ms
2024-12-10 10:46:10.172 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:46:10.175 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.377ms
2024-12-10 10:46:11.741 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:46:11.744 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:46:11.746 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:46:11.749 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:46:11.755 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:46:11.760 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:46:11.764 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:46:11.767 +05:30 [INF] Deserializing the notes
2024-12-10 10:46:11.771 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:46:11.775 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.037ms
2024-12-10 10:46:11.776 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:46:11.778 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.1917ms
2024-12-10 10:46:13.000 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:46:13.004 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:46:13.008 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:46:13.012 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:46:13.016 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:46:13.021 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:46:13.025 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:46:13.026 +05:30 [INF] Deserializing the notes
2024-12-10 10:46:13.027 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:46:13.029 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.3ms
2024-12-10 10:46:13.034 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:46:13.037 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 38.3122ms
2024-12-10 10:47:17.812 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:47:17.816 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:17.817 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.1322ms
2024-12-10 10:47:17.820 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:47:17.825 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:17.828 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:17.830 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:47:17.835 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:47:17.838 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:47:17.840 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 10:47:17.843 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 10:47:17.844 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 10:47:17.931 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 10:47:17.935 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 10:47:17.938 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 10:47:17.942 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-10 10:47:17.944 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 10:47:17.946 +05:30 [INF] Notes retrieved successfully
2024-12-10 10:47:17.947 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:47:17.949 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 114.1913ms
2024-12-10 10:47:17.950 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:17.953 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:47:17.957 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 137.343ms
2024-12-10 10:47:17.968 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:17.971 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:17.972 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:47:17.975 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:47:17.978 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:47:17.981 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:47:17.982 +05:30 [INF] Deserializing the notes
2024-12-10 10:47:17.983 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:47:17.985 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.6966ms
2024-12-10 10:47:17.986 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:17.987 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.6865ms
2024-12-10 10:47:19.860 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:47:19.865 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:19.866 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:19.868 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:47:19.871 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:47:19.873 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:47:19.877 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:47:19.878 +05:30 [INF] Deserializing the notes
2024-12-10 10:47:19.879 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:47:19.882 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.8634ms
2024-12-10 10:47:19.884 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:19.886 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.0055ms
2024-12-10 10:47:25.252 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:47:25.254 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:25.255 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.0312ms
2024-12-10 10:47:25.258 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:47:25.263 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:25.265 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:25.266 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:47:25.269 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:47:25.271 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:47:25.274 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:47:25.275 +05:30 [INF] Deserializing the notes
2024-12-10 10:47:25.276 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:47:25.278 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.2977ms
2024-12-10 10:47:25.281 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:25.283 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.4737ms
2024-12-10 10:47:26.792 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:47:26.796 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:26.798 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:26.800 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:47:26.804 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:47:26.806 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:47:26.810 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:47:26.811 +05:30 [INF] Deserializing the notes
2024-12-10 10:47:26.812 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:47:26.815 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.5419ms
2024-12-10 10:47:26.818 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:26.820 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.3928ms
2024-12-10 10:47:38.569 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:47:38.575 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:38.576 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.6303ms
2024-12-10 10:47:38.579 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:47:38.588 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:38.590 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:38.592 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:47:38.596 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:47:38.599 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:47:38.602 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:47:38.603 +05:30 [INF] Deserializing the notes
2024-12-10 10:47:38.605 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:47:38.609 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.056ms
2024-12-10 10:47:38.611 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:38.614 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.0389ms
2024-12-10 10:47:42.005 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:47:42.009 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:42.010 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:42.011 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:47:42.014 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:47:42.016 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:47:42.019 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:47:42.021 +05:30 [INF] Deserializing the notes
2024-12-10 10:47:42.022 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:47:42.025 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.5229ms
2024-12-10 10:47:42.027 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:42.028 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.7971ms
2024-12-10 10:47:48.011 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:47:48.016 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:48.017 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.571ms
2024-12-10 10:47:48.022 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:47:48.033 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:48.037 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:48.040 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:47:48.046 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:47:48.049 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:47:48.052 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:47:48.054 +05:30 [INF] Deserializing the notes
2024-12-10 10:47:48.056 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:47:48.060 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.378ms
2024-12-10 10:47:48.063 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:48.065 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.0226ms
2024-12-10 10:47:49.122 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:47:49.126 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:49.129 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:49.130 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:47:49.138 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:47:49.142 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:47:49.145 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:47:49.147 +05:30 [INF] Deserializing the notes
2024-12-10 10:47:49.150 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:47:49.151 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.9847ms
2024-12-10 10:47:49.153 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:49.154 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.5688ms
2024-12-10 10:47:56.089 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:47:56.093 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:56.096 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.4303ms
2024-12-10 10:47:56.101 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:47:56.111 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:56.114 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:56.117 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:47:56.124 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:47:56.126 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:47:56.128 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:47:56.129 +05:30 [INF] Deserializing the notes
2024-12-10 10:47:56.131 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:47:56.133 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.6465ms
2024-12-10 10:47:56.135 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:56.136 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.8894ms
2024-12-10 10:47:57.430 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:47:57.434 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:47:57.436 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:57.440 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:47:57.447 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:47:57.449 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:47:57.453 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:47:57.454 +05:30 [INF] Deserializing the notes
2024-12-10 10:47:57.455 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:47:57.456 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.8968ms
2024-12-10 10:47:57.459 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:47:57.462 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.1801ms
2024-12-10 10:48:14.141 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:48:14.145 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:48:14.146 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.725ms
2024-12-10 10:48:14.149 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:48:14.158 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:48:14.162 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:14.164 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:48:14.170 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:48:14.174 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:48:14.177 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:48:14.179 +05:30 [INF] Deserializing the notes
2024-12-10 10:48:14.181 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:48:14.185 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.696ms
2024-12-10 10:48:14.189 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:14.191 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.0561ms
2024-12-10 10:48:15.871 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:48:15.874 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:48:15.876 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:15.878 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:48:15.883 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:48:15.887 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:48:15.890 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:48:15.893 +05:30 [INF] Deserializing the notes
2024-12-10 10:48:15.896 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:48:15.900 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.3413ms
2024-12-10 10:48:15.901 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:15.906 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.7668ms
2024-12-10 10:48:16.903 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:48:16.907 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:48:16.909 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:16.912 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:48:16.920 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:48:16.925 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:48:16.929 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:48:16.931 +05:30 [INF] Deserializing the notes
2024-12-10 10:48:16.933 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:48:16.934 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.4044ms
2024-12-10 10:48:16.939 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:16.943 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.132ms
2024-12-10 10:48:21.776 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:48:21.780 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:48:21.784 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.9699ms
2024-12-10 10:48:21.787 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:48:21.798 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:48:21.799 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:21.802 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:48:21.807 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:48:21.811 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:48:21.816 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:48:21.819 +05:30 [INF] Deserializing the notes
2024-12-10 10:48:21.820 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:48:21.825 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.0971ms
2024-12-10 10:48:21.827 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:21.830 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.7251ms
2024-12-10 10:48:22.987 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:48:22.991 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:48:22.994 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:22.996 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:48:23.002 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:48:23.005 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:48:23.009 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:48:23.010 +05:30 [INF] Deserializing the notes
2024-12-10 10:48:23.011 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:48:23.012 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.1707ms
2024-12-10 10:48:23.014 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:23.018 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.3701ms
2024-12-10 10:48:27.029 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:48:27.033 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:48:27.034 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.7235ms
2024-12-10 10:48:27.042 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:48:27.043 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:48:27.048 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:48:27.051 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:48:27.054 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.6185ms
2024-12-10 10:48:27.055 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:27.060 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:48:27.062 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:48:27.064 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:48:27.067 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:48:27.068 +05:30 [INF] Deserializing the notes
2024-12-10 10:48:27.070 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:48:27.072 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.6048ms
2024-12-10 10:48:27.073 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:27.074 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:48:27.076 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.3996ms
2024-12-10 10:48:27.079 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:48:27.084 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:27.085 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:48:27.087 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:48:27.089 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:48:27.092 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:48:27.093 +05:30 [INF] Deserializing the notes
2024-12-10 10:48:27.094 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:48:27.096 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.9938ms
2024-12-10 10:48:27.097 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:48:27.099 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.187ms
2024-12-10 10:57:02.050 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:57:02.063 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:57:02.065 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 15.3069ms
2024-12-10 10:57:02.068 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:57:02.074 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:57:02.077 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:57:02.079 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:57:02.083 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:57:02.086 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:57:02.089 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 10:57:02.090 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 10:57:02.092 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 10:57:02.119 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 10:57:02.122 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 10:57:02.125 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 10:57:02.129 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-10 10:57:02.131 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 10:57:02.132 +05:30 [INF] Notes retrieved successfully
2024-12-10 10:57:02.133 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:57:02.135 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 52.8704ms
2024-12-10 10:57:02.137 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:57:02.139 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 70.568ms
2024-12-10 10:57:15.393 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 10:57:15.399 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:57:15.401 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.6579ms
2024-12-10 10:57:15.405 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 10:57:15.417 +05:30 [INF] CORS policy execution successful.
2024-12-10 10:57:15.420 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:57:15.424 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 10:57:15.432 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 10:57:15.434 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 10:57:15.437 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 10:57:15.439 +05:30 [INF] Deserializing the notes
2024-12-10 10:57:15.442 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 10:57:15.445 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.0971ms
2024-12-10 10:57:15.448 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 10:57:15.451 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.165ms
2024-12-10 12:21:04.428 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-10 12:21:04.780 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-10 12:21:04.784 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-10 12:21:04.827 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-10 12:21:04.831 +05:30 [INF] Hosting environment: Development
2024-12-10 12:21:04.835 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-10 12:21:06.071 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-10 12:21:06.333 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 280.8421ms
2024-12-10 12:21:06.347 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-10 12:21:06.347 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-10 12:21:06.360 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 17.9713ms
2024-12-10 12:21:06.404 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 57.2816ms
2024-12-10 12:21:06.460 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-10 12:21:06.591 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 131.4821ms
2024-12-10 12:22:07.481 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-10 12:22:07.499 +05:30 [INF] CORS policy execution failed.
2024-12-10 12:22:07.501 +05:30 [INF] Request origin http://localhost:51636 does not have permission to access the resource.
2024-12-10 12:22:07.505 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 24.3007ms
2024-12-10 12:22:09.009 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-10 12:22:09.017 +05:30 [INF] CORS policy execution failed.
2024-12-10 12:22:09.018 +05:30 [INF] Request origin http://localhost:51636 does not have permission to access the resource.
2024-12-10 12:22:09.020 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 10.4815ms
2024-12-10 12:23:43.979 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-10 12:23:44.355 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-10 12:23:44.356 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-10 12:23:44.416 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-10 12:23:44.417 +05:30 [INF] Hosting environment: Development
2024-12-10 12:23:44.419 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-10 12:23:45.463 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-10 12:23:45.881 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 432.6957ms
2024-12-10 12:23:45.883 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-10 12:23:45.884 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-10 12:23:45.898 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 14.0784ms
2024-12-10 12:23:45.959 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 75.8295ms
2024-12-10 12:23:46.028 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-10 12:23:46.175 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 146.9935ms
2024-12-10 12:24:05.493 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-10 12:24:05.508 +05:30 [INF] CORS policy execution failed.
2024-12-10 12:24:05.510 +05:30 [INF] Request origin http://localhost:51636 does not have permission to access the resource.
2024-12-10 12:24:05.514 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 21.0685ms
2024-12-10 12:25:41.748 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-10 12:25:42.105 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-10 12:25:42.108 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-10 12:25:42.186 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-10 12:25:42.189 +05:30 [INF] Hosting environment: Development
2024-12-10 12:25:42.192 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-10 12:25:43.397 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-10 12:25:43.700 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-10 12:25:43.700 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-10 12:25:43.702 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 316.4054ms
2024-12-10 12:25:43.721 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 19.5791ms
2024-12-10 12:25:43.771 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 71.5415ms
2024-12-10 12:25:43.823 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-10 12:25:43.944 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 121.6173ms
2024-12-10 12:26:32.658 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-10 12:26:32.668 +05:30 [INF] CORS policy execution successful.
2024-12-10 12:26:32.671 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 12.4799ms
2024-12-10 12:26:32.675 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-10 12:26:32.679 +05:30 [INF] CORS policy execution successful.
2024-12-10 12:26:32.729 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 12:26:32.764 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-10 12:26:32.912 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-10 12:26:32.913 +05:30 [INF] Checking if the user present
2024-12-10 12:26:32.916 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-10 12:26:34.358 +05:30 [INF] Executed DbCommand (58ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-10 12:26:34.426 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-10 12:26:34.426 +05:30 [INF] Verifying the password
2024-12-10 12:26:34.874 +05:30 [INF] Password is valid and token is generated
2024-12-10 12:26:34.876 +05:30 [INF] Login successful
2024-12-10 12:26:34.886 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 12:26:34.897 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 2128.981ms
2024-12-10 12:26:34.900 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 12:26:34.908 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 2232.8031ms
2024-12-10 12:26:34.919 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 12:26:34.921 +05:30 [INF] CORS policy execution successful.
2024-12-10 12:26:34.922 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.2007ms
2024-12-10 12:26:34.924 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 12:26:34.925 +05:30 [INF] CORS policy execution successful.
2024-12-10 12:26:34.980 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 12:26:34.984 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 12:26:34.990 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 12:26:35.018 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 12:26:35.018 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 12:26:35.020 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 12:26:35.024 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 12:26:35.054 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 12:26:35.058 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 12:26:35.119 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 12:26:35.123 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-10 12:26:35.124 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 12:26:35.132 +05:30 [INF] Notes retrieved successfully
2024-12-10 12:26:35.133 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 12:26:35.136 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 150.2488ms
2024-12-10 12:26:35.136 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 12:26:35.138 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 213.9932ms
2024-12-10 12:26:46.942 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - null null
2024-12-10 12:26:46.944 +05:30 [INF] CORS policy execution successful.
2024-12-10 12:26:46.946 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - 204 null null 4.035ms
2024-12-10 12:26:46.949 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1035 - application/json 82
2024-12-10 12:26:46.952 +05:30 [INF] CORS policy execution successful.
2024-12-10 12:26:46.957 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 12:26:46.965 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 12:26:47.070 +05:30 [INF] Received note update: {"Title":"wqeqweqwewqewq","Description":"qweewqererw","Color":"#FFF8B8"}
2024-12-10 12:26:47.071 +05:30 [INF] Updating note with ID: 1035
2024-12-10 12:26:47.072 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1035
2024-12-10 12:26:47.075 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 12:26:47.154 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 12:26:47.157 +05:30 [INF] Retrieving note with ID: 1035
2024-12-10 12:26:47.173 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 12:26:47.201 +05:30 [INF] User with ID: 1 has permission to update note ID: 1035
2024-12-10 12:26:47.350 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 12:26:47.363 +05:30 [INF] Successfully updated note with ID: 1035
2024-12-10 12:26:47.368 +05:30 [INF] Retrieved notes successfully
2024-12-10 12:26:47.369 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 12:26:47.372 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 404.7999ms
2024-12-10 12:26:47.373 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 12:26:47.375 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1035 - 200 null application/json; charset=utf-8 426.0165ms
2024-12-10 12:26:51.203 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 12:26:51.205 +05:30 [INF] CORS policy execution successful.
2024-12-10 12:26:51.206 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0455ms
2024-12-10 12:26:51.215 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 12:26:51.220 +05:30 [INF] CORS policy execution successful.
2024-12-10 12:26:51.223 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 12:26:51.224 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 12:26:51.227 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 12:26:51.231 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 12:26:51.231 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 12:26:51.234 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 12:26:51.234 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 12:26:51.237 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 12:26:51.239 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 12:26:51.242 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 12:26:51.244 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-10 12:26:51.245 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 12:26:51.246 +05:30 [INF] Notes retrieved successfully
2024-12-10 12:26:51.247 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 12:26:51.250 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.0847ms
2024-12-10 12:26:51.251 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 12:26:51.252 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.8153ms
2024-12-10 12:43:58.518 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 12:43:58.526 +05:30 [INF] CORS policy execution successful.
2024-12-10 12:43:58.528 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.4162ms
2024-12-10 12:43:58.530 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 12:43:58.532 +05:30 [INF] CORS policy execution successful.
2024-12-10 12:43:58.533 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 12:43:58.534 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 12:43:58.536 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 12:43:58.538 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 12:43:58.539 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 12:43:58.539 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 12:43:58.540 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 12:43:58.563 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 12:43:58.565 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 12:43:58.572 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 12:43:58.573 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-10 12:43:58.574 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 12:43:58.574 +05:30 [INF] Notes retrieved successfully
2024-12-10 12:43:58.575 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 12:43:58.576 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 39.8474ms
2024-12-10 12:43:58.576 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 12:43:58.577 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.8037ms
2024-12-10 13:27:33.235 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 13:27:33.242 +05:30 [INF] CORS policy execution successful.
2024-12-10 13:27:33.244 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.9288ms
2024-12-10 13:27:33.247 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 41
2024-12-10 13:27:33.251 +05:30 [INF] CORS policy execution successful.
2024-12-10 13:27:33.252 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 13:27:33.257 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 13:27:33.264 +05:30 [INF] Attempt to create a note
2024-12-10 13:27:33.282 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 13:27:33.331 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 13:27:33.348 +05:30 [INF] Created notes successfully
2024-12-10 13:27:33.349 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 13:27:33.350 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 90.9132ms
2024-12-10 13:27:33.351 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 13:27:33.352 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 105.3481ms
2024-12-10 14:13:40.250 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:13:40.258 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:13:40.260 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.6978ms
2024-12-10 14:13:40.263 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:13:40.265 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:13:40.270 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 07:56:34', Current time (UTC): '10-12-2024 08:43:40'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 14:13:40.285 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 14:13:40.332 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 14:13:40.376 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 14:13:40.380 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 14:13:40.383 +05:30 [ERR] Connection id "0HN8OSUL0LVFN", Request id "0HN8OSUL0LVFN:00000003": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 14:13:40.400 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 136.8798ms
2024-12-10 14:13:55.844 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-10 14:13:55.846 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:13:55.846 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 2.2525ms
2024-12-10 14:13:55.848 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-10 14:13:55.849 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:13:55.850 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 14:13:55.851 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-10 14:13:55.870 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-10 14:13:55.870 +05:30 [INF] Checking if the user present
2024-12-10 14:13:55.870 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-10 14:13:55.887 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-10 14:13:55.888 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-10 14:13:55.889 +05:30 [INF] Verifying the password
2024-12-10 14:13:56.127 +05:30 [INF] Password is valid and token is generated
2024-12-10 14:13:56.128 +05:30 [INF] Login successful
2024-12-10 14:13:56.128 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:13:56.129 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 276.7553ms
2024-12-10 14:13:56.130 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 14:13:56.131 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 283.4118ms
2024-12-10 14:13:56.142 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:13:56.144 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:13:56.144 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4073ms
2024-12-10 14:13:56.162 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:13:56.163 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:13:56.165 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:13:56.166 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:13:56.167 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:13:56.168 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:13:56.169 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:13:56.170 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:13:56.170 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:13:56.175 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:13:56.177 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:13:56.184 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:13:56.187 +05:30 [INF] 3 notes retrieved for user with ID: 1
2024-12-10 14:13:56.188 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:13:56.188 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:13:56.189 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:13:56.190 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.9306ms
2024-12-10 14:13:56.190 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:13:56.191 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.0395ms
2024-12-10 14:14:01.214 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1036 - null null
2024-12-10 14:14:01.215 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:01.216 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1036 - 204 null null 2.6606ms
2024-12-10 14:14:01.218 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1036 - application/json 69
2024-12-10 14:14:01.220 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:01.221 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 14:14:01.222 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:14:01.225 +05:30 [INF] Received note update: {"Title":"wfrdewf","Description":"egrrg","Color":"#F6E2DD"}
2024-12-10 14:14:01.226 +05:30 [INF] Updating note with ID: 1036
2024-12-10 14:14:01.227 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1036
2024-12-10 14:14:01.227 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:14:01.230 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:14:01.235 +05:30 [INF] Retrieving note with ID: 1036
2024-12-10 14:14:01.238 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:14:01.240 +05:30 [INF] User with ID: 1 has permission to update note ID: 1036
2024-12-10 14:14:01.245 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:14:01.247 +05:30 [INF] Successfully updated note with ID: 1036
2024-12-10 14:14:01.247 +05:30 [INF] Retrieved notes successfully
2024-12-10 14:14:01.248 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:14:01.249 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 25.7766ms
2024-12-10 14:14:01.250 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 14:14:01.250 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1036 - 200 null application/json; charset=utf-8 32.5138ms
2024-12-10 14:14:02.220 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:14:02.222 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:02.222 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4318ms
2024-12-10 14:14:02.225 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:14:02.228 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:02.229 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:02.230 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:14:02.233 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:14:02.234 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:14:02.235 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:14:02.236 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:14:02.236 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:14:02.238 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:14:02.240 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:14:02.241 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:14:02.242 +05:30 [INF] 3 notes retrieved for user with ID: 1
2024-12-10 14:14:02.243 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:14:02.243 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:14:02.244 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:14:02.245 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.2198ms
2024-12-10 14:14:02.245 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:02.246 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.1432ms
2024-12-10 14:14:02.834 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:14:02.836 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:02.837 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:02.839 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:14:02.841 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:14:02.845 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:14:02.845 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 14:14:02.846 +05:30 [INF] Deserializing the notes
2024-12-10 14:14:02.849 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:14:02.850 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.8841ms
2024-12-10 14:14:02.851 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:02.852 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.305ms
2024-12-10 14:14:06.570 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:14:06.572 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:06.573 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:06.574 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:14:06.576 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:14:06.578 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:14:06.578 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 14:14:06.579 +05:30 [INF] Deserializing the notes
2024-12-10 14:14:06.579 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:14:06.580 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1312ms
2024-12-10 14:14:06.581 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:06.581 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.9271ms
2024-12-10 14:14:08.398 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:14:08.400 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:08.401 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8939ms
2024-12-10 14:14:08.404 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:14:08.406 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:08.407 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:08.407 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:14:08.409 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:14:08.410 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:14:08.411 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 14:14:08.411 +05:30 [INF] Deserializing the notes
2024-12-10 14:14:08.412 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:14:08.413 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.1717ms
2024-12-10 14:14:08.413 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:08.414 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.9065ms
2024-12-10 14:14:19.952 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1035 - null null
2024-12-10 14:14:19.954 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:19.955 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1035 - 204 null null 2.7974ms
2024-12-10 14:14:19.957 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - application/json 4
2024-12-10 14:14:19.959 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:19.960 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:14:19.966 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:14:19.972 +05:30 [INF] Received request to toggle trash status for note with ID: 1035
2024-12-10 14:14:19.973 +05:30 [INF] Initiating toggle of trash status for note with ID: 1035 for user ID: 1
2024-12-10 14:14:19.983 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:14:19.986 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:14:19.990 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:14:19.991 +05:30 [INF] Note with ID: 1035 trash status updated to true
2024-12-10 14:14:19.993 +05:30 [INF] Successfully toggled trash status for note with ID: 1035
2024-12-10 14:14:19.993 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:14:19.994 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 27.0038ms
2024-12-10 14:14:19.995 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:14:19.996 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - 200 null application/json; charset=utf-8 39.135ms
2024-12-10 14:14:22.143 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1036 - null null
2024-12-10 14:14:22.145 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:22.145 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1036 - 204 null null 2.843ms
2024-12-10 14:14:22.147 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1036 - application/json 4
2024-12-10 14:14:22.149 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:22.150 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:14:22.150 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:14:22.152 +05:30 [INF] Received request to toggle trash status for note with ID: 1036
2024-12-10 14:14:22.153 +05:30 [INF] Initiating toggle of trash status for note with ID: 1036 for user ID: 1
2024-12-10 14:14:22.162 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:14:22.164 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:14:22.168 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:14:22.169 +05:30 [INF] Note with ID: 1036 trash status updated to true
2024-12-10 14:14:22.170 +05:30 [INF] Successfully toggled trash status for note with ID: 1036
2024-12-10 14:14:22.170 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:14:22.171 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 19.5512ms
2024-12-10 14:14:22.172 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:14:22.172 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1036 - 200 null application/json; charset=utf-8 25.4107ms
2024-12-10 14:14:33.813 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:14:33.815 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:33.815 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0785ms
2024-12-10 14:14:33.817 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 41
2024-12-10 14:14:33.819 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:33.820 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:14:33.820 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:14:33.822 +05:30 [INF] Attempt to create a note
2024-12-10 14:14:33.825 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:14:33.832 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 14:14:33.835 +05:30 [INF] Created notes successfully
2024-12-10 14:14:33.835 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:14:33.836 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 15.0116ms
2024-12-10 14:14:33.837 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:14:33.838 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.1365ms
2024-12-10 14:14:37.609 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:14:37.610 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:37.611 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:37.612 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:14:37.614 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:14:37.615 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:14:37.616 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:14:37.616 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:14:37.617 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:14:37.619 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:14:37.622 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:14:37.629 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:14:37.631 +05:30 [INF] 4 notes retrieved for user with ID: 1
2024-12-10 14:14:37.631 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:14:37.632 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:14:37.632 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:14:37.633 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.775ms
2024-12-10 14:14:37.634 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:37.634 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.8294ms
2024-12-10 14:14:45.409 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:14:45.413 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:45.414 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2722ms
2024-12-10 14:14:45.416 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 40
2024-12-10 14:14:45.418 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:45.419 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:14:45.420 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:14:45.421 +05:30 [INF] Attempt to create a note
2024-12-10 14:14:45.425 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:14:45.429 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 14:14:45.431 +05:30 [INF] Created notes successfully
2024-12-10 14:14:45.432 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:14:45.433 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 11.6572ms
2024-12-10 14:14:45.434 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:14:45.435 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.2615ms
2024-12-10 14:14:47.442 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:14:47.443 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:47.444 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:47.445 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:14:47.447 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:14:47.448 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:14:47.449 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:14:47.450 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:14:47.450 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:14:47.453 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:14:47.455 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:14:47.457 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:14:47.459 +05:30 [INF] 5 notes retrieved for user with ID: 1
2024-12-10 14:14:47.459 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:14:47.460 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:14:47.460 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:14:47.461 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.9094ms
2024-12-10 14:14:47.462 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:47.462 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.5679ms
2024-12-10 14:14:55.676 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:14:55.678 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:55.678 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.0351ms
2024-12-10 14:14:55.680 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 38
2024-12-10 14:14:55.682 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:55.683 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:14:55.684 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:14:55.685 +05:30 [INF] Attempt to create a note
2024-12-10 14:14:55.688 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:14:55.693 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 14:14:55.695 +05:30 [INF] Created notes successfully
2024-12-10 14:14:55.696 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:14:55.696 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 11.6322ms
2024-12-10 14:14:55.697 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:14:55.698 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.9095ms
2024-12-10 14:14:57.266 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:14:57.267 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:14:57.268 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:57.269 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:14:57.271 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:14:57.272 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:14:57.273 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:14:57.274 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:14:57.274 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:14:57.276 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:14:57.278 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:14:57.280 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:14:57.282 +05:30 [INF] 6 notes retrieved for user with ID: 1
2024-12-10 14:14:57.283 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:14:57.285 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:14:57.285 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:14:57.286 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.2263ms
2024-12-10 14:14:57.287 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:14:57.287 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.8898ms
2024-12-10 14:15:37.894 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:15:37.896 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:15:37.896 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.513ms
2024-12-10 14:15:37.898 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 35
2024-12-10 14:15:37.900 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:15:37.901 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:15:37.902 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:15:37.904 +05:30 [INF] Attempt to create a note
2024-12-10 14:15:37.914 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:15:37.919 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 14:15:37.921 +05:30 [INF] Created notes successfully
2024-12-10 14:15:37.922 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:15:37.923 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 19.5843ms
2024-12-10 14:15:37.923 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:15:37.924 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.4015ms
2024-12-10 14:15:38.645 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:15:38.647 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:15:38.649 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:15:38.649 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:15:38.653 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:15:38.655 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:15:38.656 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:15:38.657 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:15:38.657 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:15:38.661 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:15:38.662 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:15:38.668 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:15:38.670 +05:30 [INF] 7 notes retrieved for user with ID: 1
2024-12-10 14:15:38.671 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:15:38.671 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:15:38.672 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:15:38.673 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.8644ms
2024-12-10 14:15:38.673 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:15:38.674 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.1367ms
2024-12-10 14:15:46.033 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:15:46.034 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:15:46.034 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.7896ms
2024-12-10 14:15:46.036 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 39
2024-12-10 14:15:46.037 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:15:46.038 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:15:46.038 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:15:46.039 +05:30 [INF] Attempt to create a note
2024-12-10 14:15:46.042 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:15:46.046 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 14:15:46.049 +05:30 [INF] Created notes successfully
2024-12-10 14:15:46.050 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:15:46.050 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 11.2267ms
2024-12-10 14:15:46.051 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:15:46.052 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.524ms
2024-12-10 14:15:48.083 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:15:48.084 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:15:48.085 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:15:48.085 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:15:48.087 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:15:48.088 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:15:48.090 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:15:48.090 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:15:48.091 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:15:48.093 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:15:48.095 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:15:48.097 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:15:48.099 +05:30 [INF] 8 notes retrieved for user with ID: 1
2024-12-10 14:15:48.100 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:15:48.101 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:15:48.101 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:15:48.102 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.5991ms
2024-12-10 14:15:48.103 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:15:48.104 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.2286ms
2024-12-10 14:17:42.203 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:17:42.209 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:17:42.210 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.38ms
2024-12-10 14:17:42.212 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:17:42.214 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:17:42.215 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:17:42.216 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:17:42.217 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:17:42.219 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:17:42.220 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 14:17:42.220 +05:30 [INF] Deserializing the notes
2024-12-10 14:17:42.221 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:17:42.222 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.3583ms
2024-12-10 14:17:42.223 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:17:42.224 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.9235ms
2024-12-10 14:17:49.519 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:17:49.520 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:17:49.520 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.6393ms
2024-12-10 14:17:49.522 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:17:49.524 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:17:49.526 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:17:49.527 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:17:49.528 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:17:49.529 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:17:49.530 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 14:17:49.530 +05:30 [INF] Deserializing the notes
2024-12-10 14:17:49.531 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:17:49.532 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7319ms
2024-12-10 14:17:49.532 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:17:49.533 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.9946ms
2024-12-10 14:17:49.995 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:17:49.999 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:17:50.000 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:17:50.001 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:17:50.002 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:17:50.003 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:17:50.004 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 14:17:50.005 +05:30 [INF] Deserializing the notes
2024-12-10 14:17:50.006 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:17:50.007 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2927ms
2024-12-10 14:17:50.008 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:17:50.009 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.7823ms
2024-12-10 14:18:07.503 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:18:07.508 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:18:07.510 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.3351ms
2024-12-10 14:18:07.514 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 40
2024-12-10 14:18:07.524 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:18:07.526 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:18:07.529 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:18:07.531 +05:30 [INF] Attempt to create a note
2024-12-10 14:18:07.542 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:18:07.546 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 14:18:07.548 +05:30 [INF] Created notes successfully
2024-12-10 14:18:07.549 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:18:07.549 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 18.9504ms
2024-12-10 14:18:07.550 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:18:07.551 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.2761ms
2024-12-10 14:18:08.380 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:18:08.382 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:18:08.383 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:18:08.384 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:18:08.385 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:18:08.387 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:18:08.388 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:18:08.390 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:18:08.390 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:18:08.393 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:18:08.395 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:18:08.404 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:18:08.406 +05:30 [INF] 9 notes retrieved for user with ID: 1
2024-12-10 14:18:08.406 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:18:08.407 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:18:08.407 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:18:08.408 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 23.6075ms
2024-12-10 14:18:08.409 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:18:08.409 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.3398ms
2024-12-10 14:20:14.603 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:20:14.607 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:20:14.608 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.4262ms
2024-12-10 14:20:14.610 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 29
2024-12-10 14:20:14.614 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:20:14.615 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:20:14.615 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:20:14.626 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-10 14:20:14.649 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 32.6686ms
2024-12-10 14:20:14.652 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:20:14.653 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 400 null application/problem+json; charset=utf-8 43.3512ms
2024-12-10 14:23:04.346 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1037 - null null
2024-12-10 14:23:04.349 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:23:04.349 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1037 - 204 null null 3.5484ms
2024-12-10 14:23:04.351 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1037 - application/json 4
2024-12-10 14:23:04.354 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:23:04.356 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-10 14:23:04.360 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:23:04.363 +05:30 [INF] Received noteId: 1037, isArchive: True
2024-12-10 14:23:04.363 +05:30 [INF] Received request to toggle archive status for note with ID: 1037
2024-12-10 14:23:04.365 +05:30 [INF] Initiating toggle of archive status for note with ID: 1037 for user ID: 1
2024-12-10 14:23:04.367 +05:30 [INF] Received isArchive value: True
2024-12-10 14:23:04.386 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:23:04.390 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:23:04.396 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:23:04.398 +05:30 [INF] Note with ID: 1037 archive status updated to true
2024-12-10 14:23:04.398 +05:30 [INF] Successfully toggled archive status for note with ID: 1037
2024-12-10 14:23:04.399 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:23:04.400 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 38.0975ms
2024-12-10 14:23:04.401 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-10 14:23:04.401 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1037 - 200 null application/json; charset=utf-8 50.6269ms
2024-12-10 14:23:06.539 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:23:06.541 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:23:06.542 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8482ms
2024-12-10 14:23:06.544 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:23:06.547 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:23:06.548 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:23:06.550 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:23:06.551 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:23:06.552 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:23:06.553 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:23:06.554 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:23:06.554 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:23:06.559 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:23:06.560 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:23:06.568 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:23:06.569 +05:30 [INF] 9 notes retrieved for user with ID: 1
2024-12-10 14:23:06.570 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:23:06.571 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:23:06.571 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:23:06.572 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.0017ms
2024-12-10 14:23:06.572 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:23:06.573 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.6893ms
2024-12-10 14:23:11.246 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-10 14:23:11.249 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:23:11.250 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 4.7099ms
2024-12-10 14:23:11.254 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 69
2024-12-10 14:23:11.261 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:23:11.263 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 14:23:11.263 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:23:11.266 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#B4DDD3"}
2024-12-10 14:23:11.267 +05:30 [INF] Updating note with ID: 1034
2024-12-10 14:23:11.267 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-10 14:23:11.268 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:23:11.271 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:23:11.272 +05:30 [INF] Retrieving note with ID: 1034
2024-12-10 14:23:11.274 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:23:11.276 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-10 14:23:11.280 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:23:11.281 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-10 14:23:11.282 +05:30 [INF] Retrieved notes successfully
2024-12-10 14:23:11.282 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:23:11.283 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 18.0466ms
2024-12-10 14:23:11.284 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 14:23:11.284 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 30.6085ms
2024-12-10 14:23:12.716 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - null null
2024-12-10 14:23:12.721 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:23:12.722 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - 204 null null 6.3343ms
2024-12-10 14:23:12.724 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - application/json 5
2024-12-10 14:23:12.732 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:23:12.734 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-10 14:23:12.736 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:23:12.737 +05:30 [INF] Received noteId: 1034, isArchive: False
2024-12-10 14:23:12.737 +05:30 [INF] Received request to toggle archive status for note with ID: 1034
2024-12-10 14:23:12.737 +05:30 [INF] Initiating toggle of archive status for note with ID: 1034 for user ID: 1
2024-12-10 14:23:12.738 +05:30 [INF] Received isArchive value: False
2024-12-10 14:23:12.739 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:23:12.741 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:23:12.746 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:23:12.748 +05:30 [INF] Note with ID: 1034 archive status updated to false
2024-12-10 14:23:12.749 +05:30 [INF] Successfully toggled archive status for note with ID: 1034
2024-12-10 14:23:12.749 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:23:12.750 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 13.8011ms
2024-12-10 14:23:12.751 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-10 14:23:12.751 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - 200 null application/json; charset=utf-8 27.2644ms
2024-12-10 14:23:14.882 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:23:14.884 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:23:14.885 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9634ms
2024-12-10 14:23:14.888 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:23:14.889 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:23:14.890 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:23:14.890 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:23:14.891 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:23:14.893 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:23:14.894 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:23:14.895 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:23:14.895 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:23:14.898 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:23:14.899 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:23:14.904 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:23:14.906 +05:30 [INF] 9 notes retrieved for user with ID: 1
2024-12-10 14:23:14.907 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:23:14.907 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:23:14.908 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:23:14.909 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.2983ms
2024-12-10 14:23:14.909 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:23:14.910 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.1973ms
2024-12-10 14:32:59.000 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:32:59.005 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:32:59.005 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.763ms
2024-12-10 14:32:59.007 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:32:59.009 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:32:59.011 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:32:59.012 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:32:59.013 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:32:59.014 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:32:59.015 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:32:59.016 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:32:59.017 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:32:59.034 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:32:59.036 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:32:59.041 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:32:59.042 +05:30 [INF] 9 notes retrieved for user with ID: 1
2024-12-10 14:32:59.043 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:32:59.044 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:32:59.044 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:32:59.045 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 31.9655ms
2024-12-10 14:32:59.046 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:32:59.046 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.1225ms
2024-12-10 14:33:05.929 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:33:05.930 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:05.931 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.3545ms
2024-12-10 14:33:05.933 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:33:05.934 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:05.935 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:33:05.935 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:33:05.936 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:33:05.937 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:33:05.938 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 14:33:05.939 +05:30 [INF] Deserializing the notes
2024-12-10 14:33:05.939 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:33:05.940 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.6762ms
2024-12-10 14:33:05.940 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:33:05.941 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.1553ms
2024-12-10 14:33:15.296 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1040 - null null
2024-12-10 14:33:15.299 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:15.300 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1040 - 204 null null 4.8179ms
2024-12-10 14:33:15.301 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1040 - application/json 4
2024-12-10 14:33:15.304 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:15.305 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:33:15.305 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:33:15.306 +05:30 [INF] Received request to toggle trash status for note with ID: 1040
2024-12-10 14:33:15.307 +05:30 [INF] Initiating toggle of trash status for note with ID: 1040 for user ID: 1
2024-12-10 14:33:15.312 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:33:15.315 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:33:15.320 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:33:15.321 +05:30 [INF] Note with ID: 1040 trash status updated to true
2024-12-10 14:33:15.322 +05:30 [INF] Successfully toggled trash status for note with ID: 1040
2024-12-10 14:33:15.322 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:33:15.323 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 17.124ms
2024-12-10 14:33:15.324 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:33:15.324 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1040 - 200 null application/json; charset=utf-8 22.8564ms
2024-12-10 14:33:17.494 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1041 - null null
2024-12-10 14:33:17.498 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:17.498 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1041 - 204 null null 4.4563ms
2024-12-10 14:33:17.500 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1041 - application/json 4
2024-12-10 14:33:17.501 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:17.502 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:33:17.503 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:33:17.504 +05:30 [INF] Received request to toggle trash status for note with ID: 1041
2024-12-10 14:33:17.505 +05:30 [INF] Initiating toggle of trash status for note with ID: 1041 for user ID: 1
2024-12-10 14:33:17.507 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:33:17.509 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:33:17.514 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:33:17.515 +05:30 [INF] Note with ID: 1041 trash status updated to true
2024-12-10 14:33:17.516 +05:30 [INF] Successfully toggled trash status for note with ID: 1041
2024-12-10 14:33:17.516 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:33:17.517 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 13.4699ms
2024-12-10 14:33:17.518 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:33:17.518 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1041 - 200 null application/json; charset=utf-8 18.6936ms
2024-12-10 14:33:19.427 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1042 - null null
2024-12-10 14:33:19.433 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:19.433 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1042 - 204 null null 6.5354ms
2024-12-10 14:33:19.435 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1042 - application/json 4
2024-12-10 14:33:19.436 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:19.437 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:33:19.438 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:33:19.440 +05:30 [INF] Received request to toggle trash status for note with ID: 1042
2024-12-10 14:33:19.441 +05:30 [INF] Initiating toggle of trash status for note with ID: 1042 for user ID: 1
2024-12-10 14:33:19.443 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:33:19.445 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:33:19.448 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:33:19.450 +05:30 [INF] Note with ID: 1042 trash status updated to true
2024-12-10 14:33:19.451 +05:30 [INF] Successfully toggled trash status for note with ID: 1042
2024-12-10 14:33:19.452 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:33:19.453 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 12.6216ms
2024-12-10 14:33:19.453 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:33:19.454 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1042 - 200 null application/json; charset=utf-8 19.5177ms
2024-12-10 14:33:28.391 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:33:28.394 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:28.395 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9705ms
2024-12-10 14:33:28.396 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 40
2024-12-10 14:33:28.397 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:28.398 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:33:28.398 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:33:28.401 +05:30 [INF] Attempt to create a note
2024-12-10 14:33:28.404 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:33:28.412 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 14:33:28.414 +05:30 [INF] Created notes successfully
2024-12-10 14:33:28.415 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:33:28.415 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 14.9983ms
2024-12-10 14:33:28.417 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:33:28.417 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.6337ms
2024-12-10 14:33:29.584 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:33:29.585 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:29.586 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:33:29.587 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:33:29.589 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:33:29.595 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:33:29.597 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:33:29.597 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:33:29.598 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:33:29.601 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:33:29.604 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:33:29.611 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:33:29.612 +05:30 [INF] 10 notes retrieved for user with ID: 1
2024-12-10 14:33:29.612 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:33:29.613 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:33:29.613 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:33:29.614 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.4865ms
2024-12-10 14:33:29.614 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:33:29.615 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.2373ms
2024-12-10 14:33:42.316 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:33:42.323 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:42.326 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.8397ms
2024-12-10 14:33:42.329 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:33:42.336 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:42.337 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:33:42.339 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:33:42.341 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:33:42.343 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:33:42.344 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 14:33:42.344 +05:30 [INF] Deserializing the notes
2024-12-10 14:33:42.345 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:33:42.346 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9569ms
2024-12-10 14:33:42.347 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:33:42.347 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.9333ms
2024-12-10 14:33:51.185 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:33:51.188 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:51.189 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6826ms
2024-12-10 14:33:51.190 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:33:51.192 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:33:51.192 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:33:51.193 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:33:51.194 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:33:51.195 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:33:51.195 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 14:33:51.196 +05:30 [INF] Deserializing the notes
2024-12-10 14:33:51.196 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:33:51.198 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2665ms
2024-12-10 14:33:51.198 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:33:51.199 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.0455ms
2024-12-10 14:34:01.679 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:34:01.681 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:01.681 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8405ms
2024-12-10 14:34:01.683 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 43
2024-12-10 14:34:01.685 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:01.686 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:34:01.687 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:34:01.689 +05:30 [INF] Attempt to create a note
2024-12-10 14:34:01.691 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:34:01.693 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 14:34:01.695 +05:30 [INF] Created notes successfully
2024-12-10 14:34:01.696 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:34:01.696 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 8.457ms
2024-12-10 14:34:01.697 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:34:01.698 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.3192ms
2024-12-10 14:34:03.342 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:34:03.343 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:03.344 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:34:03.345 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:34:03.346 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:34:03.349 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:34:03.351 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:34:03.351 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:34:03.352 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:34:03.356 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:34:03.358 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:34:03.363 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:34:03.366 +05:30 [INF] 11 notes retrieved for user with ID: 1
2024-12-10 14:34:03.366 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:34:03.367 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:34:03.367 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:34:03.368 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.1481ms
2024-12-10 14:34:03.368 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:34:03.369 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.3574ms
2024-12-10 14:34:11.693 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1044 - null null
2024-12-10 14:34:11.697 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:11.697 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1044 - 204 null null 4.2784ms
2024-12-10 14:34:11.699 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1044 - application/json 4
2024-12-10 14:34:11.701 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:11.702 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:34:11.702 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:34:11.704 +05:30 [INF] Received request to toggle trash status for note with ID: 1044
2024-12-10 14:34:11.704 +05:30 [INF] Initiating toggle of trash status for note with ID: 1044 for user ID: 1
2024-12-10 14:34:11.708 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:34:11.711 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:34:11.716 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:34:11.717 +05:30 [INF] Note with ID: 1044 trash status updated to true
2024-12-10 14:34:11.718 +05:30 [INF] Successfully toggled trash status for note with ID: 1044
2024-12-10 14:34:11.718 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:34:11.719 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 15.7746ms
2024-12-10 14:34:11.720 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:34:11.720 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1044 - 200 null application/json; charset=utf-8 21.036ms
2024-12-10 14:34:13.993 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1043 - null null
2024-12-10 14:34:13.997 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:13.997 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1043 - 204 null null 4.2885ms
2024-12-10 14:34:13.999 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1043 - application/json 4
2024-12-10 14:34:14.000 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:14.000 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:34:14.001 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:34:14.002 +05:30 [INF] Received request to toggle trash status for note with ID: 1043
2024-12-10 14:34:14.003 +05:30 [INF] Initiating toggle of trash status for note with ID: 1043 for user ID: 1
2024-12-10 14:34:14.005 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:34:14.008 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:34:14.011 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:34:14.013 +05:30 [INF] Note with ID: 1043 trash status updated to true
2024-12-10 14:34:14.013 +05:30 [INF] Successfully toggled trash status for note with ID: 1043
2024-12-10 14:34:14.014 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:34:14.015 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 12.9617ms
2024-12-10 14:34:14.015 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:34:14.016 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1043 - 200 null application/json; charset=utf-8 17.2809ms
2024-12-10 14:34:18.224 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1038 - null null
2024-12-10 14:34:18.227 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:18.229 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1038 - 204 null null 5.5767ms
2024-12-10 14:34:18.231 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1038 - application/json 4
2024-12-10 14:34:18.235 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:18.235 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:34:18.236 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:34:18.238 +05:30 [INF] Received request to toggle trash status for note with ID: 1038
2024-12-10 14:34:18.238 +05:30 [INF] Initiating toggle of trash status for note with ID: 1038 for user ID: 1
2024-12-10 14:34:18.242 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:34:18.245 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:34:18.250 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:34:18.251 +05:30 [INF] Note with ID: 1038 trash status updated to true
2024-12-10 14:34:18.252 +05:30 [INF] Successfully toggled trash status for note with ID: 1038
2024-12-10 14:34:18.253 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:34:18.254 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 16.2061ms
2024-12-10 14:34:18.254 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:34:18.255 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1038 - 200 null application/json; charset=utf-8 24.5348ms
2024-12-10 14:34:20.340 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1039 - null null
2024-12-10 14:34:20.345 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:20.345 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1039 - 204 null null 5.8956ms
2024-12-10 14:34:20.347 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1039 - application/json 4
2024-12-10 14:34:20.350 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:20.351 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:34:20.352 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:34:20.354 +05:30 [INF] Received request to toggle trash status for note with ID: 1039
2024-12-10 14:34:20.355 +05:30 [INF] Initiating toggle of trash status for note with ID: 1039 for user ID: 1
2024-12-10 14:34:20.358 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:34:20.360 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:34:20.364 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:34:20.365 +05:30 [INF] Note with ID: 1039 trash status updated to true
2024-12-10 14:34:20.366 +05:30 [INF] Successfully toggled trash status for note with ID: 1039
2024-12-10 14:34:20.366 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:34:20.367 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 13.0311ms
2024-12-10 14:34:20.368 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:34:20.368 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1039 - 200 null application/json; charset=utf-8 21.7986ms
2024-12-10 14:34:22.622 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1034 - null null
2024-12-10 14:34:22.626 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:22.626 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1034 - 204 null null 4.4488ms
2024-12-10 14:34:22.628 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1034 - application/json 4
2024-12-10 14:34:22.630 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:22.630 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:34:22.631 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:34:22.633 +05:30 [INF] Received request to toggle trash status for note with ID: 1034
2024-12-10 14:34:22.633 +05:30 [INF] Initiating toggle of trash status for note with ID: 1034 for user ID: 1
2024-12-10 14:34:22.635 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:34:22.638 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:34:22.642 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:34:22.643 +05:30 [INF] Note with ID: 1034 trash status updated to true
2024-12-10 14:34:22.644 +05:30 [INF] Successfully toggled trash status for note with ID: 1034
2024-12-10 14:34:22.644 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:34:22.645 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 12.5031ms
2024-12-10 14:34:22.645 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 14:34:22.646 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1034 - 200 null application/json; charset=utf-8 17.4594ms
2024-12-10 14:34:30.787 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:34:30.789 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:30.790 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.5938ms
2024-12-10 14:34:30.797 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 40
2024-12-10 14:34:30.802 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:30.804 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:34:30.804 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:34:30.806 +05:30 [INF] Attempt to create a note
2024-12-10 14:34:30.807 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:34:30.813 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 14:34:30.814 +05:30 [INF] Created notes successfully
2024-12-10 14:34:30.815 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:34:30.815 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 10.1238ms
2024-12-10 14:34:30.816 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:34:30.817 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.5701ms
2024-12-10 14:34:32.704 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:34:32.706 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:32.706 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:34:32.707 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:34:32.709 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:34:32.711 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:34:32.712 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:34:32.713 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:34:32.713 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:34:32.715 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:34:32.716 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:34:32.724 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:34:32.726 +05:30 [INF] 12 notes retrieved for user with ID: 1
2024-12-10 14:34:32.727 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:34:32.728 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:34:32.728 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:34:32.729 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.2353ms
2024-12-10 14:34:32.730 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:34:32.731 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.0072ms
2024-12-10 14:34:35.755 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1045 - null null
2024-12-10 14:34:35.756 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:35.756 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1045 - 204 null null 1.8323ms
2024-12-10 14:34:35.759 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1045 - application/json 68
2024-12-10 14:34:35.763 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:35.763 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 14:34:35.764 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:34:35.766 +05:30 [INF] Received note update: {"Title":"dhdeau","Description":"dsadg","Color":"#D4E4ED"}
2024-12-10 14:34:35.766 +05:30 [INF] Updating note with ID: 1045
2024-12-10 14:34:35.766 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1045
2024-12-10 14:34:35.767 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:34:35.768 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:34:35.769 +05:30 [INF] Retrieving note with ID: 1045
2024-12-10 14:34:35.770 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 14:34:35.771 +05:30 [INF] User with ID: 1 has permission to update note ID: 1045
2024-12-10 14:34:35.774 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 14:34:35.775 +05:30 [INF] Successfully updated note with ID: 1045
2024-12-10 14:34:35.776 +05:30 [INF] Retrieved notes successfully
2024-12-10 14:34:35.777 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:34:35.778 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 12.6471ms
2024-12-10 14:34:35.778 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 14:34:35.779 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1045 - 200 null application/json; charset=utf-8 20.5845ms
2024-12-10 14:34:46.231 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:34:46.233 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:46.234 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.4179ms
2024-12-10 14:34:46.235 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 37
2024-12-10 14:34:46.238 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:46.239 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:34:46.240 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:34:46.241 +05:30 [INF] Attempt to create a note
2024-12-10 14:34:46.243 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:34:46.248 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 14:34:46.250 +05:30 [INF] Created notes successfully
2024-12-10 14:34:46.251 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:34:46.252 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 10.8675ms
2024-12-10 14:34:46.253 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:34:46.253 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.6121ms
2024-12-10 14:34:52.779 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:34:52.783 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:52.783 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4884ms
2024-12-10 14:34:52.785 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 40
2024-12-10 14:34:52.786 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:52.787 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:34:52.788 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:34:52.789 +05:30 [INF] Attempt to create a note
2024-12-10 14:34:52.792 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:34:52.795 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 14:34:52.797 +05:30 [INF] Created notes successfully
2024-12-10 14:34:52.797 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:34:52.797 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 8.5284ms
2024-12-10 14:34:52.798 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:34:52.799 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.0916ms
2024-12-10 14:34:53.272 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:34:53.278 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:34:53.279 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:34:53.282 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:34:53.283 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:34:53.285 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:34:53.286 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:34:53.286 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:34:53.287 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:34:53.288 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:34:53.289 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:34:53.290 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:34:53.291 +05:30 [INF] 14 notes retrieved for user with ID: 1
2024-12-10 14:34:53.292 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:34:53.293 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:34:53.293 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:34:53.294 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.9609ms
2024-12-10 14:34:53.294 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:34:53.296 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.3213ms
2024-12-10 14:35:05.475 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:35:05.478 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:35:05.479 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.4693ms
2024-12-10 14:35:05.480 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 36
2024-12-10 14:35:05.481 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:35:05.482 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:35:05.482 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:35:05.484 +05:30 [INF] Attempt to create a note
2024-12-10 14:35:05.486 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:35:05.490 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 14:35:05.492 +05:30 [INF] Created notes successfully
2024-12-10 14:35:05.492 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 14:35:05.492 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 9.2218ms
2024-12-10 14:35:05.493 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 14:35:05.494 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.782ms
2024-12-10 14:35:18.678 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:35:18.680 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:35:18.681 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2998ms
2024-12-10 14:35:18.682 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:35:18.684 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:35:18.684 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:35:18.685 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:35:18.687 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:35:18.689 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:35:18.690 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 14:35:18.690 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 14:35:18.691 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 14:35:18.695 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 14:35:18.697 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 14:35:18.703 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 14:35:18.705 +05:30 [INF] 15 notes retrieved for user with ID: 1
2024-12-10 14:35:18.706 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 14:35:18.707 +05:30 [INF] Notes retrieved successfully
2024-12-10 14:35:18.708 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:35:18.709 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.6017ms
2024-12-10 14:35:18.710 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:35:18.711 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.7695ms
2024-12-10 14:35:20.946 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:35:20.948 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:35:20.949 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:35:20.949 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:35:20.950 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:35:20.951 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:35:20.952 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 14:35:20.952 +05:30 [INF] Deserializing the notes
2024-12-10 14:35:20.953 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:35:20.954 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.872ms
2024-12-10 14:35:20.955 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:35:20.955 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.3031ms
2024-12-10 14:35:32.626 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:35:32.630 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:35:32.631 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.9822ms
2024-12-10 14:35:32.636 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:35:32.642 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:35:32.643 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:35:32.644 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:35:32.646 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:35:32.648 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:35:32.649 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 14:35:32.650 +05:30 [INF] Deserializing the notes
2024-12-10 14:35:32.651 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:35:32.652 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.5764ms
2024-12-10 14:35:32.653 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:35:32.654 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.0025ms
2024-12-10 14:35:47.000 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 14:35:47.002 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:35:47.003 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2987ms
2024-12-10 14:35:47.004 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:35:47.006 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:35:47.007 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:35:47.009 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:35:47.012 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:35:47.014 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:35:47.016 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 14:35:47.016 +05:30 [INF] Deserializing the notes
2024-12-10 14:35:47.018 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:35:47.019 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.4282ms
2024-12-10 14:35:47.019 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:35:47.020 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.8802ms
2024-12-10 14:35:50.333 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 14:35:50.334 +05:30 [INF] CORS policy execution successful.
2024-12-10 14:35:50.335 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:35:50.336 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 14:35:50.337 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 14:35:50.342 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 14:35:50.344 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 14:35:50.345 +05:30 [INF] Deserializing the notes
2024-12-10 14:35:50.346 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 14:35:50.348 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.746ms
2024-12-10 14:35:50.349 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 14:35:50.350 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.7882ms
2024-12-10 15:04:36.969 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:04:36.974 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:04:36.974 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3556ms
2024-12-10 15:04:36.977 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:04:36.979 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:04:36.981 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:04:36.981 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:04:36.983 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:04:36.984 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:04:36.985 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 15:04:36.986 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 15:04:36.986 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 15:04:37.003 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 15:04:37.005 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 15:04:37.012 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 15:04:37.014 +05:30 [INF] 15 notes retrieved for user with ID: 1
2024-12-10 15:04:37.014 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 15:04:37.015 +05:30 [INF] Notes retrieved successfully
2024-12-10 15:04:37.015 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:04:37.016 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 33.4307ms
2024-12-10 15:04:37.017 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:04:37.017 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.8288ms
2024-12-10 15:25:28.249 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:25:28.261 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:25:28.263 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.9386ms
2024-12-10 15:25:28.265 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:25:28.268 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:25:28.271 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 09:43:56', Current time (UTC): '10-12-2024 09:55:28'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 15:25:28.275 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 15:25:28.309 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 15:25:28.332 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 15:25:28.335 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 15:25:28.335 +05:30 [ERR] Connection id "0HN8OSUL0LVFN", Request id "0HN8OSUL0LVFN:000000D5": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 15:25:28.339 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 73.6203ms
2024-12-10 15:25:51.827 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-10 15:25:51.832 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:25:51.833 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 5.7959ms
2024-12-10 15:25:51.834 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-10 15:25:51.835 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:25:51.836 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 15:25:51.836 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-10 15:25:51.855 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-10 15:25:51.856 +05:30 [INF] Checking if the user present
2024-12-10 15:25:51.856 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-10 15:25:51.871 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-10 15:25:51.873 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-10 15:25:51.873 +05:30 [INF] Verifying the password
2024-12-10 15:25:52.086 +05:30 [INF] Password is valid and token is generated
2024-12-10 15:25:52.087 +05:30 [INF] Login successful
2024-12-10 15:25:52.088 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 15:25:52.088 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 251.3296ms
2024-12-10 15:25:52.090 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 15:25:52.091 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 256.49ms
2024-12-10 15:25:52.100 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:25:52.102 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:25:52.102 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.0999ms
2024-12-10 15:25:52.104 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:25:52.105 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:25:52.106 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:25:52.106 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:25:52.108 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:25:52.110 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:25:52.111 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 15:25:52.112 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 15:25:52.112 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 15:25:52.116 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 15:25:52.117 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 15:25:52.124 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 15:25:52.126 +05:30 [INF] 15 notes retrieved for user with ID: 1
2024-12-10 15:25:52.127 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 15:25:52.127 +05:30 [INF] Notes retrieved successfully
2024-12-10 15:25:52.128 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:25:52.128 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.4617ms
2024-12-10 15:25:52.129 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:25:52.130 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.7102ms
2024-12-10 15:26:06.918 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:26:06.921 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:26:06.922 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6194ms
2024-12-10 15:26:06.924 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:26:06.926 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:26:06.927 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:26:06.928 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:26:06.930 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:26:06.932 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:26:06.933 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:26:06.933 +05:30 [INF] Deserializing the notes
2024-12-10 15:26:06.934 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:26:06.935 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1218ms
2024-12-10 15:26:06.936 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:26:06.937 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.7569ms
2024-12-10 15:26:07.522 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:26:07.525 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:26:07.527 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:26:07.528 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:26:07.529 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:26:07.530 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:26:07.530 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:26:07.531 +05:30 [INF] Deserializing the notes
2024-12-10 15:26:07.532 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:26:07.533 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9172ms
2024-12-10 15:26:07.533 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:26:07.534 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.2231ms
2024-12-10 15:26:38.343 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:26:38.349 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:26:38.350 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.7003ms
2024-12-10 15:26:38.352 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:26:38.354 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:26:38.354 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:26:38.355 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:26:38.357 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:26:38.358 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:26:38.360 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:26:38.361 +05:30 [INF] Deserializing the notes
2024-12-10 15:26:38.391 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:26:38.393 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 36.607ms
2024-12-10 15:26:38.394 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:26:38.396 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.3954ms
2024-12-10 15:26:54.243 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:26:54.245 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:26:54.245 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4926ms
2024-12-10 15:26:54.247 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:26:54.249 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:26:54.250 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:26:54.250 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:26:54.251 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:26:54.252 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:26:54.253 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:26:54.254 +05:30 [INF] Deserializing the notes
2024-12-10 15:26:54.255 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:26:54.256 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6666ms
2024-12-10 15:26:54.257 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:26:54.258 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.4668ms
2024-12-10 15:26:55.851 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:26:55.853 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:26:55.853 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:26:55.854 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:26:55.855 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:26:55.856 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:26:55.857 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:26:55.858 +05:30 [INF] Deserializing the notes
2024-12-10 15:26:55.858 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:26:55.859 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4157ms
2024-12-10 15:26:55.861 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:26:55.861 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.326ms
2024-12-10 15:27:09.212 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:27:09.213 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:27:09.214 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.7833ms
2024-12-10 15:27:09.215 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:27:09.217 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:27:09.218 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:27:09.218 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:27:09.219 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:27:09.221 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:27:09.222 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:27:09.223 +05:30 [INF] Deserializing the notes
2024-12-10 15:27:09.223 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:27:09.224 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8387ms
2024-12-10 15:27:09.225 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:27:09.226 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.6517ms
2024-12-10 15:27:12.448 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:27:12.449 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:27:12.450 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:27:12.450 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:27:12.451 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:27:12.452 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:27:12.453 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:27:12.454 +05:30 [INF] Deserializing the notes
2024-12-10 15:27:12.454 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:27:12.456 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1522ms
2024-12-10 15:27:12.457 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:27:12.458 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.4631ms
2024-12-10 15:27:15.647 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:27:15.649 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:27:15.650 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6158ms
2024-12-10 15:27:15.651 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:27:15.654 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:27:15.655 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:27:15.656 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:27:15.658 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:27:15.659 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:27:15.660 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:27:15.660 +05:30 [INF] Deserializing the notes
2024-12-10 15:27:15.661 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:27:15.662 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3667ms
2024-12-10 15:27:15.663 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:27:15.663 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.2627ms
2024-12-10 15:27:21.566 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:27:21.569 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:27:21.570 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.3803ms
2024-12-10 15:27:21.572 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:27:21.574 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:27:21.575 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:27:21.576 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:27:21.578 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:27:21.579 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:27:21.580 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:27:21.580 +05:30 [INF] Deserializing the notes
2024-12-10 15:27:21.581 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:27:21.582 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3805ms
2024-12-10 15:27:21.583 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:27:21.587 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.4339ms
2024-12-10 15:27:43.495 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:27:43.496 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:27:43.497 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.013ms
2024-12-10 15:27:43.499 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:27:43.500 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:27:43.501 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:27:43.501 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:27:43.503 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:27:43.504 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:27:43.504 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:27:43.505 +05:30 [INF] Deserializing the notes
2024-12-10 15:27:43.505 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:27:43.507 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0759ms
2024-12-10 15:27:43.508 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:27:43.509 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.157ms
2024-12-10 15:27:59.109 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:27:59.111 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:27:59.111 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.1267ms
2024-12-10 15:27:59.113 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:27:59.115 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:27:59.116 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:27:59.116 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:27:59.117 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:27:59.119 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:27:59.119 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:27:59.120 +05:30 [INF] Deserializing the notes
2024-12-10 15:27:59.120 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:27:59.121 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9242ms
2024-12-10 15:27:59.122 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:27:59.124 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.6747ms
2024-12-10 15:28:02.075 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:28:02.077 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:28:02.077 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:02.078 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:28:02.080 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:28:02.081 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:28:02.082 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:28:02.083 +05:30 [INF] Deserializing the notes
2024-12-10 15:28:02.083 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:28:02.084 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.1995ms
2024-12-10 15:28:02.085 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:02.086 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.6149ms
2024-12-10 15:28:06.484 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:28:06.487 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:28:06.487 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0543ms
2024-12-10 15:28:06.489 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:28:06.491 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:28:06.492 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:06.493 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:28:06.494 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:28:06.495 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:28:06.496 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:28:06.497 +05:30 [INF] Deserializing the notes
2024-12-10 15:28:06.498 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:28:06.499 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5205ms
2024-12-10 15:28:06.499 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:06.500 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.727ms
2024-12-10 15:28:19.893 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:28:19.895 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:28:19.895 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.3803ms
2024-12-10 15:28:19.897 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:28:19.900 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:28:19.900 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:19.901 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:28:19.903 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:28:19.904 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:28:19.904 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:28:19.905 +05:30 [INF] Deserializing the notes
2024-12-10 15:28:19.905 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:28:19.906 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0394ms
2024-12-10 15:28:19.907 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:19.908 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.1836ms
2024-12-10 15:28:25.124 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:28:25.126 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:28:25.127 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.1785ms
2024-12-10 15:28:25.131 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:28:25.133 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:28:25.134 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:25.134 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:28:25.136 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:28:25.138 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:28:25.138 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:28:25.139 +05:30 [INF] Deserializing the notes
2024-12-10 15:28:25.140 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:28:25.141 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9743ms
2024-12-10 15:28:25.142 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:25.143 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.2192ms
2024-12-10 15:28:34.313 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:28:34.315 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:28:34.315 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.3167ms
2024-12-10 15:28:34.317 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:28:34.319 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:28:34.320 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:34.321 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:28:34.323 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:28:34.325 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:28:34.325 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:28:34.326 +05:30 [INF] Deserializing the notes
2024-12-10 15:28:34.327 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:28:34.328 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.8481ms
2024-12-10 15:28:34.329 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:34.331 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.3706ms
2024-12-10 15:28:58.027 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:28:58.030 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:28:58.031 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8914ms
2024-12-10 15:28:58.033 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:28:58.035 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:28:58.036 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:58.036 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:28:58.038 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:28:58.040 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:28:58.041 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:28:58.041 +05:30 [INF] Deserializing the notes
2024-12-10 15:28:58.042 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:28:58.043 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1264ms
2024-12-10 15:28:58.044 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:58.045 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.0996ms
2024-12-10 15:28:58.759 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:28:58.764 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:28:58.766 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:58.766 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:28:58.768 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:28:58.769 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:28:58.770 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:28:58.771 +05:30 [INF] Deserializing the notes
2024-12-10 15:28:58.772 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:28:58.773 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.6579ms
2024-12-10 15:28:58.774 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:28:58.775 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.3456ms
2024-12-10 15:29:04.171 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:29:04.173 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:29:04.173 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8225ms
2024-12-10 15:29:04.175 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:29:04.177 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:29:04.179 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:29:04.180 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:29:04.182 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:29:04.183 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:29:04.184 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:29:04.185 +05:30 [INF] Deserializing the notes
2024-12-10 15:29:04.186 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:29:04.187 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.197ms
2024-12-10 15:29:04.187 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:29:04.188 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.9012ms
2024-12-10 15:29:17.645 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:29:17.656 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:29:17.659 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.6583ms
2024-12-10 15:29:17.662 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:29:17.667 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:29:17.668 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:29:17.669 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:29:17.671 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:29:17.673 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:29:17.674 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:29:17.675 +05:30 [INF] Deserializing the notes
2024-12-10 15:29:17.676 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:29:17.677 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.8962ms
2024-12-10 15:29:17.678 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:29:17.679 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.2681ms
2024-12-10 15:29:29.544 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:29:29.547 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:29:29.548 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6107ms
2024-12-10 15:29:29.549 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:29:29.551 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:29:29.551 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:29:29.552 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:29:29.554 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:29:29.555 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:29:29.556 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:29:29.556 +05:30 [INF] Deserializing the notes
2024-12-10 15:29:29.557 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:29:29.559 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2836ms
2024-12-10 15:29:29.560 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:29:29.561 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.8852ms
2024-12-10 15:29:45.180 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:29:45.183 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:29:45.185 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.3232ms
2024-12-10 15:29:45.188 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:29:45.189 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:29:45.190 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:29:45.191 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:29:45.192 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:29:45.193 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:29:45.194 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:29:45.195 +05:30 [INF] Deserializing the notes
2024-12-10 15:29:45.196 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:29:45.196 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2237ms
2024-12-10 15:29:45.197 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:29:45.198 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.5002ms
2024-12-10 15:30:01.846 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:30:01.854 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:30:01.855 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.7245ms
2024-12-10 15:30:01.860 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:30:01.864 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:30:01.865 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:01.866 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:30:01.868 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:30:01.868 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:30:01.870 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:30:01.871 +05:30 [INF] Deserializing the notes
2024-12-10 15:30:01.871 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:30:01.872 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5558ms
2024-12-10 15:30:01.873 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:01.873 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.9184ms
2024-12-10 15:30:17.285 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:30:17.286 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:30:17.287 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.7982ms
2024-12-10 15:30:17.288 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:30:17.291 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:30:17.293 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:17.295 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:30:17.296 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:30:17.298 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:30:17.298 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:30:17.299 +05:30 [INF] Deserializing the notes
2024-12-10 15:30:17.300 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:30:17.301 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7139ms
2024-12-10 15:30:17.303 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:17.304 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.5207ms
2024-12-10 15:30:29.160 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:30:29.170 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:30:29.170 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.3481ms
2024-12-10 15:30:29.173 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:30:29.178 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:30:29.179 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:29.180 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:30:29.183 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:30:29.185 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:30:29.186 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:30:29.187 +05:30 [INF] Deserializing the notes
2024-12-10 15:30:29.187 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:30:29.191 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.491ms
2024-12-10 15:30:29.193 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:29.194 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.8947ms
2024-12-10 15:30:39.915 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:30:39.917 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:30:39.917 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.7757ms
2024-12-10 15:30:39.919 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:30:39.921 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:30:39.922 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:39.922 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:30:39.924 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:30:39.926 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:30:39.927 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:30:39.927 +05:30 [INF] Deserializing the notes
2024-12-10 15:30:39.928 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:30:39.929 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2913ms
2024-12-10 15:30:39.930 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:39.931 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.8013ms
2024-12-10 15:30:40.580 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:30:40.585 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:30:40.587 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:40.588 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:30:40.590 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:30:40.591 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:30:40.592 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:30:40.593 +05:30 [INF] Deserializing the notes
2024-12-10 15:30:40.594 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:30:40.595 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.701ms
2024-12-10 15:30:40.596 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:40.597 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.0335ms
2024-12-10 15:30:52.255 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:30:52.257 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:30:52.258 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0452ms
2024-12-10 15:30:52.260 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:30:52.262 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:30:52.262 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:52.263 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:30:52.265 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:30:52.266 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:30:52.267 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 15:30:52.268 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 15:30:52.268 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 15:30:52.277 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 15:30:52.279 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 15:30:52.288 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 15:30:52.289 +05:30 [INF] 15 notes retrieved for user with ID: 1
2024-12-10 15:30:52.290 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 15:30:52.291 +05:30 [INF] Notes retrieved successfully
2024-12-10 15:30:52.291 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:30:52.292 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 27.5419ms
2024-12-10 15:30:52.292 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:52.293 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.1071ms
2024-12-10 15:30:57.527 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:30:57.529 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:30:57.530 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0537ms
2024-12-10 15:30:57.531 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:30:57.534 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:30:57.535 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:57.535 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:30:57.537 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:30:57.538 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:30:57.539 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:30:57.540 +05:30 [INF] Deserializing the notes
2024-12-10 15:30:57.541 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:30:57.542 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1523ms
2024-12-10 15:30:57.543 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:30:57.543 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.9607ms
2024-12-10 15:31:10.315 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:31:10.319 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:31:10.320 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.519ms
2024-12-10 15:31:10.322 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:31:10.325 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:31:10.326 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:31:10.327 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:31:10.330 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:31:10.332 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:31:10.334 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:31:10.335 +05:30 [INF] Deserializing the notes
2024-12-10 15:31:10.337 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:31:10.338 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.7985ms
2024-12-10 15:31:10.339 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:31:10.341 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.0226ms
2024-12-10 15:40:17.214 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:40:17.221 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:40:17.223 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.0385ms
2024-12-10 15:40:17.228 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:40:17.232 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:40:17.233 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:40:17.234 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:40:17.238 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:40:17.241 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:40:17.243 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 15:40:17.244 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 15:40:17.245 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 15:40:17.273 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 15:40:17.279 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 15:40:17.293 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 15:40:17.296 +05:30 [INF] 15 notes retrieved for user with ID: 1
2024-12-10 15:40:17.297 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 15:40:17.298 +05:30 [INF] Notes retrieved successfully
2024-12-10 15:40:17.299 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:40:17.300 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 62.3533ms
2024-12-10 15:40:17.302 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:40:17.303 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 75.3219ms
2024-12-10 15:40:37.037 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1046 - null null
2024-12-10 15:40:37.042 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:40:37.044 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1046 - 204 null null 8.1186ms
2024-12-10 15:40:37.048 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1046 - application/json 65
2024-12-10 15:40:37.056 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:40:37.057 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 15:40:37.063 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:40:37.070 +05:30 [INF] Received note update: {"Title":"htyhg","Description":"jhm","Color":"#E2F6D3"}
2024-12-10 15:40:37.073 +05:30 [INF] Updating note with ID: 1046
2024-12-10 15:40:37.074 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1046
2024-12-10 15:40:37.075 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 15:40:37.081 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 15:40:37.085 +05:30 [INF] Retrieving note with ID: 1046
2024-12-10 15:40:37.090 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 15:40:37.093 +05:30 [INF] User with ID: 1 has permission to update note ID: 1046
2024-12-10 15:40:37.105 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 15:40:37.108 +05:30 [INF] Successfully updated note with ID: 1046
2024-12-10 15:40:37.111 +05:30 [INF] Retrieved notes successfully
2024-12-10 15:40:37.112 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 15:40:37.114 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 44.4475ms
2024-12-10 15:40:37.116 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 15:40:37.118 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1046 - 200 null application/json; charset=utf-8 70.1038ms
2024-12-10 15:41:13.502 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:41:13.507 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:41:13.508 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.3527ms
2024-12-10 15:41:13.512 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:41:13.517 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:41:13.519 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:41:13.521 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:41:13.524 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:41:13.526 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:41:13.532 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 15:41:13.534 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 15:41:13.540 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 15:41:13.557 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 15:41:13.561 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 15:41:13.572 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 15:41:13.578 +05:30 [INF] 15 notes retrieved for user with ID: 1
2024-12-10 15:41:13.580 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 15:41:13.582 +05:30 [INF] Notes retrieved successfully
2024-12-10 15:41:13.584 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:41:13.586 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 62.4226ms
2024-12-10 15:41:13.589 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:41:13.591 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 79.2179ms
2024-12-10 15:41:14.673 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:41:14.677 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:41:14.678 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:41:14.679 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:41:14.682 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:41:14.684 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:41:14.687 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:41:14.688 +05:30 [INF] Deserializing the notes
2024-12-10 15:41:14.689 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:41:14.691 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.3331ms
2024-12-10 15:41:14.693 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:41:14.695 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.1176ms
2024-12-10 15:41:16.133 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:41:16.137 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:41:16.139 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:41:16.141 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:41:16.144 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:41:16.146 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:41:16.150 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:41:16.157 +05:30 [INF] Deserializing the notes
2024-12-10 15:41:16.159 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:41:16.161 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.4551ms
2024-12-10 15:41:16.163 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:41:16.165 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.6296ms
2024-12-10 15:41:18.520 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:41:18.524 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:41:18.525 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.5676ms
2024-12-10 15:41:18.528 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:41:18.534 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:41:18.536 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:41:18.539 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:41:18.542 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:41:18.545 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:41:18.547 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:41:18.549 +05:30 [INF] Deserializing the notes
2024-12-10 15:41:18.551 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:41:18.556 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.765ms
2024-12-10 15:41:18.560 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:41:18.564 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.5184ms
2024-12-10 15:41:25.548 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:41:25.552 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:41:25.553 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.313ms
2024-12-10 15:41:25.557 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:41:25.561 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:41:25.562 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:41:25.563 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:41:25.567 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:41:25.569 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:41:25.572 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:41:25.573 +05:30 [INF] Deserializing the notes
2024-12-10 15:41:25.574 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:41:25.577 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.0467ms
2024-12-10 15:41:25.578 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:41:25.580 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.2034ms
2024-12-10 15:41:27.454 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:41:27.460 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:41:27.461 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:41:27.462 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:41:27.466 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:41:27.469 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:41:27.472 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:41:27.473 +05:30 [INF] Deserializing the notes
2024-12-10 15:41:27.476 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:41:27.479 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.7671ms
2024-12-10 15:41:27.481 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:41:27.484 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.8769ms
2024-12-10 15:53:49.735 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:53:49.739 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:53:49.740 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8025ms
2024-12-10 15:53:49.743 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:53:49.747 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:53:49.749 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:53:49.751 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:53:49.754 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:53:49.755 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:53:49.757 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 15:53:49.758 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 15:53:49.759 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 15:53:49.801 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 15:53:49.807 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 15:53:49.823 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 15:53:49.828 +05:30 [INF] 15 notes retrieved for user with ID: 1
2024-12-10 15:53:49.831 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 15:53:49.833 +05:30 [INF] Notes retrieved successfully
2024-12-10 15:53:49.834 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:53:49.836 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 83.4051ms
2024-12-10 15:53:49.839 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:53:49.840 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 97.6021ms
2024-12-10 15:54:02.925 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:54:02.930 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:54:02.932 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6669ms
2024-12-10 15:54:02.936 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:54:02.940 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:54:02.943 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:54:02.945 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:54:02.952 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:54:02.955 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:54:02.957 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:54:02.959 +05:30 [INF] Deserializing the notes
2024-12-10 15:54:02.960 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:54:02.961 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.9739ms
2024-12-10 15:54:02.963 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:54:02.964 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.8988ms
2024-12-10 15:54:14.662 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:54:14.665 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:54:14.667 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.6646ms
2024-12-10 15:54:14.670 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:54:14.674 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:54:14.676 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:54:14.678 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:54:14.682 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:54:14.685 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:54:14.687 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:54:14.688 +05:30 [INF] Deserializing the notes
2024-12-10 15:54:14.690 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:54:14.693 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.2044ms
2024-12-10 15:54:14.695 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:54:14.698 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.0643ms
2024-12-10 15:54:28.130 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:54:28.135 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:54:28.136 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.4608ms
2024-12-10 15:54:28.140 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:54:28.148 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:54:28.149 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:54:28.151 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:54:28.155 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:54:28.159 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:54:28.161 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:54:28.162 +05:30 [INF] Deserializing the notes
2024-12-10 15:54:28.163 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:54:28.165 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.0186ms
2024-12-10 15:54:28.169 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:54:28.171 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.1113ms
2024-12-10 15:54:42.615 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:54:42.622 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:54:42.622 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.9135ms
2024-12-10 15:54:42.625 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:54:42.632 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:54:42.633 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:54:42.635 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:54:42.638 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:54:42.640 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:54:42.643 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:54:42.645 +05:30 [INF] Deserializing the notes
2024-12-10 15:54:42.648 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:54:42.651 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.4198ms
2024-12-10 15:54:42.655 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:54:42.659 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.2279ms
2024-12-10 15:55:48.620 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:55:48.632 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:55:48.636 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.4599ms
2024-12-10 15:55:48.639 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:55:48.647 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:55:48.650 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:55:48.652 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:55:48.655 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:55:48.658 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:55:48.660 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:55:48.661 +05:30 [INF] Deserializing the notes
2024-12-10 15:55:48.664 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:55:48.667 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.0895ms
2024-12-10 15:55:48.670 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:55:48.673 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.3096ms
2024-12-10 15:56:09.102 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:56:09.113 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:56:09.114 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.4919ms
2024-12-10 15:56:09.119 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:56:09.123 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:56:09.124 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:56:09.127 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:56:09.130 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:56:09.133 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:56:09.135 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:56:09.136 +05:30 [INF] Deserializing the notes
2024-12-10 15:56:09.137 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:56:09.139 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.3119ms
2024-12-10 15:56:09.141 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:56:09.143 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.7317ms
2024-12-10 15:56:10.102 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:56:10.106 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:56:10.107 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:56:10.108 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:56:10.111 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:56:10.114 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:56:10.116 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:56:10.118 +05:30 [INF] Deserializing the notes
2024-12-10 15:56:10.121 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:56:10.123 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.4331ms
2024-12-10 15:56:10.125 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:56:10.126 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.6869ms
2024-12-10 15:57:53.355 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:57:53.358 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:57:53.359 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1802ms
2024-12-10 15:57:53.362 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:57:53.374 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:57:53.376 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:57:53.377 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:57:53.381 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:57:53.384 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:57:53.388 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:57:53.389 +05:30 [INF] Deserializing the notes
2024-12-10 15:57:53.391 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:57:53.394 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.739ms
2024-12-10 15:57:53.397 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:57:53.399 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.2126ms
2024-12-10 15:58:30.827 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:58:30.830 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:58:30.832 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.605ms
2024-12-10 15:58:30.835 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:58:30.847 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:58:30.850 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:58:30.852 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:58:30.857 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:58:30.860 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:58:30.864 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:58:30.866 +05:30 [INF] Deserializing the notes
2024-12-10 15:58:30.869 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:58:30.873 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.114ms
2024-12-10 15:58:30.878 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:58:30.881 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.8773ms
2024-12-10 15:58:36.665 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:58:36.669 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:58:36.671 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.9856ms
2024-12-10 15:58:36.674 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:58:36.681 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:58:36.682 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:58:36.684 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:58:36.688 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:58:36.690 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:58:36.693 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:58:36.694 +05:30 [INF] Deserializing the notes
2024-12-10 15:58:36.697 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:58:36.699 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.0499ms
2024-12-10 15:58:36.701 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:58:36.703 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.3901ms
2024-12-10 15:58:38.726 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:58:38.729 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:58:38.730 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:58:38.731 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:58:38.735 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:58:38.737 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:58:38.739 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:58:38.741 +05:30 [INF] Deserializing the notes
2024-12-10 15:58:38.742 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:58:38.745 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.197ms
2024-12-10 15:58:38.747 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:58:38.749 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.3065ms
2024-12-10 15:58:55.199 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:58:55.203 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:58:55.204 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1889ms
2024-12-10 15:58:55.207 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:58:55.217 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:58:55.219 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:58:55.220 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:58:55.224 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:58:55.226 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:58:55.230 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 15:58:55.232 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 15:58:55.234 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 15:58:55.256 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 15:58:55.262 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 15:58:55.279 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 15:58:55.287 +05:30 [INF] 15 notes retrieved for user with ID: 1
2024-12-10 15:58:55.290 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 15:58:55.292 +05:30 [INF] Notes retrieved successfully
2024-12-10 15:58:55.293 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:58:55.295 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 71.4972ms
2024-12-10 15:58:55.298 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:58:55.299 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 92.9389ms
2024-12-10 15:59:12.794 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:59:12.797 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:59:12.798 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1576ms
2024-12-10 15:59:12.800 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:59:12.805 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:59:12.806 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:59:12.807 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:59:12.810 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:59:12.812 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:59:12.814 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:59:12.815 +05:30 [INF] Deserializing the notes
2024-12-10 15:59:12.816 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:59:12.818 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.8476ms
2024-12-10 15:59:12.820 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:59:12.821 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.5162ms
2024-12-10 15:59:13.915 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:59:13.923 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:59:13.926 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:59:13.927 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:59:13.930 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:59:13.933 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:59:13.935 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:59:13.936 +05:30 [INF] Deserializing the notes
2024-12-10 15:59:13.937 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:59:13.941 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.2682ms
2024-12-10 15:59:13.944 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:59:13.945 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.5343ms
2024-12-10 15:59:18.053 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:59:18.057 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:59:18.058 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2106ms
2024-12-10 15:59:18.070 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:59:18.079 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:59:18.080 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:59:18.082 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:59:18.085 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:59:18.087 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:59:18.089 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:59:18.090 +05:30 [INF] Deserializing the notes
2024-12-10 15:59:18.092 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:59:18.095 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7498ms
2024-12-10 15:59:18.099 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:59:18.101 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.836ms
2024-12-10 15:59:51.760 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 15:59:51.771 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:59:51.772 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.809ms
2024-12-10 15:59:51.775 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:59:51.779 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:59:51.780 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:59:51.781 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:59:51.784 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:59:51.786 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:59:51.788 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:59:51.789 +05:30 [INF] Deserializing the notes
2024-12-10 15:59:51.791 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:59:51.793 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5743ms
2024-12-10 15:59:51.796 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:59:51.800 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.0143ms
2024-12-10 15:59:53.927 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 15:59:53.930 +05:30 [INF] CORS policy execution successful.
2024-12-10 15:59:53.932 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:59:53.933 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 15:59:53.935 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 15:59:53.939 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 15:59:53.941 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 15:59:53.943 +05:30 [INF] Deserializing the notes
2024-12-10 15:59:53.944 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 15:59:53.946 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.5648ms
2024-12-10 15:59:53.947 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 15:59:53.950 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.6678ms
2024-12-10 16:02:41.246 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:02:41.253 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:02:41.254 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.5352ms
2024-12-10 16:02:41.257 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:02:41.264 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:02:41.266 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:02:41.267 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:02:41.271 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:02:41.273 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:02:41.276 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:02:41.277 +05:30 [INF] Deserializing the notes
2024-12-10 16:02:41.280 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:02:41.283 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.9064ms
2024-12-10 16:02:41.285 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:02:41.288 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.2594ms
2024-12-10 16:02:50.973 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:02:50.978 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:02:50.979 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.3585ms
2024-12-10 16:02:50.983 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:02:50.991 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:02:50.994 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:02:50.995 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:02:50.999 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:02:51.003 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:02:51.005 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:02:51.008 +05:30 [INF] Deserializing the notes
2024-12-10 16:02:51.010 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:02:51.013 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.547ms
2024-12-10 16:02:51.017 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:02:51.019 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.2485ms
2024-12-10 16:03:09.336 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:03:09.339 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:03:09.339 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.3131ms
2024-12-10 16:03:09.343 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:03:09.346 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:03:09.347 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:03:09.348 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:03:09.352 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:03:09.354 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:03:09.357 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:03:09.358 +05:30 [INF] Deserializing the notes
2024-12-10 16:03:09.359 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:03:09.362 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.2922ms
2024-12-10 16:03:09.367 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:03:09.369 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.4605ms
2024-12-10 16:03:16.336 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:03:16.338 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:03:16.339 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.5936ms
2024-12-10 16:03:16.343 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:03:16.348 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:03:16.350 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:03:16.353 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:03:16.359 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:03:16.362 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:03:16.364 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:03:16.366 +05:30 [INF] Deserializing the notes
2024-12-10 16:03:16.368 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:03:16.371 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.5883ms
2024-12-10 16:03:16.375 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:03:16.376 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.7434ms
2024-12-10 16:03:43.321 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:03:43.333 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:03:43.334 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.6182ms
2024-12-10 16:03:43.337 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:03:43.342 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:03:43.344 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:03:43.346 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:03:43.350 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:03:43.352 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:03:43.354 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:03:43.355 +05:30 [INF] Deserializing the notes
2024-12-10 16:03:43.356 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:03:43.358 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4757ms
2024-12-10 16:03:43.360 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:03:43.365 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.2827ms
2024-12-10 16:03:54.260 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:03:54.267 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:03:54.270 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.8996ms
2024-12-10 16:03:54.275 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:03:54.285 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:03:54.286 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:03:54.287 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:03:54.290 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:03:54.292 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:03:54.296 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:03:54.298 +05:30 [INF] Deserializing the notes
2024-12-10 16:03:54.299 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:03:54.305 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.4257ms
2024-12-10 16:03:54.308 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:03:54.309 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.681ms
2024-12-10 16:04:04.562 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:04:04.566 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:04:04.569 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.2249ms
2024-12-10 16:04:04.585 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:04:04.588 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:04:04.589 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:04:04.591 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:04:04.595 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:04:04.597 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:04:04.599 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 16:04:04.600 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 16:04:04.601 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 16:04:04.617 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:04:04.619 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 16:04:04.633 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 16:04:04.639 +05:30 [INF] 15 notes retrieved for user with ID: 1
2024-12-10 16:04:04.640 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 16:04:04.642 +05:30 [INF] Notes retrieved successfully
2024-12-10 16:04:04.643 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:04:04.645 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 50.4716ms
2024-12-10 16:04:04.647 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:04:04.649 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 64.3145ms
2024-12-10 16:04:29.902 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:04:29.905 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:04:29.907 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1323ms
2024-12-10 16:04:29.910 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:04:29.915 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:04:29.916 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:04:29.917 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:04:29.920 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:04:29.922 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:04:29.925 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:04:29.926 +05:30 [INF] Deserializing the notes
2024-12-10 16:04:29.928 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:04:29.931 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.9245ms
2024-12-10 16:04:29.933 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:04:29.935 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.8751ms
2024-12-10 16:04:33.406 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:04:33.409 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:04:33.410 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:04:33.412 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:04:33.416 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:04:33.417 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:04:33.419 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:04:33.420 +05:30 [INF] Deserializing the notes
2024-12-10 16:04:33.421 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:04:33.426 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7739ms
2024-12-10 16:04:33.429 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:04:33.432 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.5318ms
2024-12-10 16:11:48.300 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:11:48.312 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:11:48.313 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.3037ms
2024-12-10 16:11:48.316 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:11:48.320 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:11:48.321 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:11:48.323 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:11:48.326 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:11:48.328 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:11:48.330 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 16:11:48.331 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 16:11:48.333 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 16:11:48.378 +05:30 [INF] Executed DbCommand (21ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:11:48.384 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 16:11:48.403 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 16:11:48.415 +05:30 [INF] 15 notes retrieved for user with ID: 1
2024-12-10 16:11:48.422 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 16:11:48.423 +05:30 [INF] Notes retrieved successfully
2024-12-10 16:11:48.425 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:11:48.428 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 103.1368ms
2024-12-10 16:11:48.431 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:11:48.432 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 115.8428ms
2024-12-10 16:12:32.264 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:12:32.276 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:12:32.277 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.3988ms
2024-12-10 16:12:32.280 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:12:32.284 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:12:32.286 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:12:32.287 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:12:32.290 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:12:32.293 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:12:32.295 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:12:32.296 +05:30 [INF] Deserializing the notes
2024-12-10 16:12:32.297 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:12:32.300 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.1705ms
2024-12-10 16:12:32.302 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:12:32.304 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.9798ms
2024-12-10 16:13:00.707 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:13:00.710 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:13:00.710 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8449ms
2024-12-10 16:13:00.736 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:13:00.740 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:13:00.741 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:13:00.742 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:13:00.747 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:13:00.749 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:13:00.750 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:13:00.752 +05:30 [INF] Deserializing the notes
2024-12-10 16:13:00.753 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:13:00.755 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.6016ms
2024-12-10 16:13:00.757 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:13:00.758 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.0846ms
2024-12-10 16:14:31.906 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:14:31.919 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:14:31.921 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.6487ms
2024-12-10 16:14:31.924 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:14:31.930 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:14:31.931 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:14:31.933 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:14:31.937 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:14:31.939 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:14:31.941 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:14:31.942 +05:30 [INF] Deserializing the notes
2024-12-10 16:14:31.944 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:14:31.947 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.1743ms
2024-12-10 16:14:31.950 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:14:31.951 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.9444ms
2024-12-10 16:16:13.271 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:16:13.274 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:16:13.276 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1223ms
2024-12-10 16:16:13.282 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:16:13.295 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:16:13.296 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:16:13.298 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:16:13.301 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:16:13.302 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:16:13.304 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:16:13.305 +05:30 [INF] Deserializing the notes
2024-12-10 16:16:13.307 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:16:13.309 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.5261ms
2024-12-10 16:16:13.310 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:16:13.312 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.4094ms
2024-12-10 16:18:16.084 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:18:16.087 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:18:16.088 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.5599ms
2024-12-10 16:18:16.091 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:18:16.097 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:18:16.098 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:18:16.099 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:18:16.102 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:18:16.104 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:18:16.106 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 16:18:16.107 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 16:18:16.108 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 16:18:16.142 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:18:16.146 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 16:18:16.161 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 16:18:16.165 +05:30 [INF] 15 notes retrieved for user with ID: 1
2024-12-10 16:18:16.166 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 16:18:16.167 +05:30 [INF] Notes retrieved successfully
2024-12-10 16:18:16.168 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:18:16.170 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 68.5121ms
2024-12-10 16:18:16.172 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:18:16.173 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 82.5557ms
2024-12-10 16:19:11.401 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:19:11.407 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:19:11.409 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.7061ms
2024-12-10 16:19:11.412 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:19:11.418 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:19:11.419 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:19:11.421 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:19:11.425 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:19:11.428 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:19:11.430 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:19:11.431 +05:30 [INF] Deserializing the notes
2024-12-10 16:19:11.432 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:19:11.435 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.5715ms
2024-12-10 16:19:11.438 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:19:11.440 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.4076ms
2024-12-10 16:20:46.627 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:20:46.639 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:20:46.640 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.584ms
2024-12-10 16:20:46.643 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 32
2024-12-10 16:20:46.647 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:20:46.648 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 16:20:46.650 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:20:46.658 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-10 16:20:46.662 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 5.3578ms
2024-12-10 16:20:46.664 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 16:20:46.668 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 400 null application/problem+json; charset=utf-8 25.2276ms
2024-12-10 16:20:58.984 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:20:58.995 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:20:58.998 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.7509ms
2024-12-10 16:20:59.002 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 45
2024-12-10 16:20:59.009 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:20:59.010 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 16:20:59.011 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:20:59.014 +05:30 [INF] Attempt to create a note
2024-12-10 16:20:59.031 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:20:59.048 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 16:20:59.057 +05:30 [INF] Created notes successfully
2024-12-10 16:20:59.058 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 16:20:59.062 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 48.8633ms
2024-12-10 16:20:59.064 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 16:20:59.066 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 63.8654ms
2024-12-10 16:21:01.783 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:21:01.786 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:21:01.787 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:21:01.788 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:21:01.791 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:21:01.793 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:21:01.796 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 16:21:01.799 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 16:21:01.801 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 16:21:01.806 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:21:01.812 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 16:21:01.828 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 16:21:01.833 +05:30 [INF] 16 notes retrieved for user with ID: 1
2024-12-10 16:21:01.835 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 16:21:01.837 +05:30 [INF] Notes retrieved successfully
2024-12-10 16:21:01.838 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:21:01.840 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 49.1552ms
2024-12-10 16:21:01.842 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:21:01.844 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 60.9019ms
2024-12-10 16:21:42.254 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:21:42.258 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:21:42.259 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.3035ms
2024-12-10 16:21:42.262 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:21:42.265 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:21:42.268 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:21:42.270 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:21:42.274 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:21:42.277 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:21:42.279 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:21:42.281 +05:30 [INF] Deserializing the notes
2024-12-10 16:21:42.282 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:21:42.285 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6097ms
2024-12-10 16:21:42.286 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:21:42.288 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.3514ms
2024-12-10 16:21:48.807 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:21:48.811 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:21:48.812 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3291ms
2024-12-10 16:21:48.815 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 43
2024-12-10 16:21:48.828 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:21:48.829 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 16:21:48.830 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:21:48.833 +05:30 [INF] Attempt to create a note
2024-12-10 16:21:48.845 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:21:48.857 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 16:21:48.865 +05:30 [INF] Created notes successfully
2024-12-10 16:21:48.867 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 16:21:48.871 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 39.0293ms
2024-12-10 16:21:48.875 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 16:21:48.878 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 63.1245ms
2024-12-10 16:22:21.864 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:22:21.866 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:22:21.867 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.156ms
2024-12-10 16:22:21.876 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:22:21.879 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:22:21.883 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:22:21.885 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:22:21.888 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:22:21.890 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:22:21.892 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 16:22:21.893 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 16:22:21.894 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 16:22:21.901 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:22:21.914 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 16:22:21.942 +05:30 [INF] Executed DbCommand (26ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 16:22:21.951 +05:30 [INF] 17 notes retrieved for user with ID: 1
2024-12-10 16:22:21.953 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 16:22:21.957 +05:30 [INF] Notes retrieved successfully
2024-12-10 16:22:21.958 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:22:21.959 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 72.0437ms
2024-12-10 16:22:21.961 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:22:21.963 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 86.6181ms
2024-12-10 16:22:23.890 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:22:23.894 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:22:23.895 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:22:23.897 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:22:23.899 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:22:23.901 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:22:23.902 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:22:23.904 +05:30 [INF] Deserializing the notes
2024-12-10 16:22:23.906 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:22:23.909 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.3643ms
2024-12-10 16:22:23.910 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:22:23.911 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.4621ms
2024-12-10 16:22:29.857 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:22:29.865 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:22:29.868 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.4424ms
2024-12-10 16:22:29.873 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 41
2024-12-10 16:22:29.880 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:22:29.881 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 16:22:29.883 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:22:29.888 +05:30 [INF] Attempt to create a note
2024-12-10 16:22:29.894 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:22:29.906 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 16:22:29.914 +05:30 [INF] Created notes successfully
2024-12-10 16:22:29.917 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 16:22:29.922 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 34.8872ms
2024-12-10 16:22:29.925 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 16:22:29.928 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 55.6115ms
2024-12-10 16:36:14.348 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1051 - null null
2024-12-10 16:36:14.371 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:14.373 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1051 - 204 null null 24.8435ms
2024-12-10 16:36:14.381 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1051 - application/json 4
2024-12-10 16:36:14.387 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:14.390 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 10:55:52', Current time (UTC): '10-12-2024 11:06:14'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 16:36:14.396 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 16:36:14.434 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 16:36:14.505 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 16:36:14.513 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 16:36:14.517 +05:30 [ERR] Connection id "0HN8OSUL0LVFO", Request id "0HN8OSUL0LVFO:000000B7": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 16:36:14.526 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1051 - 401 null application/json 146.4013ms
2024-12-10 16:36:20.382 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:36:20.385 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:20.386 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4092ms
2024-12-10 16:36:20.392 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:36:20.404 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:20.406 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 10:55:52', Current time (UTC): '10-12-2024 11:06:20'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 16:36:20.417 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 16:36:20.449 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 16:36:20.515 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 16:36:20.523 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 16:36:20.528 +05:30 [ERR] Connection id "0HN8OSUL0LVFO", Request id "0HN8OSUL0LVFO:000000BB": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 16:36:20.545 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 153.6523ms
2024-12-10 16:36:21.903 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:36:21.911 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:21.913 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 10:55:52', Current time (UTC): '10-12-2024 11:06:21'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 16:36:21.925 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 16:36:21.960 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 16:36:22.021 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 16:36:22.027 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 16:36:22.029 +05:30 [ERR] Connection id "0HN8OSUL0LVFO", Request id "0HN8OSUL0LVFO:000000BD": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 16:36:22.042 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 139.39ms
2024-12-10 16:36:24.118 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:36:24.122 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:24.124 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 10:55:52', Current time (UTC): '10-12-2024 11:06:24'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 16:36:24.128 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 16:36:24.155 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 16:36:24.210 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 16:36:24.216 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 16:36:24.218 +05:30 [ERR] Connection id "0HN8OSUL0LVFO", Request id "0HN8OSUL0LVFO:000000BF": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 16:36:24.226 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 107.6737ms
2024-12-10 16:36:40.703 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-10 16:36:40.712 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:40.719 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 16.2888ms
2024-12-10 16:36:40.723 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-10 16:36:40.736 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:40.738 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 16:36:40.739 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-10 16:36:40.764 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-10 16:36:40.766 +05:30 [INF] Checking if the user present
2024-12-10 16:36:40.770 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-10 16:36:40.807 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-10 16:36:40.815 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-10 16:36:40.819 +05:30 [INF] Verifying the password
2024-12-10 16:36:41.160 +05:30 [INF] Password is valid and token is generated
2024-12-10 16:36:41.165 +05:30 [INF] Login successful
2024-12-10 16:36:41.166 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 16:36:41.170 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 428.7737ms
2024-12-10 16:36:41.173 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 16:36:41.176 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 453.1519ms
2024-12-10 16:36:41.197 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:36:41.201 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:41.203 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.975ms
2024-12-10 16:36:41.206 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:36:41.214 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:41.216 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:36:41.217 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:36:41.221 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:36:41.224 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:36:41.227 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 16:36:41.228 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 16:36:41.231 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 16:36:41.238 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:36:41.248 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 16:36:41.261 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 16:36:41.266 +05:30 [INF] 18 notes retrieved for user with ID: 1
2024-12-10 16:36:41.270 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 16:36:41.274 +05:30 [INF] Notes retrieved successfully
2024-12-10 16:36:41.275 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:36:41.277 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 56.022ms
2024-12-10 16:36:41.278 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:36:41.279 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 73.3359ms
2024-12-10 16:36:43.611 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1045 - null null
2024-12-10 16:36:43.618 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:43.619 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1045 - 204 null null 8.6572ms
2024-12-10 16:36:43.622 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1045 - application/json 4
2024-12-10 16:36:43.632 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:43.634 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-10 16:36:43.636 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:36:43.641 +05:30 [INF] Received noteId: 1045, isArchive: True
2024-12-10 16:36:43.644 +05:30 [INF] Received request to toggle archive status for note with ID: 1045
2024-12-10 16:36:43.646 +05:30 [INF] Initiating toggle of archive status for note with ID: 1045 for user ID: 1
2024-12-10 16:36:43.649 +05:30 [INF] Received isArchive value: True
2024-12-10 16:36:43.654 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:36:43.662 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:36:43.680 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 16:36:43.685 +05:30 [INF] Note with ID: 1045 archive status updated to true
2024-12-10 16:36:43.689 +05:30 [INF] Successfully toggled archive status for note with ID: 1045
2024-12-10 16:36:43.691 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:36:43.693 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 52.1526ms
2024-12-10 16:36:43.695 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-10 16:36:43.696 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1045 - 200 null application/json; charset=utf-8 74.3444ms
2024-12-10 16:36:46.660 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:36:46.664 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:46.665 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.5187ms
2024-12-10 16:36:46.669 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:36:46.677 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:46.680 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:36:46.684 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:36:46.689 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:36:46.692 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:36:46.694 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 16:36:46.699 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 16:36:46.702 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 16:36:46.709 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:36:46.711 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 16:36:46.714 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 16:36:46.721 +05:30 [INF] 18 notes retrieved for user with ID: 1
2024-12-10 16:36:46.722 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 16:36:46.724 +05:30 [INF] Notes retrieved successfully
2024-12-10 16:36:46.725 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:36:46.728 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 38.9181ms
2024-12-10 16:36:46.730 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:36:46.731 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 62.4133ms
2024-12-10 16:36:50.633 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:36:50.637 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:50.639 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:36:50.641 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:36:50.647 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:36:50.651 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:36:50.654 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:36:50.657 +05:30 [INF] Deserializing the notes
2024-12-10 16:36:50.659 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:36:50.661 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.9016ms
2024-12-10 16:36:50.662 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:36:50.664 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.3339ms
2024-12-10 16:36:55.258 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1046 - null null
2024-12-10 16:36:55.260 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:55.261 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1046 - 204 null null 3.5734ms
2024-12-10 16:36:55.264 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1046 - application/json 65
2024-12-10 16:36:55.270 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:36:55.273 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 16:36:55.276 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:36:55.280 +05:30 [INF] Received note update: {"Title":"htyhg","Description":"jhm","Color":"#D4E4ED"}
2024-12-10 16:36:55.282 +05:30 [INF] Updating note with ID: 1046
2024-12-10 16:36:55.284 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1046
2024-12-10 16:36:55.286 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 16:36:55.290 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:36:55.304 +05:30 [INF] Retrieving note with ID: 1046
2024-12-10 16:36:55.308 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:36:55.315 +05:30 [INF] User with ID: 1 has permission to update note ID: 1046
2024-12-10 16:36:55.321 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 16:36:55.329 +05:30 [INF] Successfully updated note with ID: 1046
2024-12-10 16:36:55.332 +05:30 [INF] Retrieved notes successfully
2024-12-10 16:36:55.335 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 16:36:55.340 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 60.5866ms
2024-12-10 16:36:55.343 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-10 16:36:55.345 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1046 - 200 null application/json; charset=utf-8 80.9987ms
2024-12-10 16:37:00.820 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1046 - null null
2024-12-10 16:37:00.824 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:37:00.826 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1046 - 204 null null 6.4978ms
2024-12-10 16:37:00.829 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1046 - application/json 4
2024-12-10 16:37:00.839 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:37:00.840 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 16:37:00.843 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:37:00.855 +05:30 [INF] Received request to toggle trash status for note with ID: 1046
2024-12-10 16:37:00.857 +05:30 [INF] Initiating toggle of trash status for note with ID: 1046 for user ID: 1
2024-12-10 16:37:00.862 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:37:00.871 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:37:00.884 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 16:37:00.892 +05:30 [INF] Note with ID: 1046 trash status updated to true
2024-12-10 16:37:00.896 +05:30 [INF] Successfully toggled trash status for note with ID: 1046
2024-12-10 16:37:00.899 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:37:00.900 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 46.1509ms
2024-12-10 16:37:00.902 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 16:37:00.905 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1046 - 200 null application/json; charset=utf-8 76.2528ms
2024-12-10 16:37:03.874 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:37:03.878 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:37:03.883 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.7091ms
2024-12-10 16:37:03.886 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:37:03.901 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:37:03.904 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:37:03.906 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:37:03.910 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:37:03.912 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:37:03.914 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 16:37:03.916 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 16:37:03.919 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 16:37:03.924 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:37:03.931 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 16:37:03.933 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 16:37:03.936 +05:30 [INF] 18 notes retrieved for user with ID: 1
2024-12-10 16:37:03.937 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 16:37:03.939 +05:30 [INF] Notes retrieved successfully
2024-12-10 16:37:03.939 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:37:03.941 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 31.5142ms
2024-12-10 16:37:03.943 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:37:03.944 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 58.4283ms
2024-12-10 16:37:08.227 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1034 - null null
2024-12-10 16:37:08.233 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:37:08.248 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1034 - 204 null null 21.0551ms
2024-12-10 16:37:08.256 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1034 - application/json 5
2024-12-10 16:37:08.262 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:37:08.263 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 16:37:08.264 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:37:08.268 +05:30 [INF] Received request to toggle trash status for note with ID: 1034
2024-12-10 16:37:08.269 +05:30 [INF] Initiating toggle of trash status for note with ID: 1034 for user ID: 1
2024-12-10 16:37:08.275 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:37:08.282 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:37:08.287 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 16:37:08.291 +05:30 [INF] Note with ID: 1034 trash status updated to false
2024-12-10 16:37:08.293 +05:30 [INF] Successfully toggled trash status for note with ID: 1034
2024-12-10 16:37:08.294 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:37:08.297 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 30.0097ms
2024-12-10 16:37:08.299 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 16:37:08.300 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1034 - 200 null application/json; charset=utf-8 43.4429ms
2024-12-10 16:37:11.006 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:37:11.011 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:37:11.012 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.4751ms
2024-12-10 16:37:11.017 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:37:11.034 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:37:11.036 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:37:11.039 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:37:11.046 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:37:11.050 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:37:11.052 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 16:37:11.054 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 16:37:11.056 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 16:37:11.065 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:37:11.070 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 16:37:11.082 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 16:37:11.087 +05:30 [INF] 18 notes retrieved for user with ID: 1
2024-12-10 16:37:11.090 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 16:37:11.092 +05:30 [INF] Notes retrieved successfully
2024-12-10 16:37:11.093 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:37:11.095 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 49.7953ms
2024-12-10 16:37:11.097 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:37:11.100 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 83.6079ms
2024-12-10 16:44:29.568 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:44:29.573 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:29.574 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.1103ms
2024-12-10 16:44:29.577 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:44:29.586 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:29.588 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:44:29.594 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:44:29.598 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:44:29.602 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:44:29.604 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 16:44:29.605 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 16:44:29.606 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 16:44:29.633 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:44:29.635 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 16:44:29.647 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 16:44:29.653 +05:30 [INF] 18 notes retrieved for user with ID: 1
2024-12-10 16:44:29.657 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 16:44:29.658 +05:30 [INF] Notes retrieved successfully
2024-12-10 16:44:29.659 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:44:29.661 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 63.7159ms
2024-12-10 16:44:29.665 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:44:29.673 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 95.8141ms
2024-12-10 16:44:32.587 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - null null
2024-12-10 16:44:32.597 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:32.598 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - 204 null null 11.5623ms
2024-12-10 16:44:32.601 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1035 - null null
2024-12-10 16:44:32.610 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:32.611 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:32.623 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:44:32.633 +05:30 [INF] Received request to delete note with ID: 1035
2024-12-10 16:44:32.636 +05:30 [INF] Initiating deletion of note with ID: 1035 for user ID: 1
2024-12-10 16:44:32.645 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:44:32.654 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:44:32.706 +05:30 [INF] Executed DbCommand (29ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-10 16:44:32.714 +05:30 [INF] Deleted note with 1035 successfully
2024-12-10 16:44:32.716 +05:30 [INF] Successfully deleted note with ID: 1035
2024-12-10 16:44:32.717 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:44:32.719 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 87.1863ms
2024-12-10 16:44:32.722 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:32.723 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1035 - 200 null application/json; charset=utf-8 121.9351ms
2024-12-10 16:44:33.887 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1036 - null null
2024-12-10 16:44:33.895 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:33.896 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1036 - 204 null null 9.7522ms
2024-12-10 16:44:33.899 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1036 - null null
2024-12-10 16:44:33.905 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:33.907 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:33.908 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:44:33.917 +05:30 [INF] Received request to delete note with ID: 1036
2024-12-10 16:44:33.919 +05:30 [INF] Initiating deletion of note with ID: 1036 for user ID: 1
2024-12-10 16:44:33.928 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:44:33.932 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:44:33.938 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-10 16:44:33.941 +05:30 [INF] Deleted note with 1036 successfully
2024-12-10 16:44:33.945 +05:30 [INF] Successfully deleted note with ID: 1036
2024-12-10 16:44:33.947 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:44:33.949 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 32.2479ms
2024-12-10 16:44:33.951 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:33.952 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1036 - 200 null application/json; charset=utf-8 53.2821ms
2024-12-10 16:44:34.602 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1038 - null null
2024-12-10 16:44:34.610 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:34.611 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1038 - 204 null null 9.4516ms
2024-12-10 16:44:34.614 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1038 - null null
2024-12-10 16:44:34.619 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:34.621 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:34.622 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:44:34.625 +05:30 [INF] Received request to delete note with ID: 1038
2024-12-10 16:44:34.627 +05:30 [INF] Initiating deletion of note with ID: 1038 for user ID: 1
2024-12-10 16:44:34.640 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:44:34.655 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:44:34.666 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-10 16:44:34.673 +05:30 [INF] Deleted note with 1038 successfully
2024-12-10 16:44:34.674 +05:30 [INF] Successfully deleted note with ID: 1038
2024-12-10 16:44:34.675 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:44:34.677 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 52.564ms
2024-12-10 16:44:34.680 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:34.681 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1038 - 200 null application/json; charset=utf-8 66.7372ms
2024-12-10 16:44:35.288 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1039 - null null
2024-12-10 16:44:35.292 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:35.294 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1039 - 204 null null 6.4683ms
2024-12-10 16:44:35.296 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1039 - null null
2024-12-10 16:44:35.302 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:35.303 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:35.305 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:44:35.307 +05:30 [INF] Received request to delete note with ID: 1039
2024-12-10 16:44:35.308 +05:30 [INF] Initiating deletion of note with ID: 1039 for user ID: 1
2024-12-10 16:44:35.313 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:44:35.326 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:44:35.335 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-10 16:44:35.341 +05:30 [INF] Deleted note with 1039 successfully
2024-12-10 16:44:35.343 +05:30 [INF] Successfully deleted note with ID: 1039
2024-12-10 16:44:35.344 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:44:35.345 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 38.3192ms
2024-12-10 16:44:35.347 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:35.349 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1039 - 200 null application/json; charset=utf-8 52.8197ms
2024-12-10 16:44:36.163 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1040 - null null
2024-12-10 16:44:36.170 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:36.171 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1040 - 204 null null 8.7885ms
2024-12-10 16:44:36.174 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1040 - null null
2024-12-10 16:44:36.181 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:36.184 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:36.186 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:44:36.191 +05:30 [INF] Received request to delete note with ID: 1040
2024-12-10 16:44:36.193 +05:30 [INF] Initiating deletion of note with ID: 1040 for user ID: 1
2024-12-10 16:44:36.201 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:44:36.208 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:44:36.214 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-10 16:44:36.218 +05:30 [INF] Deleted note with 1040 successfully
2024-12-10 16:44:36.220 +05:30 [INF] Successfully deleted note with ID: 1040
2024-12-10 16:44:36.221 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:44:36.222 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 31.4847ms
2024-12-10 16:44:36.227 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:36.228 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1040 - 200 null application/json; charset=utf-8 54.7441ms
2024-12-10 16:44:36.764 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1041 - null null
2024-12-10 16:44:36.768 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:36.770 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1041 - 204 null null 5.9215ms
2024-12-10 16:44:36.772 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1041 - null null
2024-12-10 16:44:36.776 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:36.777 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:36.779 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:44:36.781 +05:30 [INF] Received request to delete note with ID: 1041
2024-12-10 16:44:36.782 +05:30 [INF] Initiating deletion of note with ID: 1041 for user ID: 1
2024-12-10 16:44:36.788 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:44:36.796 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:44:36.801 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-10 16:44:36.807 +05:30 [INF] Deleted note with 1041 successfully
2024-12-10 16:44:36.810 +05:30 [INF] Successfully deleted note with ID: 1041
2024-12-10 16:44:36.811 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:44:36.812 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 31.4835ms
2024-12-10 16:44:36.814 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:36.815 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1041 - 200 null application/json; charset=utf-8 43.0344ms
2024-12-10 16:44:37.301 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1042 - null null
2024-12-10 16:44:37.306 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:37.307 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1042 - 204 null null 6.7001ms
2024-12-10 16:44:37.310 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1042 - null null
2024-12-10 16:44:37.314 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:37.315 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:37.317 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:44:37.323 +05:30 [INF] Received request to delete note with ID: 1042
2024-12-10 16:44:37.324 +05:30 [INF] Initiating deletion of note with ID: 1042 for user ID: 1
2024-12-10 16:44:37.330 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:44:37.336 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:44:37.343 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-10 16:44:37.346 +05:30 [INF] Deleted note with 1042 successfully
2024-12-10 16:44:37.348 +05:30 [INF] Successfully deleted note with ID: 1042
2024-12-10 16:44:37.349 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:44:37.351 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 28.5908ms
2024-12-10 16:44:37.357 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:37.360 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1042 - 200 null application/json; charset=utf-8 50.2611ms
2024-12-10 16:44:37.669 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1043 - null null
2024-12-10 16:44:37.679 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:37.682 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1043 - 204 null null 13.5078ms
2024-12-10 16:44:37.685 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1043 - null null
2024-12-10 16:44:37.695 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:37.700 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:37.703 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:44:37.708 +05:30 [INF] Received request to delete note with ID: 1043
2024-12-10 16:44:37.709 +05:30 [INF] Initiating deletion of note with ID: 1043 for user ID: 1
2024-12-10 16:44:37.715 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:44:37.724 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:44:37.734 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-10 16:44:37.740 +05:30 [INF] Deleted note with 1043 successfully
2024-12-10 16:44:37.742 +05:30 [INF] Successfully deleted note with ID: 1043
2024-12-10 16:44:37.744 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:44:37.745 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 37.2587ms
2024-12-10 16:44:37.747 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:37.748 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1043 - 200 null application/json; charset=utf-8 63.1735ms
2024-12-10 16:44:38.207 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1044 - null null
2024-12-10 16:44:38.210 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:38.211 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1044 - 204 null null 4.7307ms
2024-12-10 16:44:38.214 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1044 - null null
2024-12-10 16:44:38.218 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:38.219 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:38.220 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:44:38.225 +05:30 [INF] Received request to delete note with ID: 1044
2024-12-10 16:44:38.229 +05:30 [INF] Initiating deletion of note with ID: 1044 for user ID: 1
2024-12-10 16:44:38.235 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:44:38.240 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:44:38.246 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-10 16:44:38.249 +05:30 [INF] Deleted note with 1044 successfully
2024-12-10 16:44:38.254 +05:30 [INF] Successfully deleted note with ID: 1044
2024-12-10 16:44:38.256 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:44:38.257 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 32.9814ms
2024-12-10 16:44:38.259 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:38.260 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1044 - 200 null application/json; charset=utf-8 46.4755ms
2024-12-10 16:44:38.818 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1046 - null null
2024-12-10 16:44:38.823 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:38.825 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1046 - 204 null null 6.9987ms
2024-12-10 16:44:38.828 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1046 - null null
2024-12-10 16:44:38.833 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:38.835 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:38.838 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:44:38.843 +05:30 [INF] Received request to delete note with ID: 1046
2024-12-10 16:44:38.846 +05:30 [INF] Initiating deletion of note with ID: 1046 for user ID: 1
2024-12-10 16:44:38.855 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:44:38.862 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 16:44:38.867 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-10 16:44:38.872 +05:30 [INF] Deleted note with 1046 successfully
2024-12-10 16:44:38.874 +05:30 [INF] Successfully deleted note with ID: 1046
2024-12-10 16:44:38.876 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:44:38.878 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 35.1204ms
2024-12-10 16:44:38.879 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-10 16:44:38.881 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1046 - 200 null application/json; charset=utf-8 52.9524ms
2024-12-10 16:44:41.248 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:44:41.252 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:41.254 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.366ms
2024-12-10 16:44:41.257 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:44:41.270 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:44:41.274 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:44:41.276 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:44:41.281 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:44:41.285 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:44:41.287 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 16:44:41.287 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 16:44:41.288 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 16:44:41.291 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:44:41.294 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 16:44:41.297 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 16:44:41.301 +05:30 [INF] 8 notes retrieved for user with ID: 1
2024-12-10 16:44:41.302 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 16:44:41.303 +05:30 [INF] Notes retrieved successfully
2024-12-10 16:44:41.305 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:44:41.306 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.7035ms
2024-12-10 16:44:41.308 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:44:41.310 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 53.4855ms
2024-12-10 16:51:49.299 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:51:49.303 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:51:49.304 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.9145ms
2024-12-10 16:51:49.308 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:51:49.313 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:51:49.314 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:51:49.316 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:51:49.320 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:51:49.322 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:51:49.325 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 16:51:49.326 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 16:51:49.327 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 16:51:49.337 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:51:49.341 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 16:51:49.354 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 16:51:49.358 +05:30 [INF] 8 notes retrieved for user with ID: 1
2024-12-10 16:51:49.360 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 16:51:49.361 +05:30 [INF] Notes retrieved successfully
2024-12-10 16:51:49.362 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:51:49.364 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 43.8796ms
2024-12-10 16:51:49.366 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:51:49.367 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 60.1983ms
2024-12-10 16:51:55.962 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:51:55.966 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:51:55.966 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.6197ms
2024-12-10 16:51:55.970 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 16:51:55.974 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:51:55.975 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:51:55.977 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:51:55.980 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 16:51:55.983 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 16:51:55.984 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 16:51:55.985 +05:30 [INF] Deserializing the notes
2024-12-10 16:51:55.987 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 16:51:55.988 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.6647ms
2024-12-10 16:51:55.990 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 16:51:55.992 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.1427ms
2024-12-10 16:52:23.885 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:52:23.898 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:52:23.901 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.0745ms
2024-12-10 16:52:23.905 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 38
2024-12-10 16:52:23.912 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:52:23.917 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 16:52:23.921 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:52:23.927 +05:30 [INF] Attempt to create a note
2024-12-10 16:52:23.937 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 16:52:23.947 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 16:52:23.951 +05:30 [INF] Created notes successfully
2024-12-10 16:52:23.953 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 16:52:23.954 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 28.5839ms
2024-12-10 16:52:23.959 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 16:52:23.967 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 63.3635ms
2024-12-10 16:52:39.158 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 16:52:39.162 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:52:39.165 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.233ms
2024-12-10 16:52:39.167 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 29
2024-12-10 16:52:39.171 +05:30 [INF] CORS policy execution successful.
2024-12-10 16:52:39.172 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 16:52:39.175 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 16:52:39.178 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-10 16:52:39.180 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 2.1576ms
2024-12-10 16:52:39.181 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 16:52:39.182 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 400 null application/problem+json; charset=utf-8 15.4321ms
2024-12-10 17:10:46.146 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:10:46.149 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:10:46.152 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7302ms
2024-12-10 17:10:46.156 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:10:46.162 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:10:46.163 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:10:46.165 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:10:46.168 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:10:46.170 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:10:46.174 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 17:10:46.176 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 17:10:46.178 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 17:10:46.217 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 17:10:46.221 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 17:10:46.239 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 17:10:46.245 +05:30 [INF] 9 notes retrieved for user with ID: 1
2024-12-10 17:10:46.246 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 17:10:46.248 +05:30 [INF] Notes retrieved successfully
2024-12-10 17:10:46.249 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:10:46.251 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 83.6837ms
2024-12-10 17:10:46.253 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:10:46.254 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 98.8529ms
2024-12-10 17:10:51.860 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:10:51.863 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:10:51.864 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.703ms
2024-12-10 17:10:51.867 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:10:51.873 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:10:51.874 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:10:51.876 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:10:51.881 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:10:51.883 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:10:51.885 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:10:51.887 +05:30 [INF] Deserializing the notes
2024-12-10 17:10:51.888 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:10:51.891 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7326ms
2024-12-10 17:10:51.893 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:10:51.895 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.0074ms
2024-12-10 17:11:20.393 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:11:20.399 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:11:20.400 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.5268ms
2024-12-10 17:11:20.403 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:11:20.410 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:11:20.412 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:11:20.414 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:11:20.417 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:11:20.420 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:11:20.422 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:11:20.424 +05:30 [INF] Deserializing the notes
2024-12-10 17:11:20.425 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:11:20.428 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.9409ms
2024-12-10 17:11:20.430 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:11:20.432 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.5667ms
2024-12-10 17:11:30.101 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:11:30.104 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:11:30.104 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1834ms
2024-12-10 17:11:30.107 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:11:30.111 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:11:30.112 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:11:30.113 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:11:30.116 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:11:30.118 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:11:30.119 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:11:30.120 +05:30 [INF] Deserializing the notes
2024-12-10 17:11:30.122 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:11:30.125 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5533ms
2024-12-10 17:11:30.127 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:11:30.129 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.7668ms
2024-12-10 17:14:10.855 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:14:10.865 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:14:10.866 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.8227ms
2024-12-10 17:14:10.869 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:14:10.876 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:14:10.878 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:14:10.880 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:14:10.882 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:14:10.884 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:14:10.886 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:14:10.887 +05:30 [INF] Deserializing the notes
2024-12-10 17:14:10.889 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:14:10.891 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5662ms
2024-12-10 17:14:10.893 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:14:10.895 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.382ms
2024-12-10 17:14:11.491 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:14:11.498 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:14:11.499 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:14:11.500 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:14:11.503 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:14:11.509 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:14:11.510 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:14:11.511 +05:30 [INF] Deserializing the notes
2024-12-10 17:14:11.512 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:14:11.513 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.0131ms
2024-12-10 17:14:11.516 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:14:11.519 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.6121ms
2024-12-10 17:15:25.958 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:15:25.974 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:15:25.976 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 19.0013ms
2024-12-10 17:15:25.986 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:15:25.992 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:15:25.995 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:15:25.998 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:15:26.005 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:15:26.009 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:15:26.012 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:15:26.013 +05:30 [INF] Deserializing the notes
2024-12-10 17:15:26.016 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:15:26.020 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.9117ms
2024-12-10 17:15:26.024 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:15:26.026 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.9749ms
2024-12-10 17:15:48.623 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:15:48.629 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:15:48.630 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.276ms
2024-12-10 17:15:48.633 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:15:48.643 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:15:48.645 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:15:48.648 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:15:48.651 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:15:48.655 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:15:48.658 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 17:15:48.660 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 17:15:48.662 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 17:15:48.684 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 17:15:48.690 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 17:15:48.706 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 17:15:48.713 +05:30 [INF] 9 notes retrieved for user with ID: 1
2024-12-10 17:15:48.715 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 17:15:48.717 +05:30 [INF] Notes retrieved successfully
2024-12-10 17:15:48.718 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:15:48.720 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 68.2268ms
2024-12-10 17:15:48.723 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:15:48.726 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 92.9606ms
2024-12-10 17:15:53.365 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - null null
2024-12-10 17:15:53.370 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:15:53.372 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - 204 null null 7.5014ms
2024-12-10 17:15:53.375 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - application/json 4
2024-12-10 17:15:53.391 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:15:53.394 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-10 17:15:53.398 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:15:53.404 +05:30 [INF] Received noteId: 1034, isArchive: True
2024-12-10 17:15:53.406 +05:30 [INF] Received request to toggle archive status for note with ID: 1034
2024-12-10 17:15:53.406 +05:30 [INF] Initiating toggle of archive status for note with ID: 1034 for user ID: 1
2024-12-10 17:15:53.408 +05:30 [INF] Received isArchive value: True
2024-12-10 17:15:53.411 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 17:15:53.418 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 17:15:53.429 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 17:15:53.436 +05:30 [INF] Note with ID: 1034 archive status updated to true
2024-12-10 17:15:53.438 +05:30 [INF] Successfully toggled archive status for note with ID: 1034
2024-12-10 17:15:53.439 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:15:53.441 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 38.9104ms
2024-12-10 17:15:53.452 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-10 17:15:53.454 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - 200 null application/json; charset=utf-8 78.4615ms
2024-12-10 17:15:54.712 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1050 - null null
2024-12-10 17:15:54.716 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:15:54.718 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1050 - 204 null null 6.476ms
2024-12-10 17:15:54.722 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1050 - application/json 4
2024-12-10 17:15:54.733 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:15:54.734 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-10 17:15:54.736 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:15:54.739 +05:30 [INF] Received noteId: 1050, isArchive: True
2024-12-10 17:15:54.740 +05:30 [INF] Received request to toggle archive status for note with ID: 1050
2024-12-10 17:15:54.742 +05:30 [INF] Initiating toggle of archive status for note with ID: 1050 for user ID: 1
2024-12-10 17:15:54.744 +05:30 [INF] Received isArchive value: True
2024-12-10 17:15:54.748 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 17:15:54.755 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 17:15:54.761 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 17:15:54.766 +05:30 [INF] Note with ID: 1050 archive status updated to true
2024-12-10 17:15:54.767 +05:30 [INF] Successfully toggled archive status for note with ID: 1050
2024-12-10 17:15:54.769 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:15:54.773 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 34.2064ms
2024-12-10 17:15:54.777 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-10 17:15:54.786 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1050 - 200 null application/json; charset=utf-8 64.6879ms
2024-12-10 17:15:57.745 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:15:57.748 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:15:57.751 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.3897ms
2024-12-10 17:15:57.756 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:15:57.762 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:15:57.765 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:15:57.767 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:15:57.775 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:15:57.780 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:15:57.783 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 17:15:57.784 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 17:15:57.785 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 17:15:57.787 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 17:15:57.790 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 17:15:57.793 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 17:15:57.796 +05:30 [INF] 9 notes retrieved for user with ID: 1
2024-12-10 17:15:57.797 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 17:15:57.799 +05:30 [INF] Notes retrieved successfully
2024-12-10 17:15:57.800 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:15:57.802 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 26.6779ms
2024-12-10 17:15:57.804 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:15:57.807 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.5141ms
2024-12-10 17:16:57.098 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:16:57.109 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:16:57.110 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.6062ms
2024-12-10 17:16:57.123 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:16:57.127 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:16:57.129 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:16:57.131 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:16:57.136 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:16:57.139 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:16:57.142 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:16:57.143 +05:30 [INF] Deserializing the notes
2024-12-10 17:16:57.145 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:16:57.147 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.4293ms
2024-12-10 17:16:57.149 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:16:57.150 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:16:57.154 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:16:57.156 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.0213ms
2024-12-10 17:16:57.157 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:16:57.163 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:16:57.166 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:16:57.169 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:16:57.171 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:16:57.173 +05:30 [INF] Deserializing the notes
2024-12-10 17:16:57.174 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:16:57.175 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7675ms
2024-12-10 17:16:57.177 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:16:57.179 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.4628ms
2024-12-10 17:17:00.904 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:17:00.907 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:17:00.910 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:17:00.914 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:17:00.923 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:17:00.927 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:17:00.930 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:17:00.932 +05:30 [INF] Deserializing the notes
2024-12-10 17:17:00.934 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:17:00.937 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.3206ms
2024-12-10 17:17:00.940 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:17:00.943 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.3729ms
2024-12-10 17:17:10.947 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:17:10.950 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:17:10.951 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.151ms
2024-12-10 17:17:10.954 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:17:10.959 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:17:10.961 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:17:10.963 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:17:10.966 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:17:10.970 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:17:10.972 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:17:10.973 +05:30 [INF] Deserializing the notes
2024-12-10 17:17:10.974 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:17:10.978 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.8009ms
2024-12-10 17:17:10.981 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:17:10.982 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.2904ms
2024-12-10 17:19:55.707 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:19:55.720 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:19:55.721 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.8826ms
2024-12-10 17:19:55.725 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:19:55.732 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:19:55.735 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:19:55.737 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:19:55.741 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:19:55.743 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:19:55.745 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:19:55.746 +05:30 [INF] Deserializing the notes
2024-12-10 17:19:55.748 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:19:55.750 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.3967ms
2024-12-10 17:19:55.753 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:19:55.755 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.1178ms
2024-12-10 17:21:19.748 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:21:19.754 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:21:19.756 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.0894ms
2024-12-10 17:21:19.759 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:21:19.765 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:21:19.766 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:21:19.768 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:21:19.772 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:21:19.775 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:21:19.778 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 17:21:19.781 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 17:21:19.782 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 17:21:19.830 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 17:21:19.834 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 17:21:19.849 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 17:21:19.854 +05:30 [INF] 9 notes retrieved for user with ID: 1
2024-12-10 17:21:19.855 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 17:21:19.857 +05:30 [INF] Notes retrieved successfully
2024-12-10 17:21:19.859 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:21:19.861 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 89.2943ms
2024-12-10 17:21:19.863 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:21:19.865 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 106.1988ms
2024-12-10 17:22:45.249 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:22:45.255 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:22:45.256 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.3858ms
2024-12-10 17:22:45.259 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:22:45.269 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:22:45.271 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:22:45.272 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:22:45.277 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:22:45.280 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:22:45.283 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:22:45.285 +05:30 [INF] Deserializing the notes
2024-12-10 17:22:45.287 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:22:45.292 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.2036ms
2024-12-10 17:22:45.295 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:22:45.297 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 38.2581ms
2024-12-10 17:23:34.913 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:23:34.916 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:23:34.917 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2214ms
2024-12-10 17:23:34.921 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:23:34.932 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:23:34.934 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:23:34.936 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:23:34.939 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:23:34.943 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:23:34.945 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:23:34.947 +05:30 [INF] Deserializing the notes
2024-12-10 17:23:34.950 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:23:34.953 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.37ms
2024-12-10 17:23:34.956 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:23:34.960 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.4767ms
2024-12-10 17:23:37.450 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:23:37.453 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:23:37.455 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:23:37.457 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:23:37.462 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:23:37.464 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:23:37.467 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:23:37.469 +05:30 [INF] Deserializing the notes
2024-12-10 17:23:37.471 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:23:37.474 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.8927ms
2024-12-10 17:23:37.477 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:23:37.480 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.0839ms
2024-12-10 17:23:43.691 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:23:43.699 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:23:43.702 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.9019ms
2024-12-10 17:23:43.705 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:23:43.711 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:23:43.713 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:23:43.714 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:23:43.716 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:23:43.718 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:23:43.721 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:23:43.723 +05:30 [INF] Deserializing the notes
2024-12-10 17:23:43.726 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:23:43.728 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.7195ms
2024-12-10 17:23:43.731 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:23:43.732 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.9829ms
2024-12-10 17:23:44.392 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:23:44.396 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:23:44.398 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:23:44.399 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:23:44.403 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:23:44.406 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:23:44.408 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:23:44.410 +05:30 [INF] Deserializing the notes
2024-12-10 17:23:44.412 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:23:44.416 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.1681ms
2024-12-10 17:23:44.418 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:23:44.420 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.142ms
2024-12-10 17:24:47.392 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:24:47.406 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:24:47.410 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 18.2859ms
2024-12-10 17:24:47.413 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:24:47.421 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:24:47.425 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:24:47.428 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:24:47.432 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:24:47.435 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:24:47.439 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:24:47.440 +05:30 [INF] Deserializing the notes
2024-12-10 17:24:47.444 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:24:47.449 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.0753ms
2024-12-10 17:24:47.451 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:24:47.454 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.9436ms
2024-12-10 17:25:07.141 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:25:07.145 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:25:07.156 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.6602ms
2024-12-10 17:25:07.159 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:25:07.163 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:25:07.165 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:25:07.166 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:25:07.177 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:25:07.179 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:25:07.180 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:25:07.182 +05:30 [INF] Deserializing the notes
2024-12-10 17:25:07.183 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:25:07.186 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.9313ms
2024-12-10 17:25:07.189 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:25:07.190 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.4892ms
2024-12-10 17:25:21.297 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:25:21.303 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:25:21.304 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.2446ms
2024-12-10 17:25:21.307 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:25:21.316 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:25:21.318 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:25:21.320 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:25:21.324 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:25:21.327 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:25:21.329 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:25:21.331 +05:30 [INF] Deserializing the notes
2024-12-10 17:25:21.333 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:25:21.335 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.9325ms
2024-12-10 17:25:21.339 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:25:21.341 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.6435ms
2024-12-10 17:25:23.302 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:25:23.308 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:25:23.309 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:25:23.310 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:25:23.315 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:25:23.317 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:25:23.320 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:25:23.322 +05:30 [INF] Deserializing the notes
2024-12-10 17:25:23.324 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:25:23.327 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.0434ms
2024-12-10 17:25:23.329 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:25:23.332 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.6215ms
2024-12-10 17:25:47.530 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:25:47.540 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:25:47.543 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.2656ms
2024-12-10 17:25:47.546 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:25:47.555 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:25:47.557 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:25:47.560 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:25:47.569 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:25:47.571 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:25:47.575 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:25:47.579 +05:30 [INF] Deserializing the notes
2024-12-10 17:25:47.581 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:25:47.585 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.8161ms
2024-12-10 17:25:47.587 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:25:47.590 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.675ms
2024-12-10 17:26:13.182 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:26:13.188 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:26:13.190 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6031ms
2024-12-10 17:26:13.193 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:26:13.201 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:26:13.204 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:26:13.206 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:26:13.209 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:26:13.213 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:26:13.215 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:26:13.216 +05:30 [INF] Deserializing the notes
2024-12-10 17:26:13.219 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:26:13.224 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.188ms
2024-12-10 17:26:13.227 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:26:13.230 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.6494ms
2024-12-10 17:26:30.126 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:26:30.129 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:26:30.130 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1525ms
2024-12-10 17:26:30.133 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:26:30.136 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:26:30.137 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:26:30.139 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:26:30.141 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:26:30.143 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:26:30.144 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 17:26:30.146 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 17:26:30.147 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 17:26:30.180 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 17:26:30.184 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 17:26:30.198 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 17:26:30.202 +05:30 [INF] 9 notes retrieved for user with ID: 1
2024-12-10 17:26:30.203 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 17:26:30.205 +05:30 [INF] Notes retrieved successfully
2024-12-10 17:26:30.206 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:26:30.208 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 67.4889ms
2024-12-10 17:26:30.210 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:26:30.212 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 79.2985ms
2024-12-10 17:26:35.452 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:26:35.456 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:26:35.458 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2946ms
2024-12-10 17:26:35.461 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:26:35.468 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:26:35.470 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:26:35.471 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:26:35.475 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:26:35.477 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:26:35.479 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:26:35.480 +05:30 [INF] Deserializing the notes
2024-12-10 17:26:35.481 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:26:35.483 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.0268ms
2024-12-10 17:26:35.485 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:26:35.486 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.786ms
2024-12-10 17:26:37.779 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:26:37.787 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:26:37.789 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:26:37.791 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:26:37.796 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:26:37.798 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:26:37.802 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:26:37.804 +05:30 [INF] Deserializing the notes
2024-12-10 17:26:37.806 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:26:37.809 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.8093ms
2024-12-10 17:26:37.812 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:26:37.815 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.6693ms
2024-12-10 17:27:29.578 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:27:29.587 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:27:29.588 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.3706ms
2024-12-10 17:27:29.593 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:27:29.607 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:27:29.608 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:27:29.609 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:27:29.613 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:27:29.616 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:27:29.623 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:27:29.625 +05:30 [INF] Deserializing the notes
2024-12-10 17:27:29.626 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:27:29.631 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.0359ms
2024-12-10 17:27:29.633 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:27:29.636 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.2024ms
2024-12-10 17:27:35.364 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:27:35.369 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:27:35.373 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.4399ms
2024-12-10 17:27:35.377 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:27:35.389 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:27:35.392 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:27:35.394 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:27:35.400 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:27:35.404 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:27:35.411 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:27:35.413 +05:30 [INF] Deserializing the notes
2024-12-10 17:27:35.414 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:27:35.417 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.9948ms
2024-12-10 17:27:35.420 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:27:35.423 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.2805ms
2024-12-10 17:27:46.403 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:27:46.408 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:27:46.410 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.6485ms
2024-12-10 17:27:46.414 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:27:46.421 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:27:46.422 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:27:46.424 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:27:46.427 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:27:46.430 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:27:46.432 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:27:46.433 +05:30 [INF] Deserializing the notes
2024-12-10 17:27:46.435 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:27:46.438 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.3829ms
2024-12-10 17:27:46.440 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:27:46.442 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.0709ms
2024-12-10 17:28:01.631 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:28:01.637 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:28:01.637 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7588ms
2024-12-10 17:28:01.641 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:28:01.645 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:28:01.647 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:28:01.649 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:28:01.652 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:28:01.655 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:28:01.657 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:28:01.659 +05:30 [INF] Deserializing the notes
2024-12-10 17:28:01.661 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:28:01.663 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7352ms
2024-12-10 17:28:01.666 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:28:01.668 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.2458ms
2024-12-10 17:28:12.448 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:28:12.452 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:28:12.456 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.4171ms
2024-12-10 17:28:12.465 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:28:12.473 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:28:12.475 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:28:12.477 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:28:12.480 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:28:12.482 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:28:12.485 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:28:12.486 +05:30 [INF] Deserializing the notes
2024-12-10 17:28:12.489 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:28:12.491 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.8793ms
2024-12-10 17:28:12.493 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:28:12.494 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.1217ms
2024-12-10 17:28:15.872 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:28:15.878 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:28:15.881 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:28:15.883 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:28:15.890 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:28:15.895 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:28:15.897 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:28:15.900 +05:30 [INF] Deserializing the notes
2024-12-10 17:28:15.902 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:28:15.904 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.7343ms
2024-12-10 17:28:15.908 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:28:15.909 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.2923ms
2024-12-10 17:28:19.269 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:28:19.278 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:28:19.279 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.3701ms
2024-12-10 17:28:19.282 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:28:19.293 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:28:19.294 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:28:19.295 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:28:19.298 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:28:19.301 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:28:19.303 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:28:19.305 +05:30 [INF] Deserializing the notes
2024-12-10 17:28:19.306 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:28:19.308 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7359ms
2024-12-10 17:28:19.310 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:28:19.312 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.236ms
2024-12-10 17:28:24.037 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1047 - null null
2024-12-10 17:28:24.042 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:28:24.043 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1047 - 204 null null 6.6584ms
2024-12-10 17:28:24.045 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1047 - application/json 4
2024-12-10 17:28:24.052 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:28:24.053 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 17:28:24.054 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:28:24.058 +05:30 [INF] Received request to toggle trash status for note with ID: 1047
2024-12-10 17:28:24.061 +05:30 [INF] Initiating toggle of trash status for note with ID: 1047 for user ID: 1
2024-12-10 17:28:24.079 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 17:28:24.090 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-10 17:28:24.100 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-10 17:28:24.108 +05:30 [INF] Note with ID: 1047 trash status updated to true
2024-12-10 17:28:24.110 +05:30 [INF] Successfully toggled trash status for note with ID: 1047
2024-12-10 17:28:24.111 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:28:24.113 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 55.9511ms
2024-12-10 17:28:24.114 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-10 17:28:24.116 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1047 - 200 null application/json; charset=utf-8 71.0148ms
2024-12-10 17:28:26.526 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:28:26.530 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:28:26.533 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.1099ms
2024-12-10 17:28:26.537 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:28:26.555 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:28:26.556 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:28:26.557 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:28:26.560 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:28:26.563 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:28:26.567 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 17:28:26.568 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 17:28:26.569 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 17:28:26.572 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 17:28:26.575 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 17:28:26.590 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 17:28:26.593 +05:30 [INF] 9 notes retrieved for user with ID: 1
2024-12-10 17:28:26.595 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 17:28:26.597 +05:30 [INF] Notes retrieved successfully
2024-12-10 17:28:26.598 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:28:26.600 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 40.1116ms
2024-12-10 17:28:26.601 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:28:26.603 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 67.1895ms
2024-12-10 17:30:23.303 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:30:23.306 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:23.307 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8051ms
2024-12-10 17:30:23.312 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:30:23.316 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:23.317 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:23.319 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:30:23.321 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:30:23.324 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:30:23.325 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:30:23.326 +05:30 [INF] Deserializing the notes
2024-12-10 17:30:23.327 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:30:23.330 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4987ms
2024-12-10 17:30:23.332 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:23.334 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.5487ms
2024-12-10 17:30:23.743 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:30:23.751 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:23.754 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:23.756 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:30:23.762 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:30:23.767 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:30:23.770 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:30:23.773 +05:30 [INF] Deserializing the notes
2024-12-10 17:30:23.778 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:30:23.781 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.3286ms
2024-12-10 17:30:23.787 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:23.789 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.1383ms
2024-12-10 17:30:27.685 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:30:27.689 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:27.691 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:27.695 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:30:27.699 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:30:27.702 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:30:27.704 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:30:27.705 +05:30 [INF] Deserializing the notes
2024-12-10 17:30:27.706 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:30:27.709 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.1227ms
2024-12-10 17:30:27.711 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:27.714 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.0714ms
2024-12-10 17:30:32.437 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:30:32.441 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:32.445 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.2496ms
2024-12-10 17:30:32.448 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:30:32.455 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:32.458 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:32.461 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:30:32.464 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:30:32.466 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:30:32.470 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:30:32.472 +05:30 [INF] Deserializing the notes
2024-12-10 17:30:32.475 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:30:32.479 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.071ms
2024-12-10 17:30:32.483 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:32.485 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.7275ms
2024-12-10 17:30:43.971 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:30:43.976 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:43.977 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.2189ms
2024-12-10 17:30:43.981 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 39
2024-12-10 17:30:43.992 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:43.993 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 17:30:43.995 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:30:44.009 +05:30 [INF] Attempt to create a note
2024-12-10 17:30:44.030 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 17:30:44.040 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-10 17:30:44.046 +05:30 [INF] Created notes successfully
2024-12-10 17:30:44.047 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 17:30:44.048 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 40.9159ms
2024-12-10 17:30:44.052 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-10 17:30:44.053 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 72.4484ms
2024-12-10 17:30:46.708 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:30:46.713 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:46.714 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:46.716 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:30:46.720 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:30:46.722 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:30:46.724 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 17:30:46.726 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 17:30:46.727 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 17:30:46.732 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 17:30:46.737 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 17:30:46.752 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 17:30:46.757 +05:30 [INF] 10 notes retrieved for user with ID: 1
2024-12-10 17:30:46.759 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 17:30:46.760 +05:30 [INF] Notes retrieved successfully
2024-12-10 17:30:46.761 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:30:46.763 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 43.3162ms
2024-12-10 17:30:46.764 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:46.766 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 58.0328ms
2024-12-10 17:30:47.991 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:30:47.992 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:47.994 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:47.996 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:30:48.004 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:30:48.007 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:30:48.009 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:30:48.011 +05:30 [INF] Deserializing the notes
2024-12-10 17:30:48.012 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:30:48.014 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.8105ms
2024-12-10 17:30:48.018 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:48.021 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.3527ms
2024-12-10 17:30:48.631 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:30:48.635 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:48.637 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:48.639 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:30:48.645 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:30:48.648 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:30:48.650 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:30:48.652 +05:30 [INF] Deserializing the notes
2024-12-10 17:30:48.654 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:30:48.659 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.9835ms
2024-12-10 17:30:48.663 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:48.667 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.2733ms
2024-12-10 17:30:49.132 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 17:30:49.137 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:49.139 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.5154ms
2024-12-10 17:30:49.148 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:30:49.151 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:49.153 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:49.155 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:30:49.160 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:30:49.163 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:30:49.166 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:30:49.168 +05:30 [INF] Deserializing the notes
2024-12-10 17:30:49.170 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:30:49.174 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.5361ms
2024-12-10 17:30:49.176 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:49.180 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.9566ms
2024-12-10 17:30:51.045 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 17:30:51.049 +05:30 [INF] CORS policy execution successful.
2024-12-10 17:30:51.050 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:51.057 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 17:30:51.061 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 17:30:51.063 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 17:30:51.065 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 17:30:51.067 +05:30 [INF] Deserializing the notes
2024-12-10 17:30:51.070 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 17:30:51.073 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.7374ms
2024-12-10 17:30:51.075 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 17:30:51.076 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.0475ms
2024-12-10 21:36:07.758 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-10 21:36:08.310 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-10 21:36:08.311 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-10 21:36:08.383 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-10 21:36:08.385 +05:30 [INF] Hosting environment: Development
2024-12-10 21:36:08.385 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-10 21:36:10.130 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-10 21:36:10.755 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 644.0881ms
2024-12-10 21:36:10.774 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-10 21:36:10.774 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-10 21:36:10.794 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 19.7606ms
2024-12-10 21:36:10.916 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 141.4912ms
2024-12-10 21:36:11.049 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-10 21:36:11.451 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 402.5363ms
2024-12-10 21:37:02.988 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-10 21:37:03.010 +05:30 [INF] CORS policy execution successful.
2024-12-10 21:37:03.015 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 28.3989ms
2024-12-10 21:37:03.026 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-10 21:37:03.035 +05:30 [INF] CORS policy execution successful.
2024-12-10 21:37:04.677 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 21:37:04.722 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-10 21:37:05.465 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-10 21:37:05.469 +05:30 [INF] Checking if the user present
2024-12-10 21:37:05.471 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-10 21:37:07.807 +05:30 [INF] Executed DbCommand (132ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-10 21:37:07.891 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-10 21:37:07.892 +05:30 [INF] Verifying the password
2024-12-10 21:37:08.357 +05:30 [WRN] Invalid password
2024-12-10 21:37:08.359 +05:30 [ERR] Login failed
2024-12-10 21:37:08.370 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 21:37:08.384 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 3655.5177ms
2024-12-10 21:37:08.390 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 21:37:08.399 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 400 null application/json; charset=utf-8 5372.7176ms
2024-12-10 21:37:17.574 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-10 21:37:17.582 +05:30 [INF] CORS policy execution successful.
2024-12-10 21:37:17.584 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 10.8665ms
2024-12-10 21:37:17.587 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-10 21:37:17.591 +05:30 [INF] CORS policy execution successful.
2024-12-10 21:37:17.594 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 21:37:17.595 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-10 21:37:17.614 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-10 21:37:17.618 +05:30 [INF] Checking if the user present
2024-12-10 21:37:17.620 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-10 21:37:17.642 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-10 21:37:17.650 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-10 21:37:17.651 +05:30 [INF] Verifying the password
2024-12-10 21:37:17.858 +05:30 [INF] Password is valid and token is generated
2024-12-10 21:37:17.860 +05:30 [INF] Login successful
2024-12-10 21:37:17.861 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-10 21:37:17.863 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 266.8003ms
2024-12-10 21:37:17.865 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-10 21:37:17.866 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 279.9461ms
2024-12-10 21:37:17.891 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 21:37:17.897 +05:30 [INF] CORS policy execution successful.
2024-12-10 21:37:17.898 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6527ms
2024-12-10 21:37:17.903 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 21:37:17.910 +05:30 [INF] CORS policy execution successful.
2024-12-10 21:37:17.968 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 21:37:17.974 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 21:37:17.985 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 21:37:18.056 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 21:37:18.058 +05:30 [WRN] Failed to fetch notes from cache
2024-12-10 21:37:18.060 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-10 21:37:18.067 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-10 21:37:18.155 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-10 21:37:18.162 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-10 21:37:18.231 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-10 21:37:18.238 +05:30 [INF] 10 notes retrieved for user with ID: 1
2024-12-10 21:37:18.241 +05:30 [INF] Serializing notes to store it in cache
2024-12-10 21:37:18.251 +05:30 [INF] Notes retrieved successfully
2024-12-10 21:37:18.255 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 21:37:18.258 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 277.1015ms
2024-12-10 21:37:18.259 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 21:37:18.260 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 357.8411ms
2024-12-10 21:37:23.148 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 21:37:23.152 +05:30 [INF] CORS policy execution successful.
2024-12-10 21:37:23.154 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6907ms
2024-12-10 21:37:23.157 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 21:37:23.162 +05:30 [INF] CORS policy execution successful.
2024-12-10 21:37:23.170 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 21:37:23.172 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 21:37:23.176 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 21:37:23.185 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 21:37:23.188 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 21:37:23.191 +05:30 [INF] Deserializing the notes
2024-12-10 21:37:23.194 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 21:37:23.195 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.7824ms
2024-12-10 21:37:23.198 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 21:37:23.201 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.0134ms
2024-12-10 21:37:42.951 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 21:37:42.956 +05:30 [INF] CORS policy execution successful.
2024-12-10 21:37:42.957 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.15ms
2024-12-10 21:37:42.961 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 21:37:42.969 +05:30 [INF] CORS policy execution successful.
2024-12-10 21:37:42.974 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 21:37:42.978 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 21:37:42.983 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 21:37:42.988 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 21:37:42.990 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 21:37:42.991 +05:30 [INF] Deserializing the notes
2024-12-10 21:37:42.992 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 21:37:42.993 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.7254ms
2024-12-10 21:37:42.994 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 21:37:42.996 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.2274ms
2024-12-10 21:38:14.627 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 21:38:14.631 +05:30 [INF] CORS policy execution successful.
2024-12-10 21:38:14.633 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.7968ms
2024-12-10 21:38:14.636 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 21:38:14.641 +05:30 [INF] CORS policy execution successful.
2024-12-10 21:38:14.642 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 21:38:14.642 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-10 21:38:14.645 +05:30 [INF] Attempt to get all notes from Database
2024-12-10 21:38:14.648 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-10 21:38:14.649 +05:30 [INF] Fetched notes from cache successfully
2024-12-10 21:38:14.650 +05:30 [INF] Deserializing the notes
2024-12-10 21:38:14.652 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-10 21:38:14.655 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6317ms
2024-12-10 21:38:14.657 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-10 21:38:14.658 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.6246ms
2024-12-10 22:54:02.871 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 22:54:02.877 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:54:02.878 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.751ms
2024-12-10 22:54:02.880 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 22:54:02.883 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:54:02.892 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 17:07:17', Current time (UTC): '10-12-2024 17:24:02'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 22:54:02.914 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 22:54:02.998 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 22:54:03.053 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 22:54:03.056 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 22:54:03.058 +05:30 [ERR] Connection id "0HN8P6I7I1716", Request id "0HN8P6I7I1716:00000003": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 22:54:03.074 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 194.0132ms
2024-12-10 22:54:37.724 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 22:54:37.735 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:54:37.736 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.7165ms
2024-12-10 22:54:37.738 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 22:54:37.743 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:54:37.745 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 17:07:17', Current time (UTC): '10-12-2024 17:24:37'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 22:54:37.749 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 22:54:37.768 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 22:54:37.809 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 22:54:37.811 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 22:54:37.812 +05:30 [ERR] Connection id "0HN8P6I7I1716", Request id "0HN8P6I7I1716:00000007": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 22:54:37.815 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 77.1933ms
2024-12-10 22:54:44.743 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 22:54:44.746 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:54:44.746 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7379ms
2024-12-10 22:54:44.748 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 22:54:44.751 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:54:44.752 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 17:07:17', Current time (UTC): '10-12-2024 17:24:44'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 22:54:44.754 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 22:54:44.769 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 22:54:44.793 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 22:54:44.796 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 22:54:44.796 +05:30 [ERR] Connection id "0HN8P6I7I1716", Request id "0HN8P6I7I1716:0000000B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 22:54:44.800 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 51.7672ms
2024-12-10 22:54:47.975 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 22:54:47.979 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:54:47.981 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 17:07:17', Current time (UTC): '10-12-2024 17:24:47'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 22:54:47.985 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 22:54:48.005 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 22:54:48.050 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 22:54:48.055 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 22:54:48.057 +05:30 [ERR] Connection id "0HN8P6I7I1716", Request id "0HN8P6I7I1716:0000000D": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 22:54:48.062 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 87.734ms
2024-12-10 22:55:03.111 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 22:55:03.116 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:55:03.117 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6145ms
2024-12-10 22:55:03.119 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 22:55:03.121 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:55:03.122 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 17:07:17', Current time (UTC): '10-12-2024 17:25:03'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 22:55:03.124 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 22:55:03.139 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 22:55:03.169 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 22:55:03.171 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 22:55:03.172 +05:30 [ERR] Connection id "0HN8P6I7I1716", Request id "0HN8P6I7I1716:00000011": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 22:55:03.174 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 54.8886ms
2024-12-10 22:55:19.869 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 22:55:19.873 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:55:19.875 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.7317ms
2024-12-10 22:55:19.876 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 22:55:19.878 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:55:19.879 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 17:07:17', Current time (UTC): '10-12-2024 17:25:19'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 22:55:19.881 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 22:55:19.896 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 22:55:19.922 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 22:55:19.924 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 22:55:19.925 +05:30 [ERR] Connection id "0HN8P6I7I1716", Request id "0HN8P6I7I1716:00000015": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 22:55:19.927 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 50.8377ms
2024-12-10 22:57:31.188 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-10 22:57:31.196 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:57:31.197 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.8792ms
2024-12-10 22:57:31.198 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 22:57:31.202 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:57:31.204 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 17:07:17', Current time (UTC): '10-12-2024 17:27:31'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 22:57:31.207 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 22:57:31.231 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 22:57:31.279 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 22:57:31.284 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 22:57:31.285 +05:30 [ERR] Connection id "0HN8P6I7I1716", Request id "0HN8P6I7I1716:00000019": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 22:57:31.290 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 92.1406ms
2024-12-10 22:57:32.534 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-10 22:57:32.540 +05:30 [INF] CORS policy execution successful.
2024-12-10 22:57:32.541 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10-12-2024 17:07:17', Current time (UTC): '10-12-2024 17:27:32'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-10 22:57:32.544 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-10 22:57:32.562 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-10 22:57:32.594 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-10 22:57:32.600 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-10 22:57:32.600 +05:30 [ERR] Connection id "0HN8P6I7I1716", Request id "0HN8P6I7I1716:0000001B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-10 22:57:32.604 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 69.4658ms
