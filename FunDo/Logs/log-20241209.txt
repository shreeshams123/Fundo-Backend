2024-12-09 10:32:47.953 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:32:47.964 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:32:47.965 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.9558ms
2024-12-09 10:32:47.969 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:32:47.972 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:32:47.979 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:02:47'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:32:48.010 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:32:48.093 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:32:48.167 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:32:48.175 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:32:48.180 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000003": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:32:48.223 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 253.6457ms
2024-12-09 10:32:58.230 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:32:58.233 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:32:58.233 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.46ms
2024-12-09 10:32:58.236 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:32:58.241 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:32:58.242 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:02:58'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:32:58.245 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:32:58.272 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:32:58.317 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:32:58.321 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:32:58.322 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000007": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:32:58.327 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 92.008ms
2024-12-09 10:35:43.596 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:35:43.609 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:35:43.612 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.0674ms
2024-12-09 10:35:43.615 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:35:43.620 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:35:43.623 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:05:43'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:35:43.629 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:35:43.656 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:35:43.702 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:35:43.708 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:35:43.710 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:0000000B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:35:43.719 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 104.4905ms
2024-12-09 10:36:46.054 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:36:46.063 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:36:46.064 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.2ms
2024-12-09 10:36:46.067 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:36:46.071 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:36:46.075 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:06:46'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:36:46.079 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:36:46.107 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:36:46.163 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:36:46.168 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:36:46.170 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:0000000F": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:36:46.178 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 111.1792ms
2024-12-09 10:36:49.663 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:36:49.669 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:36:49.672 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:06:49'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:36:49.679 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:36:49.713 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:36:49.751 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:36:49.753 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:36:49.754 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000011": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:36:49.759 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 96.4609ms
2024-12-09 10:37:00.396 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:37:00.401 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:37:00.402 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.5215ms
2024-12-09 10:37:00.406 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:37:00.412 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:37:00.414 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:07:00'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:37:00.421 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:37:00.465 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:37:00.514 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:37:00.520 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:37:00.521 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000015": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:37:00.532 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 126.4056ms
2024-12-09 10:37:02.851 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:37:02.856 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:37:02.859 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:07:02'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:37:02.862 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:37:02.884 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:37:02.932 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:37:02.940 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:37:02.943 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000017": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:37:02.947 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 95.6614ms
2024-12-09 10:37:26.155 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:37:26.156 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:37:26.157 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2752ms
2024-12-09 10:37:26.160 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:37:26.162 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:37:26.163 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:07:26'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:37:26.167 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:37:26.185 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:37:26.226 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:37:26.229 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:37:26.231 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:0000001B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:37:26.235 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 75.8916ms
2024-12-09 10:37:34.577 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:37:34.579 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:37:34.579 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8184ms
2024-12-09 10:37:34.581 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:37:34.582 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:37:34.584 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:07:34'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:37:34.586 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:37:34.604 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:37:34.638 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:37:34.641 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:37:34.642 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:0000001F": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:37:34.646 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 65.0894ms
2024-12-09 10:37:35.603 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:37:35.605 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:37:35.606 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:07:35'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:37:35.609 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:37:35.628 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:37:35.663 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:37:35.666 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:37:35.667 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000021": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:37:35.671 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 67.5317ms
2024-12-09 10:37:45.607 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:37:45.609 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:37:45.610 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.7273ms
2024-12-09 10:37:45.612 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:37:45.613 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:37:45.615 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:07:45'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:37:45.618 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:37:45.640 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:37:45.676 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:37:45.679 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:37:45.680 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000025": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:37:45.686 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 74.2156ms
2024-12-09 10:38:01.042 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:38:01.045 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:38:01.045 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9379ms
2024-12-09 10:38:01.047 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:38:01.050 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:38:01.052 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:08:01'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:38:01.056 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:38:01.083 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:38:01.152 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:38:01.157 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:38:01.159 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000029": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:38:01.164 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 116.8893ms
2024-12-09 10:38:33.563 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:38:33.568 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:38:33.568 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2065ms
2024-12-09 10:38:33.570 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:38:33.574 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:38:33.576 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:08:33'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:38:33.580 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:38:33.604 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:38:33.643 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:38:33.646 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:38:33.647 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:0000002D": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:38:33.651 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 80.6672ms
2024-12-09 10:38:42.338 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:38:42.343 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:38:42.344 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.5792ms
2024-12-09 10:38:42.346 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:38:42.348 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:38:42.350 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:08:42'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:38:42.352 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:38:42.370 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.Microsoft.AspNetCore.Http.Features.IHttpResponseFeature.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:38:42.410 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:38:42.413 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:38:42.414 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000031": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:38:42.417 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 70.691ms
2024-12-09 10:39:45.761 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:39:45.775 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:39:45.778 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.9887ms
2024-12-09 10:39:45.781 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:39:45.785 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:39:45.787 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:09:45'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:39:45.793 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:39:45.833 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:39:45.889 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:39:45.896 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:39:45.899 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000035": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:39:45.902 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 121.6112ms
2024-12-09 10:40:12.553 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:40:12.558 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:40:12.559 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.2963ms
2024-12-09 10:40:12.561 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:40:12.566 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:40:12.569 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:10:12'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:40:12.574 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:40:12.611 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:40:12.645 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:40:12.652 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:40:12.653 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000039": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:40:12.656 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 95.5157ms
2024-12-09 10:40:31.049 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:40:31.053 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:40:31.054 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.9302ms
2024-12-09 10:40:31.056 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:40:31.061 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:40:31.063 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:10:31'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:40:31.070 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:40:31.103 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:40:31.164 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:40:31.170 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:40:31.172 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:0000003D": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:40:31.182 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 125.377ms
2024-12-09 10:40:31.736 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:40:31.739 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:40:31.741 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:10:31'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:40:31.745 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:40:31.772 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:40:31.819 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:40:31.823 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:40:31.824 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:0000003F": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:40:31.828 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 92.6046ms
2024-12-09 10:41:31.995 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:41:32.005 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:41:32.005 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.7038ms
2024-12-09 10:41:32.008 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:41:32.013 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:41:32.015 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:11:32'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:41:32.017 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:41:32.033 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:41:32.067 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:41:32.072 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:41:32.073 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000043": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:41:32.077 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 69.4259ms
2024-12-09 10:41:32.371 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:41:32.374 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:41:32.375 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:11:32'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:41:32.379 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:41:32.398 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:41:32.445 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:41:32.450 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:41:32.452 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000045": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:41:32.457 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 86.7421ms
2024-12-09 10:43:59.151 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:43:59.159 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:43:59.160 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.8705ms
2024-12-09 10:43:59.162 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:43:59.166 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:43:59.168 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:13:59'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:43:59.172 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:43:59.189 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:43:59.222 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:43:59.226 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:43:59.227 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:00000049": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:43:59.234 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 71.6924ms
2024-12-09 10:44:26.321 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:44:26.331 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:44:26.332 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.8415ms
2024-12-09 10:44:26.335 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:44:26.338 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:44:26.341 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '08-12-2024 13:44:47', Current time (UTC): '09-12-2024 05:14:26'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 10:44:26.344 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 10:44:26.368 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 10:44:26.406 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 10:44:26.411 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 10:44:26.412 +05:30 [ERR] Connection id "0HN8NF9RKATDA", Request id "0HN8NF9RKATDA:0000004D": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 10:44:26.418 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 83.5808ms
2024-12-09 10:44:56.279 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-09 10:44:56.287 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:44:56.288 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 8.9406ms
2024-12-09 10:44:56.291 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-09 10:44:56.293 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:44:56.293 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 10:44:56.295 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-09 10:44:56.325 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-09 10:44:56.327 +05:30 [INF] Checking if the user present
2024-12-09 10:44:56.327 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-09 10:44:56.367 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-09 10:44:56.371 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-09 10:44:56.372 +05:30 [INF] Verifying the password
2024-12-09 10:44:56.582 +05:30 [INF] Password is valid and token is generated
2024-12-09 10:44:56.583 +05:30 [INF] Login successful
2024-12-09 10:44:56.585 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 10:44:56.587 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 283.1413ms
2024-12-09 10:44:56.590 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 10:44:56.591 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 299.3206ms
2024-12-09 10:44:56.603 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:44:56.607 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:44:56.607 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8662ms
2024-12-09 10:44:56.610 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:44:56.614 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:44:56.616 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 10:44:56.619 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 10:44:56.621 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 10:44:56.623 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 10:44:56.623 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 10:44:56.624 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 10:44:56.624 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 10:44:56.629 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 10:44:56.631 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 10:44:56.641 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 10:44:56.644 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 10:44:56.645 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 10:44:56.647 +05:30 [INF] Notes retrieved successfully
2024-12-09 10:44:56.648 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 10:44:56.650 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 29.7903ms
2024-12-09 10:44:56.652 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 10:44:56.653 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.7722ms
2024-12-09 10:44:58.951 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 10:44:58.956 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:44:58.957 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 6.8241ms
2024-12-09 10:44:58.960 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 18
2024-12-09 10:44:58.962 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:44:58.964 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 10:44:58.972 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 10:44:58.991 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 10:44:59.008 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 32.8171ms
2024-12-09 10:44:59.010 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 10:44:59.013 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 400 null application/problem+json; charset=utf-8 53.3803ms
2024-12-09 10:45:54.554 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-09 10:45:58.713 +05:30 [ERR] Hosting failed to start
RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection()
   at BusinessLayer.Services.RabbitMqService..ctor(ConnectionFactory connectionFactory, IEmailService emailService) in D:\FunDo\BusinessLayer\Services\RabbitMqService.cs:line 23
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at RabbitMqBackgroundService.ExecuteAsync(CancellationToken stoppingToken) in D:\FunDo\BusinessLayer\Services\RabbitMqBackgroundService.cs:line 18
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2024-12-09 10:46:28.129 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-09 10:46:28.413 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-09 10:46:28.415 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-09 10:46:28.447 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-09 10:46:28.449 +05:30 [INF] Hosting environment: Development
2024-12-09 10:46:28.450 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-09 10:46:28.806 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-09 10:46:28.936 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 140.6352ms
2024-12-09 10:46:28.943 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-09 10:46:28.943 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-09 10:46:28.957 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 13.5862ms
2024-12-09 10:46:28.980 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 36.5433ms
2024-12-09 10:46:29.019 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-09 10:46:29.094 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 76.1334ms
2024-12-09 10:46:35.931 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:46:35.940 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:46:35.943 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.146ms
2024-12-09 10:46:35.957 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:46:35.963 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:46:37.222 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 10:46:37.270 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 10:46:37.817 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 10:46:37.874 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 10:46:37.876 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 10:46:37.878 +05:30 [INF] Deserializing the notes
2024-12-09 10:46:37.892 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 10:46:37.900 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 623.1446ms
2024-12-09 10:46:37.903 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 10:46:37.906 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 1948.9311ms
2024-12-09 10:46:40.551 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 10:46:40.557 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:46:40.559 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 8.3166ms
2024-12-09 10:46:40.564 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 18
2024-12-09 10:46:40.568 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:46:40.572 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 10:46:40.587 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 10:46:40.645 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 10:46:40.660 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 71.7292ms
2024-12-09 10:46:40.663 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 10:46:40.663 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 400 null application/problem+json; charset=utf-8 99.8932ms
2024-12-09 10:49:56.116 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:49:56.120 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:49:56.122 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.0892ms
2024-12-09 10:49:56.125 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:49:56.128 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:49:56.134 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 10:49:56.135 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 10:49:56.144 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 10:49:56.147 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 10:49:56.149 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 10:49:56.150 +05:30 [INF] Deserializing the notes
2024-12-09 10:49:56.152 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 10:49:56.154 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.9502ms
2024-12-09 10:49:56.155 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 10:49:56.156 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.3449ms
2024-12-09 10:50:01.917 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:50:01.921 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:50:01.922 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.0311ms
2024-12-09 10:50:01.926 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:50:01.934 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:50:01.935 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 10:50:01.936 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 10:50:01.939 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 10:50:01.941 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 10:50:01.943 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 10:50:01.947 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 10:50:01.961 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 10:50:03.300 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:50:03.303 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:50:03.305 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 10:50:03.306 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 10:50:03.309 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 10:50:03.311 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 10:50:03.314 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 10:50:03.337 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 10:50:03.338 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 10:50:04.281 +05:30 [INF] Executed DbCommand (93ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 10:50:04.281 +05:30 [INF] Executed DbCommand (93ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 10:50:04.322 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 10:50:04.322 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 10:50:04.385 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 10:50:04.385 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 10:50:04.395 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 10:50:04.395 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 10:50:04.396 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 10:50:04.397 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 10:50:04.413 +05:30 [INF] Notes retrieved successfully
2024-12-09 10:50:04.413 +05:30 [INF] Notes retrieved successfully
2024-12-09 10:50:04.415 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 10:50:04.416 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 10:50:04.422 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 1112.7086ms
2024-12-09 10:50:04.422 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 2483.7313ms
2024-12-09 10:50:04.424 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 10:50:04.426 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 10:50:04.433 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 499 null application/json; charset=utf-8 2507.5585ms
2024-12-09 10:50:04.433 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 1132.7946ms
2024-12-09 10:50:06.925 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 10:50:06.928 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:50:06.929 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 4.2435ms
2024-12-09 10:50:06.932 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 18
2024-12-09 10:50:06.937 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:50:06.938 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 10:50:06.941 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 10:50:06.944 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 10:50:06.945 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 2.5568ms
2024-12-09 10:50:06.946 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 10:50:06.948 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 400 null application/problem+json; charset=utf-8 16.2997ms
2024-12-09 10:54:59.741 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 10:54:59.743 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:54:59.744 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6791ms
2024-12-09 10:54:59.749 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 10:54:59.751 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:54:59.753 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 10:54:59.753 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 10:54:59.755 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 10:54:59.756 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 10:54:59.765 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 10:54:59.765 +05:30 [INF] Deserializing the notes
2024-12-09 10:54:59.767 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 10:54:59.768 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.2505ms
2024-12-09 10:54:59.768 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 10:54:59.769 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.4042ms
2024-12-09 10:55:04.214 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 10:55:04.218 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:55:04.219 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 5.4728ms
2024-12-09 10:55:04.221 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 18
2024-12-09 10:55:04.223 +05:30 [INF] CORS policy execution successful.
2024-12-09 10:55:04.224 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 10:55:04.225 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 10:55:04.229 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 10:55:04.234 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 7.2277ms
2024-12-09 10:55:04.236 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 10:55:04.237 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 400 null application/problem+json; charset=utf-8 16.8824ms
2024-12-09 11:02:49.134 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 11:02:49.145 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:02:49.148 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:02:49.150 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:02:49.156 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 11:02:49.157 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 11:02:49.164 +05:30 [INF] Received isArchive value: True
2024-12-09 11:02:49.266 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 11:02:49.334 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 11:02:49.512 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 11:02:49.543 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 11:02:49.545 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 11:02:49.547 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:02:49.551 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 396.4548ms
2024-12-09 11:02:49.552 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:02:49.555 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 422.2214ms
2024-12-09 11:03:17.202 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:03:17.204 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:03:17.207 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4563ms
2024-12-09 11:03:17.211 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:03:17.213 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:03:17.214 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:03:17.215 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:03:17.221 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:03:17.223 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:03:17.226 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 11:03:17.227 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 11:03:17.228 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 11:03:17.263 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 11:03:17.268 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 11:03:17.287 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 11:03:17.290 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 11:03:17.291 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 11:03:17.293 +05:30 [INF] Notes retrieved successfully
2024-12-09 11:03:17.293 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:03:17.295 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 74.4345ms
2024-12-09 11:03:17.296 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:03:17.300 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 89.6744ms
2024-12-09 11:03:32.578 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 11:03:32.586 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:03:32.589 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:03:32.594 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:03:32.597 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 11:03:32.598 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 11:03:32.598 +05:30 [INF] Received isArchive value: False
2024-12-09 11:03:32.602 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 11:03:32.610 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 11:03:32.617 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 11:03:32.624 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 11:03:32.625 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 11:03:32.626 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:03:32.627 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 30.1621ms
2024-12-09 11:03:32.628 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:03:32.629 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 51.3893ms
2024-12-09 11:04:18.039 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 11:04:18.047 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:04:18.048 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 8.9806ms
2024-12-09 11:04:18.050 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 18
2024-12-09 11:04:18.053 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:04:18.057 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:04:18.057 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:04:18.067 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 11:04:18.069 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 4.1657ms
2024-12-09 11:04:18.071 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:04:18.072 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 400 null application/problem+json; charset=utf-8 22.0681ms
2024-12-09 11:05:03.680 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:05:03.682 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:05:03.683 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.2634ms
2024-12-09 11:05:03.686 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:05:03.688 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:05:03.689 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:05:03.690 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:05:03.692 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:05:03.693 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:05:03.694 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 11:05:03.699 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 11:05:03.702 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 11:05:03.714 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 11:05:03.718 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 11:05:03.730 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 11:05:03.733 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 11:05:03.733 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 11:05:03.734 +05:30 [INF] Notes retrieved successfully
2024-12-09 11:05:03.735 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:05:03.741 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 50.2817ms
2024-12-09 11:05:03.744 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:05:03.745 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 59.6382ms
2024-12-09 11:05:12.950 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - null null
2024-12-09 11:05:12.955 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:05:12.956 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - 204 null null 6.218ms
2024-12-09 11:05:12.961 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - application/json 18
2024-12-09 11:05:12.965 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:05:12.966 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:05:12.970 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:05:12.977 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 11:05:12.979 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 3.3431ms
2024-12-09 11:05:12.980 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:05:12.984 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - 400 null application/problem+json; charset=utf-8 23.4191ms
2024-12-09 11:06:34.179 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:06:34.187 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:06:34.187 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.8625ms
2024-12-09 11:06:34.192 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:06:34.195 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:06:34.197 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:06:34.200 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:06:34.204 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:06:34.206 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:06:34.208 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 11:06:34.209 +05:30 [INF] Deserializing the notes
2024-12-09 11:06:34.210 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:06:34.212 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.0748ms
2024-12-09 11:06:34.216 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:06:34.219 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.4322ms
2024-12-09 11:06:34.376 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:06:34.379 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:06:34.380 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:06:34.381 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:06:34.383 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:06:34.385 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:06:34.387 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 11:06:34.389 +05:30 [INF] Deserializing the notes
2024-12-09 11:06:34.390 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:06:34.393 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.8835ms
2024-12-09 11:06:34.393 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:06:34.397 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.5218ms
2024-12-09 11:06:44.324 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 11:06:44.328 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:06:44.329 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 5.2353ms
2024-12-09 11:06:44.332 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 18
2024-12-09 11:06:44.334 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:06:44.336 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:06:44.338 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:06:44.342 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 11:06:44.347 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 6.5088ms
2024-12-09 11:06:44.352 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:06:44.353 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 400 null application/problem+json; charset=utf-8 21.4923ms
2024-12-09 11:06:57.291 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 11:06:57.304 +05:30 [INF] Executing endpoint '405 HTTP Method Not Supported'
2024-12-09 11:06:57.307 +05:30 [INF] Executed endpoint '405 HTTP Method Not Supported'
2024-12-09 11:06:57.309 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes/archive/1025 - 405 0 null 17.7205ms
2024-12-09 11:18:12.704 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:18:12.711 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:18:12.713 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.6959ms
2024-12-09 11:18:12.715 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:18:12.726 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:18:12.727 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:18:12.730 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:18:12.731 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:18:12.732 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:18:12.733 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 11:18:12.736 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 11:18:12.738 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 11:18:12.758 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 11:18:12.761 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 11:18:12.769 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 11:18:12.774 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 11:18:12.774 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 11:18:12.775 +05:30 [INF] Notes retrieved successfully
2024-12-09 11:18:12.776 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:18:12.777 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 46.2135ms
2024-12-09 11:18:12.778 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:18:12.779 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 64.0762ms
2024-12-09 11:18:19.729 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 11:18:19.733 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:18:19.740 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 11.1588ms
2024-12-09 11:18:19.743 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 18
2024-12-09 11:18:19.745 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:18:19.747 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:18:19.748 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:18:19.751 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 11:18:19.752 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 2.7125ms
2024-12-09 11:18:19.761 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:18:19.763 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 400 null application/problem+json; charset=utf-8 20.7717ms
2024-12-09 11:24:41.566 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:24:41.572 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:24:41.573 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.5432ms
2024-12-09 11:24:41.578 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:24:41.580 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:24:41.581 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:24:41.581 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:24:41.583 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:24:41.583 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:24:41.584 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 11:24:41.585 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 11:24:41.585 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 11:24:41.622 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 11:24:41.624 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 11:24:41.635 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 11:24:41.640 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 11:24:41.641 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 11:24:41.642 +05:30 [INF] Notes retrieved successfully
2024-12-09 11:24:41.642 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:24:41.644 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 61.3523ms
2024-12-09 11:24:41.645 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:24:41.646 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 68.1915ms
2024-12-09 11:24:54.398 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:24:54.402 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:24:54.404 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.3472ms
2024-12-09 11:24:54.407 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:24:54.412 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:24:54.414 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:24:54.417 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:24:54.422 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:24:54.423 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:24:54.424 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 11:24:54.425 +05:30 [INF] Deserializing the notes
2024-12-09 11:24:54.429 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:24:54.434 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.9788ms
2024-12-09 11:24:54.436 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:24:54.439 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.9393ms
2024-12-09 11:25:01.870 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 11:25:01.872 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:25:01.873 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 3.4728ms
2024-12-09 11:25:01.876 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 18
2024-12-09 11:25:01.879 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:25:01.887 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:25:01.889 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:25:01.893 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 11:25:01.896 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 4.2943ms
2024-12-09 11:25:01.901 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:25:01.904 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 400 null application/problem+json; charset=utf-8 28.4824ms
2024-12-09 11:30:55.172 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-09 11:30:55.213 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 41.3475ms
2024-12-09 11:30:55.222 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-09 11:30:55.222 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-09 11:30:55.233 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 11.2006ms
2024-12-09 11:30:55.252 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 29.743ms
2024-12-09 11:30:55.437 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-09 11:30:55.462 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 25.4112ms
2024-12-09 11:31:15.201 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:31:15.204 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:31:15.205 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8779ms
2024-12-09 11:31:15.212 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:31:15.218 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:31:15.220 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:31:15.228 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:31:15.232 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:31:15.237 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:31:15.243 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 11:31:15.246 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 11:31:15.246 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 11:31:15.276 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 11:31:15.279 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 11:31:15.291 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 11:31:15.295 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 11:31:15.296 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 11:31:15.298 +05:30 [INF] Notes retrieved successfully
2024-12-09 11:31:15.298 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:31:15.300 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 68.137ms
2024-12-09 11:31:15.301 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:31:15.302 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 90.2861ms
2024-12-09 11:31:17.521 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 11:31:17.526 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:31:17.528 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 6.8566ms
2024-12-09 11:31:17.530 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 18
2024-12-09 11:31:17.536 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:31:17.538 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:31:17.543 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:31:17.549 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 11:31:17.553 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 5.5368ms
2024-12-09 11:31:17.554 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:31:17.556 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 400 null application/problem+json; charset=utf-8 25.4905ms
2024-12-09 11:33:52.430 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:33:52.442 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:33:52.444 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:33:52.445 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:33:52.450 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:33:52.451 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 11:33:52.453 +05:30 [INF] Deserializing the notes
2024-12-09 11:33:52.456 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:33:52.457 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.2799ms
2024-12-09 11:33:52.458 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:33:52.458 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.5725ms
2024-12-09 11:34:08.315 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 11:34:08.325 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:34:08.329 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:34:08.336 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:34:14.818 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 11:34:14.819 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 11:34:14.820 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 11:34:14.821 +05:30 [INF] Received isArchive value: True
2024-12-09 11:34:14.834 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 11:34:14.846 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 11:34:14.853 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 11:34:14.859 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 11:34:14.866 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 11:34:14.867 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:34:14.868 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 6529.6184ms
2024-12-09 11:34:14.870 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:34:14.873 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 6558.6015ms
2024-12-09 11:34:15.817 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-09 11:34:15.847 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 30.7873ms
2024-12-09 11:34:15.865 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-09 11:34:15.865 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-09 11:34:15.875 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 10.2993ms
2024-12-09 11:34:15.886 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 21.4965ms
2024-12-09 11:34:16.003 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-09 11:34:16.031 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 28.2106ms
2024-12-09 11:34:32.866 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 11:34:32.872 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:34:32.874 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:34:32.880 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:34:43.959 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 11:34:43.966 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 11:34:43.970 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 11:34:43.970 +05:30 [INF] Received isArchive value: True
2024-12-09 11:34:43.975 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 11:34:43.978 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 11:34:43.983 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 11:34:43.984 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 11:34:43.985 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:34:43.986 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 11100.4337ms
2024-12-09 11:34:43.987 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:34:43.989 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 11122.824ms
2024-12-09 11:35:06.675 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 11:35:06.677 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:35:06.681 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:35:06.684 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:35:06.686 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 11:35:06.691 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 11:35:06.692 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 11:35:06.695 +05:30 [INF] Received isArchive value: False
2024-12-09 11:35:06.705 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 11:35:06.709 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 11:35:06.720 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 11:35:06.728 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 11:35:06.730 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 11:35:06.731 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:35:06.731 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 45.3718ms
2024-12-09 11:35:06.732 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:35:06.735 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 60.2665ms
2024-12-09 11:40:42.051 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:40:42.062 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:40:42.064 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.3186ms
2024-12-09 11:40:42.072 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:40:42.077 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:40:42.079 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:40:42.087 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:40:42.090 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:40:42.093 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:40:42.094 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 11:40:42.095 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 11:40:42.096 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 11:40:42.116 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 11:40:42.119 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 11:40:42.130 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 11:40:42.138 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 11:40:42.139 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 11:40:42.141 +05:30 [INF] Notes retrieved successfully
2024-12-09 11:40:42.142 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:40:42.144 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 54.4925ms
2024-12-09 11:40:42.145 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:40:42.152 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 81.027ms
2024-12-09 11:41:09.763 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:41:09.773 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:41:09.774 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.6897ms
2024-12-09 11:41:09.778 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:41:09.782 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:41:09.784 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:41:09.785 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:41:09.789 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:41:09.791 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:41:09.792 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 11:41:09.793 +05:30 [INF] Deserializing the notes
2024-12-09 11:41:09.796 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:41:09.797 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.4631ms
2024-12-09 11:41:09.801 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:41:09.804 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.7395ms
2024-12-09 11:41:11.727 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:41:11.730 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:41:11.731 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:41:11.732 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:41:11.735 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:41:11.738 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:41:11.739 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 11:41:11.740 +05:30 [INF] Deserializing the notes
2024-12-09 11:41:11.741 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:41:11.743 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.7985ms
2024-12-09 11:41:11.744 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:41:11.748 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.4585ms
2024-12-09 11:41:18.960 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 11:41:18.962 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:41:18.964 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 4.5862ms
2024-12-09 11:41:18.968 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 18
2024-12-09 11:41:18.972 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:41:18.973 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:41:18.975 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:41:18.984 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 11:41:18.988 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 4.8636ms
2024-12-09 11:41:18.990 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 11:41:18.995 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 400 null application/problem+json; charset=utf-8 28.0177ms
2024-12-09 11:51:25.221 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:51:25.232 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:51:25.246 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 25.4006ms
2024-12-09 11:51:25.256 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:51:25.263 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:51:25.275 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:21:25'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:51:25.312 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:51:25.377 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:51:25.476 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:51:25.488 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:51:25.492 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:00000065": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:51:25.518 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 261.6556ms
2024-12-09 11:51:33.867 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:51:33.872 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:51:33.873 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.0009ms
2024-12-09 11:51:33.880 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:51:33.888 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:51:33.891 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:21:33'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:51:33.899 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:51:33.937 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:51:34.009 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:51:34.019 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:51:34.021 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:00000069": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:51:34.043 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 163.0562ms
2024-12-09 11:51:35.327 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:51:35.332 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:51:35.335 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:21:35'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:51:35.344 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:51:35.381 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:51:35.462 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:51:35.471 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:51:35.473 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:0000006B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:51:35.500 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 173.0412ms
2024-12-09 11:51:43.164 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:51:43.168 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:51:43.170 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.9294ms
2024-12-09 11:51:43.178 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:51:43.189 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:51:43.193 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:21:43'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:51:43.208 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:51:43.243 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:51:43.325 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:51:43.337 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:51:43.340 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:0000006F": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:51:43.363 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 184.896ms
2024-12-09 11:52:12.040 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/5 - application/json 4
2024-12-09 11:52:12.062 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:52:12.067 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:22:12'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:52:12.081 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:52:12.116 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:52:12.192 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:52:12.206 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:52:12.213 +05:30 [ERR] Connection id "0HN8O22HBUD76", Request id "0HN8O22HBUD76:00000027": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:52:12.240 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/5 - 401 null application/json 199.7314ms
2024-12-09 11:52:56.868 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:52:56.879 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:52:56.882 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.1602ms
2024-12-09 11:52:56.887 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:52:56.896 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:52:56.902 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:22:56'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:52:56.910 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:52:56.949 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:52:57.018 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:52:57.026 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:52:57.032 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:00000073": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:52:57.057 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 170.331ms
2024-12-09 11:52:58.145 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:52:58.150 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:52:58.153 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:22:58'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:52:58.168 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:52:58.204 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:52:58.287 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:52:58.297 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:52:58.303 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:00000075": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:52:58.321 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 176.2629ms
2024-12-09 11:53:49.118 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:53:49.129 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:53:49.131 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.3671ms
2024-12-09 11:53:49.146 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:53:49.150 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:53:49.153 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:23:49'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:53:49.169 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:53:49.208 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:53:49.283 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:53:49.295 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:53:49.302 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:00000079": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:53:49.322 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 177.1672ms
2024-12-09 11:53:57.064 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:53:57.068 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:53:57.072 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6866ms
2024-12-09 11:53:57.075 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:53:57.079 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:53:57.081 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:23:57'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:53:57.095 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:53:57.132 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:53:57.211 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:53:57.222 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:53:57.224 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:0000007D": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:53:57.243 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 168.9952ms
2024-12-09 11:54:02.833 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:54:02.837 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:02.838 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2205ms
2024-12-09 11:54:02.842 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:54:02.848 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:02.850 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:24:02'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:54:02.857 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:54:02.892 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:54:02.973 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:54:02.989 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:54:02.993 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:00000081": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:54:03.018 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 176.3117ms
2024-12-09 11:54:14.733 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:54:14.737 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:14.740 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.5269ms
2024-12-09 11:54:14.744 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:54:14.754 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:14.762 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:24:14'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:54:14.769 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:54:14.811 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:54:14.887 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:54:14.899 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:54:14.902 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:00000085": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:54:14.933 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 188.7396ms
2024-12-09 11:54:18.442 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:54:18.447 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:18.449 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:24:18'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:54:18.456 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:54:18.496 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:54:18.582 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:54:18.590 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:54:18.593 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:00000087": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:54:18.623 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 181.3384ms
2024-12-09 11:54:21.132 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:54:21.135 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:21.137 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.5019ms
2024-12-09 11:54:21.141 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:54:21.145 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:21.147 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:24:21'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:54:21.161 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:54:21.196 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:54:21.263 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:54:21.273 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:54:21.279 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:0000008B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:54:21.294 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 153.5682ms
2024-12-09 11:54:22.910 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:54:22.914 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:22.917 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:24:22'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:54:22.926 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:54:22.961 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:54:23.032 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:54:23.041 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:54:23.042 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:0000008D": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:54:23.061 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 151.1254ms
2024-12-09 11:54:31.547 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:54:31.551 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:31.554 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.5831ms
2024-12-09 11:54:31.557 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:54:31.562 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:31.564 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:24:31'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:54:31.576 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:54:31.609 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:54:31.682 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:54:31.693 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:54:31.696 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:00000091": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:54:31.727 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 170.4448ms
2024-12-09 11:54:35.960 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:54:35.963 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:35.966 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:24:35'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:54:35.974 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:54:36.013 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:54:36.082 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:54:36.098 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:54:36.100 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:00000093": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:54:36.122 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 162.9766ms
2024-12-09 11:54:38.455 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:54:38.460 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:38.462 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.022ms
2024-12-09 11:54:38.465 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:54:38.475 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:38.478 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:24:38'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:54:38.486 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:54:38.525 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:54:38.604 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:54:38.624 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:54:38.626 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:00000097": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:54:38.645 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 180.4996ms
2024-12-09 11:54:54.267 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:54:54.270 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:54.271 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.5985ms
2024-12-09 11:54:54.274 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:54:54.278 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:54:54.280 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:24:54'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:54:54.285 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:54:54.329 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:54:54.399 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:54:54.409 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:54:54.412 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:0000009B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:54:54.434 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 159.8865ms
2024-12-09 11:55:07.641 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:55:07.648 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:55:07.650 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.6469ms
2024-12-09 11:55:07.654 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:55:07.667 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:55:07.671 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:25:07'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:55:07.684 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:55:07.718 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:55:07.787 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:55:07.807 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:55:07.809 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:0000009F": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:55:07.833 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 178.9777ms
2024-12-09 11:55:09.195 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:55:09.198 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:55:09.203 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:25:09'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 11:55:09.225 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 11:55:09.258 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 11:55:09.332 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 11:55:09.340 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 11:55:09.343 +05:30 [ERR] Connection id "0HN8O22HBUD77", Request id "0HN8O22HBUD77:000000A1": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 11:55:09.361 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 165.7412ms
2024-12-09 11:55:29.349 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-09 11:55:29.358 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:55:29.361 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 12.4235ms
2024-12-09 11:55:29.366 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-09 11:55:29.377 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:55:29.381 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 11:55:29.393 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-09 11:55:29.459 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-09 11:55:29.463 +05:30 [INF] Checking if the user present
2024-12-09 11:55:29.467 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-09 11:55:29.520 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-09 11:55:29.550 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-09 11:55:29.553 +05:30 [INF] Verifying the password
2024-12-09 11:55:30.204 +05:30 [INF] Password is valid and token is generated
2024-12-09 11:55:30.206 +05:30 [INF] Login successful
2024-12-09 11:55:30.210 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 11:55:30.216 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 813.0163ms
2024-12-09 11:55:30.222 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 11:55:30.226 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 860.7368ms
2024-12-09 11:55:30.250 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:55:30.254 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:55:30.258 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.8316ms
2024-12-09 11:55:30.261 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:55:30.282 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:55:30.286 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:55:30.288 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:55:30.295 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:55:30.298 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:55:30.301 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 11:55:30.302 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 11:55:30.304 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 11:55:30.316 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 11:55:30.322 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 11:55:30.338 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 11:55:30.345 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 11:55:30.353 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 11:55:30.356 +05:30 [INF] Notes retrieved successfully
2024-12-09 11:55:30.357 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:55:30.364 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 68.9648ms
2024-12-09 11:55:30.367 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:55:30.369 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 107.2028ms
2024-12-09 11:56:14.766 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:56:14.779 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:56:14.781 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.7503ms
2024-12-09 11:56:14.785 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:56:14.798 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:56:14.803 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:56:14.808 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:56:14.815 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:56:14.821 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:56:14.824 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 11:56:14.826 +05:30 [INF] Deserializing the notes
2024-12-09 11:56:14.828 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:56:14.830 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.5307ms
2024-12-09 11:56:14.833 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:56:14.834 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.8482ms
2024-12-09 11:56:27.773 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:56:27.780 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:56:27.783 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.3599ms
2024-12-09 11:56:27.786 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:56:27.794 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:56:27.796 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:56:27.799 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:56:27.809 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:56:27.811 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:56:27.815 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 11:56:27.819 +05:30 [INF] Deserializing the notes
2024-12-09 11:56:27.822 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:56:27.832 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 23.4879ms
2024-12-09 11:56:27.836 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:56:27.838 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.4538ms
2024-12-09 11:56:30.064 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:56:30.067 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:56:30.069 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:56:30.070 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:56:30.073 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:56:30.076 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:56:30.079 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 11:56:30.081 +05:30 [INF] Deserializing the notes
2024-12-09 11:56:30.089 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:56:30.094 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.3883ms
2024-12-09 11:56:30.097 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:56:30.101 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.2986ms
2024-12-09 11:56:37.212 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 11:56:37.217 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:56:37.219 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 8.0191ms
2024-12-09 11:56:37.223 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 16
2024-12-09 11:56:37.231 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:56:37.240 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 11:56:37.250 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:56:37.260 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 11:56:37.264 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 6.7928ms
2024-12-09 11:56:37.268 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 11:56:37.270 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 400 null application/problem+json; charset=utf-8 47.1913ms
2024-12-09 11:56:50.759 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 11:56:50.765 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:56:50.766 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.2107ms
2024-12-09 11:56:50.770 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 11:56:50.779 +05:30 [INF] CORS policy execution successful.
2024-12-09 11:56:50.781 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:56:50.786 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 11:56:50.790 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 11:56:50.793 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 11:56:50.798 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 11:56:50.801 +05:30 [INF] Deserializing the notes
2024-12-09 11:56:50.805 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 11:56:50.808 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.3088ms
2024-12-09 11:56:50.811 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 11:56:50.812 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.1356ms
2024-12-09 12:00:03.163 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 12:00:03.177 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:00:03.179 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 16.6255ms
2024-12-09 12:00:03.183 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 18
2024-12-09 12:00:03.197 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:00:03.200 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:00:03.214 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:00:03.228 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 12:00:03.232 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 7.3808ms
2024-12-09 12:00:03.238 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:00:03.245 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 400 null application/problem+json; charset=utf-8 62.1561ms
2024-12-09 12:02:20.283 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 12:02:20.288 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:02:20.292 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 06:14:56', Current time (UTC): '09-12-2024 06:32:20'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 12:02:20.300 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 12:02:20.347 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 12:02:20.420 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 12:02:20.432 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 12:02:20.439 +05:30 [ERR] Connection id "0HN8O22HBUD76", Request id "0HN8O22HBUD76:00000029": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 12:02:20.464 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 401 null application/json 181.6069ms
2024-12-09 12:03:20.887 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 12:03:20.891 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:03:20.894 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:03:20.896 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:03:20.901 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 12:03:20.903 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 12:03:20.913 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 12:03:20.918 +05:30 [INF] Received isArchive value: False
2024-12-09 12:03:20.958 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:03:20.964 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:03:20.970 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 12:03:20.972 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 12:03:20.975 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:03:20.979 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 79.1802ms
2024-12-09 12:03:20.988 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:03:20.991 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 104.2955ms
2024-12-09 12:04:15.991 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:04:16.001 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:04:16.003 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.8466ms
2024-12-09 12:04:16.007 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:04:16.010 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:04:16.011 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:04:16.012 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:04:16.015 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:04:16.024 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:04:16.027 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:04:16.029 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:04:16.031 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:04:16.052 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:04:16.060 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:04:16.079 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:04:16.084 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:04:16.086 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:04:16.088 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:04:16.090 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:04:16.093 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 78.6007ms
2024-12-09 12:04:16.095 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:04:16.097 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 90.2574ms
2024-12-09 12:04:37.766 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:04:37.781 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:04:37.785 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 19.3347ms
2024-12-09 12:04:37.788 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:04:37.805 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:04:37.809 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:04:37.812 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:04:37.823 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:04:37.828 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:04:37.831 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:04:37.835 +05:30 [INF] Deserializing the notes
2024-12-09 12:04:37.837 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:04:37.845 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 23.2513ms
2024-12-09 12:04:37.850 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:04:37.854 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 65.3734ms
2024-12-09 12:04:40.519 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 12:04:40.524 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:04:40.528 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 9.1823ms
2024-12-09 12:04:40.531 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 12:04:40.548 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:04:40.550 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:04:40.551 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:04:40.558 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 12:04:40.561 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 12:04:40.565 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 12:04:40.571 +05:30 [INF] Received isArchive value: True
2024-12-09 12:04:40.589 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:04:40.602 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:04:40.617 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 12:04:40.631 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 12:04:40.634 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 12:04:40.637 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:04:40.640 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 83.3017ms
2024-12-09 12:04:40.650 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:04:40.653 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 122.155ms
2024-12-09 12:06:24.328 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:06:24.332 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:06:24.335 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.0126ms
2024-12-09 12:06:24.342 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:06:24.355 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:06:24.357 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:06:24.358 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:06:24.366 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:06:24.369 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:06:24.372 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:06:24.374 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:06:24.377 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:06:24.397 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:06:24.402 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:06:24.431 +05:30 [INF] Executed DbCommand (26ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:06:24.464 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:06:24.465 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:06:24.469 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:06:24.476 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:06:24.478 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 112.3379ms
2024-12-09 12:06:24.480 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:06:24.488 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 145.9686ms
2024-12-09 12:07:02.507 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:07:02.512 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:07:02.514 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.0233ms
2024-12-09 12:07:02.517 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:07:02.527 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:07:02.529 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:07:02.532 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:07:02.535 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:07:02.544 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:07:02.546 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:07:02.548 +05:30 [INF] Deserializing the notes
2024-12-09 12:07:02.550 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:07:02.553 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.1764ms
2024-12-09 12:07:02.556 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:07:02.562 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.7868ms
2024-12-09 12:07:04.057 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 12:07:04.064 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:07:04.068 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 10.9758ms
2024-12-09 12:07:04.073 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 12:07:04.086 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:07:04.088 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:07:04.091 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:07:04.101 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 12:07:04.105 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 12:07:04.110 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 12:07:04.113 +05:30 [INF] Received isArchive value: True
2024-12-09 12:07:04.136 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:07:04.150 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:07:04.157 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 12:07:04.160 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 12:07:04.164 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:07:04.168 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 67.772ms
2024-12-09 12:07:04.177 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:07:04.180 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 107.4595ms
2024-12-09 12:07:16.529 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:07:16.534 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:07:16.538 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.7951ms
2024-12-09 12:07:16.542 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:07:16.568 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:07:16.571 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:07:16.572 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:07:16.581 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:07:16.583 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:07:16.586 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:07:16.588 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:07:16.591 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:07:16.595 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:07:16.598 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:07:16.616 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:07:16.628 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:07:16.632 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:07:16.635 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:07:16.638 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:07:16.643 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 61.9622ms
2024-12-09 12:07:16.650 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:07:16.655 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 112.9092ms
2024-12-09 12:07:19.392 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:07:19.397 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:07:19.399 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:07:19.408 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:07:19.419 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:07:19.423 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:07:19.427 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:07:19.428 +05:30 [INF] Deserializing the notes
2024-12-09 12:07:19.430 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:07:19.435 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.9136ms
2024-12-09 12:07:19.444 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:07:19.448 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 56.8384ms
2024-12-09 12:07:20.842 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:07:20.847 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:07:20.851 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:07:20.854 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:07:20.863 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:07:20.869 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:07:20.872 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:07:20.877 +05:30 [INF] Deserializing the notes
2024-12-09 12:07:20.878 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:07:20.881 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.2176ms
2024-12-09 12:07:20.886 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:07:20.889 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.4471ms
2024-12-09 12:07:33.085 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:07:33.092 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:07:33.095 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.2776ms
2024-12-09 12:07:33.098 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:07:33.112 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:07:33.114 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:07:33.116 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:07:33.127 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:07:33.130 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:07:33.132 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:07:33.134 +05:30 [INF] Deserializing the notes
2024-12-09 12:07:33.138 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:07:33.141 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.5896ms
2024-12-09 12:07:33.146 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:07:33.147 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.5189ms
2024-12-09 12:11:01.422 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:11:01.425 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:11:01.427 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.5684ms
2024-12-09 12:11:01.439 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:11:01.447 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:11:01.450 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:11:01.457 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:11:01.464 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:11:01.468 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:11:01.473 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:11:01.475 +05:30 [INF] Deserializing the notes
2024-12-09 12:11:01.478 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:11:01.491 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 27.2514ms
2024-12-09 12:11:01.493 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:11:01.495 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 57.9874ms
2024-12-09 12:11:27.682 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-09 12:11:27.698 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:11:27.700 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 18.3865ms
2024-12-09 12:11:27.703 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-09 12:11:27.714 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:11:27.717 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 12:11:27.722 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-09 12:11:27.753 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-09 12:11:27.755 +05:30 [INF] Checking if the user present
2024-12-09 12:11:27.762 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-09 12:11:27.781 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-09 12:11:27.788 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-09 12:11:27.790 +05:30 [INF] Verifying the password
2024-12-09 12:11:28.140 +05:30 [INF] Password is valid and token is generated
2024-12-09 12:11:28.143 +05:30 [INF] Login successful
2024-12-09 12:11:28.145 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 12:11:28.149 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 421.4784ms
2024-12-09 12:11:28.151 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 12:11:28.153 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 450.1322ms
2024-12-09 12:11:28.179 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:11:28.186 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:11:28.191 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.8185ms
2024-12-09 12:11:28.194 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:11:28.210 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:11:28.214 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:11:28.219 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:11:28.228 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:11:28.236 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:11:28.240 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:11:28.244 +05:30 [INF] Deserializing the notes
2024-12-09 12:11:28.247 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:11:28.253 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.0213ms
2024-12-09 12:11:28.259 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:11:28.261 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 67.4489ms
2024-12-09 12:11:36.293 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 12:11:36.297 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:11:36.299 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 6.9384ms
2024-12-09 12:11:36.303 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 4
2024-12-09 12:11:36.312 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:11:36.314 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 12:11:36.319 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:11:36.329 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 12:11:36.334 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 12:11:36.351 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:11:36.365 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:11:36.379 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 12:11:36.386 +05:30 [INF] Note with ID: 1026 trash status updated to true
2024-12-09 12:11:36.389 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 12:11:36.392 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:11:36.396 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 69.6159ms
2024-12-09 12:11:36.404 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 12:11:36.406 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 103.4214ms
2024-12-09 12:11:57.209 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:11:57.213 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:11:57.215 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.8899ms
2024-12-09 12:11:57.219 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:11:57.227 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:11:57.229 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:11:57.247 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:11:57.253 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:11:57.255 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:11:57.257 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:11:57.264 +05:30 [INF] Deserializing the notes
2024-12-09 12:11:57.267 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:11:57.270 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.6438ms
2024-12-09 12:11:57.272 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:11:57.274 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 55.345ms
2024-12-09 12:11:57.471 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:11:57.476 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:11:57.478 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:11:57.479 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:11:57.483 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:11:57.490 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:11:57.492 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:11:57.494 +05:30 [INF] Deserializing the notes
2024-12-09 12:11:57.496 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:11:57.500 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.6555ms
2024-12-09 12:11:57.502 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:11:57.503 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.6462ms
2024-12-09 12:12:01.285 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:12:01.290 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:01.291 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:01.293 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:01.297 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:12:01.299 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:12:01.301 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:12:01.302 +05:30 [INF] Deserializing the notes
2024-12-09 12:12:01.304 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:01.306 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.1726ms
2024-12-09 12:12:01.316 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:01.318 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.6374ms
2024-12-09 12:12:04.979 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:12:04.983 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:04.985 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.7062ms
2024-12-09 12:12:04.988 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:12:04.993 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:04.995 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:04.997 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:05.002 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:12:05.010 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:12:05.013 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:12:05.015 +05:30 [INF] Deserializing the notes
2024-12-09 12:12:05.017 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:05.023 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.6547ms
2024-12-09 12:12:05.027 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:05.029 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.4932ms
2024-12-09 12:12:05.799 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:12:05.803 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:05.805 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:05.807 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:05.813 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:12:05.815 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:12:05.818 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:12:05.819 +05:30 [INF] Deserializing the notes
2024-12-09 12:12:05.830 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:05.834 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.0109ms
2024-12-09 12:12:05.836 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:05.840 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.7309ms
2024-12-09 12:12:21.024 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:12:21.034 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:21.038 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.9986ms
2024-12-09 12:12:21.044 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:12:21.056 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:21.060 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:21.063 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:21.079 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:12:21.083 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:12:21.086 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:12:21.095 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:12:21.097 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:12:21.117 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:12:21.129 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:12:21.151 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:12:21.158 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:12:21.160 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:12:21.169 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:12:21.171 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:21.175 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 96.8239ms
2024-12-09 12:12:21.179 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:21.182 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 138.8363ms
2024-12-09 12:12:23.533 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 12:12:23.541 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:23.544 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 11.3406ms
2024-12-09 12:12:23.547 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 12:12:23.563 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:23.565 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 12:12:23.568 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:23.577 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 12:12:23.581 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 12:12:23.590 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:12:23.609 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:12:23.625 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 12:12:23.631 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 12:12:23.632 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 12:12:23.634 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:23.635 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 59.5205ms
2024-12-09 12:12:23.643 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 12:12:23.648 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 101.7677ms
2024-12-09 12:12:26.055 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:12:26.061 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:26.065 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.039ms
2024-12-09 12:12:26.069 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:12:26.094 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:26.096 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:26.098 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:26.101 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:12:26.103 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:12:26.108 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:12:26.110 +05:30 [INF] Deserializing the notes
2024-12-09 12:12:26.112 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:26.114 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.6821ms
2024-12-09 12:12:26.120 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:26.127 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 57.893ms
2024-12-09 12:12:28.825 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:12:28.829 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:28.833 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:28.836 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:28.842 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:12:28.845 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:12:28.852 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:12:28.858 +05:30 [INF] Deserializing the notes
2024-12-09 12:12:28.863 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:28.867 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.7634ms
2024-12-09 12:12:28.870 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:12:28.871 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:28.879 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:28.880 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 55.2232ms
2024-12-09 12:12:28.883 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:28.899 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:28.908 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:12:28.910 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:12:28.912 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:12:28.914 +05:30 [INF] Deserializing the notes
2024-12-09 12:12:28.915 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:28.917 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.998ms
2024-12-09 12:12:28.924 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:28.927 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 57.1666ms
2024-12-09 12:12:31.635 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 12:12:31.646 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:31.650 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 15.0996ms
2024-12-09 12:12:31.654 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 12:12:31.662 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:31.666 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 12:12:31.668 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:31.671 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 12:12:31.673 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 12:12:31.678 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:12:31.688 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:12:31.693 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 12:12:31.700 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 12:12:31.704 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:31.707 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 35.9665ms
2024-12-09 12:12:31.709 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 12:12:31.711 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 57.7638ms
2024-12-09 12:12:34.176 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:12:34.181 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:34.182 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.2209ms
2024-12-09 12:12:34.188 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:12:34.197 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:34.200 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:34.205 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:34.212 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:12:34.213 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:12:34.216 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:12:34.218 +05:30 [INF] Deserializing the notes
2024-12-09 12:12:34.220 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:34.223 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.7506ms
2024-12-09 12:12:34.229 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:34.231 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.5573ms
2024-12-09 12:12:35.604 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:12:35.609 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:35.611 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:35.613 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:35.619 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:12:35.625 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:12:35.630 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:12:35.632 +05:30 [INF] Deserializing the notes
2024-12-09 12:12:35.634 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:35.637 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.6395ms
2024-12-09 12:12:35.639 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:35.640 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.3514ms
2024-12-09 12:12:37.381 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:12:37.389 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:37.393 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:37.400 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:37.416 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:12:37.423 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:12:37.427 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:12:37.429 +05:30 [INF] Deserializing the notes
2024-12-09 12:12:37.432 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:37.442 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 26.5715ms
2024-12-09 12:12:37.450 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:37.454 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 72.5877ms
2024-12-09 12:12:38.248 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:12:38.258 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:38.265 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:38.275 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:38.280 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:12:38.282 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:12:38.285 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:12:38.286 +05:30 [INF] Deserializing the notes
2024-12-09 12:12:38.288 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:38.290 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.5108ms
2024-12-09 12:12:38.291 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:12:38.301 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 53.5286ms
2024-12-09 12:12:40.817 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 12:12:40.825 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:40.827 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 10.2009ms
2024-12-09 12:12:40.829 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 12:12:40.836 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:12:40.838 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 12:12:40.839 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:12:40.850 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 12:12:40.855 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 12:12:40.865 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:12:40.875 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:12:40.885 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 12:12:40.888 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 12:12:40.890 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:12:40.891 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 42.3468ms
2024-12-09 12:12:40.900 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 12:12:40.904 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 74.5353ms
2024-12-09 12:14:27.785 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:14:27.797 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:14:27.799 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.58ms
2024-12-09 12:14:27.802 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:14:27.808 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:14:27.816 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:14:27.818 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:14:27.822 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:14:27.824 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:14:27.826 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:14:27.832 +05:30 [INF] Deserializing the notes
2024-12-09 12:14:27.839 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:14:27.842 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.9619ms
2024-12-09 12:14:27.845 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:14:27.848 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.0995ms
2024-12-09 12:14:28.320 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:14:28.325 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:14:28.327 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:14:28.329 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:14:28.332 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:14:28.335 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:14:28.337 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:14:28.338 +05:30 [INF] Deserializing the notes
2024-12-09 12:14:28.339 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:14:28.348 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.0245ms
2024-12-09 12:14:28.351 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:14:28.353 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.9298ms
2024-12-09 12:15:03.410 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:15:03.415 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:03.417 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7566ms
2024-12-09 12:15:03.421 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:15:03.432 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:03.435 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:03.439 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:15:03.443 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:15:03.450 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:15:03.453 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:15:03.455 +05:30 [INF] Deserializing the notes
2024-12-09 12:15:03.457 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:15:03.460 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.8992ms
2024-12-09 12:15:03.468 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:03.472 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.4688ms
2024-12-09 12:15:21.480 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:15:21.485 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:21.487 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.1174ms
2024-12-09 12:15:21.490 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:15:21.499 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:21.502 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:21.509 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:15:21.514 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:15:21.517 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:15:21.523 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:15:21.527 +05:30 [INF] Deserializing the notes
2024-12-09 12:15:21.530 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:15:21.537 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 23.3243ms
2024-12-09 12:15:21.545 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:21.549 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 59.2967ms
2024-12-09 12:15:30.886 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:15:30.895 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:30.899 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.517ms
2024-12-09 12:15:30.903 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:15:30.913 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:30.916 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:30.921 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:15:30.927 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:15:30.931 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:15:30.935 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:15:30.937 +05:30 [INF] Deserializing the notes
2024-12-09 12:15:30.940 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:15:30.946 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.4732ms
2024-12-09 12:15:30.949 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:30.951 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.9267ms
2024-12-09 12:15:35.412 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:15:35.422 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:35.427 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:35.429 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:15:35.437 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:15:35.443 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:15:35.450 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:15:35.452 +05:30 [INF] Deserializing the notes
2024-12-09 12:15:35.456 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:15:35.460 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 23.4651ms
2024-12-09 12:15:35.462 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:35.466 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.0955ms
2024-12-09 12:15:37.773 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 12:15:37.779 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:37.781 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 8.1312ms
2024-12-09 12:15:37.784 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 12:15:37.798 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:37.799 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 12:15:37.802 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:15:37.812 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 12:15:37.816 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 12:15:37.832 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:15:37.840 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:15:37.847 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 12:15:37.850 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 12:15:37.853 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:15:37.860 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 49.363ms
2024-12-09 12:15:37.863 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 12:15:37.866 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 81.7974ms
2024-12-09 12:15:40.674 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:15:40.680 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:40.687 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.0924ms
2024-12-09 12:15:40.691 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:15:40.709 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:40.711 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:40.715 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:15:40.719 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:15:40.722 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:15:40.723 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:15:40.725 +05:30 [INF] Deserializing the notes
2024-12-09 12:15:40.726 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:15:40.728 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7283ms
2024-12-09 12:15:40.731 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:40.741 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 50.1527ms
2024-12-09 12:15:42.700 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:15:42.705 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:42.713 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:42.720 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:15:42.732 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:15:42.745 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:15:42.746 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:15:42.748 +05:30 [INF] Deserializing the notes
2024-12-09 12:15:42.749 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:15:42.752 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.4661ms
2024-12-09 12:15:42.763 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:42.765 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 65.0315ms
2024-12-09 12:15:46.470 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 12:15:46.476 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:46.480 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 10.0515ms
2024-12-09 12:15:46.482 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 4
2024-12-09 12:15:46.498 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:46.500 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 12:15:46.505 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:15:46.510 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 12:15:46.511 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 12:15:46.518 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:15:46.536 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:15:46.545 +05:30 [INF] Note with ID: 1026 trash status updated to true
2024-12-09 12:15:46.548 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 12:15:46.552 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:15:46.556 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 46.6452ms
2024-12-09 12:15:46.565 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 12:15:46.569 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 86.6545ms
2024-12-09 12:15:47.854 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:15:47.860 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:47.868 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.9321ms
2024-12-09 12:15:47.872 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:15:47.885 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:47.890 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:47.894 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:15:47.900 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:15:47.908 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:15:47.911 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:15:47.912 +05:30 [INF] Deserializing the notes
2024-12-09 12:15:47.916 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:15:47.920 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.68ms
2024-12-09 12:15:47.924 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:47.926 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.5767ms
2024-12-09 12:15:49.301 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:15:49.310 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:15:49.317 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:49.327 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:15:49.332 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:15:49.334 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:15:49.338 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:15:49.342 +05:30 [INF] Deserializing the notes
2024-12-09 12:15:49.344 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:15:49.346 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.6183ms
2024-12-09 12:15:49.348 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:15:49.356 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 55.6271ms
2024-12-09 12:19:44.301 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:19:44.307 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:19:44.309 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.1334ms
2024-12-09 12:19:44.312 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:19:44.325 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:19:44.328 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:19:44.335 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:19:44.341 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:19:44.344 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:19:44.350 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:19:44.352 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:19:44.356 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:19:44.367 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:19:44.377 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:19:44.400 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:19:44.409 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:19:44.418 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:19:44.424 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:19:44.427 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:19:44.431 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 89.5136ms
2024-12-09 12:19:44.433 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:19:44.437 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:19:44.445 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:19:44.448 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 135.9196ms
2024-12-09 12:19:44.460 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:19:44.470 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:19:44.475 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:19:44.478 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:19:44.480 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:19:44.481 +05:30 [INF] Deserializing the notes
2024-12-09 12:19:44.484 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:19:44.487 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.2163ms
2024-12-09 12:19:44.495 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:19:44.497 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 63.8033ms
2024-12-09 12:22:28.046 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:22:28.051 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:22:28.053 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.7429ms
2024-12-09 12:22:28.057 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:22:28.070 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:22:28.072 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:22:28.075 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:22:28.083 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:22:28.091 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:22:28.093 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:22:28.096 +05:30 [INF] Deserializing the notes
2024-12-09 12:22:28.099 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:22:28.108 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.9773ms
2024-12-09 12:22:28.112 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:22:28.114 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 57.1376ms
2024-12-09 12:26:13.988 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:26:13.993 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:26:13.995 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.9526ms
2024-12-09 12:26:13.998 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:26:14.011 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:26:14.013 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:14.018 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:26:14.025 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:26:14.027 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:26:14.029 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:26:14.030 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:26:14.032 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:26:14.071 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:26:14.077 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:26:14.082 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:26:14.087 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:26:14.088 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:26:14.098 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:26:14.099 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:26:14.101 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 76.7355ms
2024-12-09 12:26:14.103 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:14.105 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 106.7625ms
2024-12-09 12:26:14.404 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:26:14.411 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:26:14.413 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:14.415 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:26:14.422 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:26:14.427 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:26:14.430 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:26:14.434 +05:30 [INF] Deserializing the notes
2024-12-09 12:26:14.437 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:26:14.447 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.4907ms
2024-12-09 12:26:14.452 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:14.456 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.882ms
2024-12-09 12:26:16.074 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:26:16.080 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:26:16.082 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:16.089 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:26:16.096 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:26:16.100 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:26:16.105 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:26:16.109 +05:30 [INF] Deserializing the notes
2024-12-09 12:26:16.111 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:26:16.114 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.0014ms
2024-12-09 12:26:16.116 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:26:16.119 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:16.124 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:26:16.126 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.1321ms
2024-12-09 12:26:16.137 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:16.150 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:26:16.154 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:26:16.158 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:26:16.165 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:26:16.167 +05:30 [INF] Deserializing the notes
2024-12-09 12:26:16.170 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:26:16.174 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.597ms
2024-12-09 12:26:16.176 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:16.179 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 63.2766ms
2024-12-09 12:26:57.806 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:26:57.811 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:26:57.814 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.9938ms
2024-12-09 12:26:57.817 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:26:57.828 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:26:57.831 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:57.834 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:26:57.839 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:26:57.842 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:26:57.848 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:26:57.851 +05:30 [INF] Deserializing the notes
2024-12-09 12:26:57.853 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:26:57.856 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.6716ms
2024-12-09 12:26:57.864 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:57.872 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.7673ms
2024-12-09 12:26:57.949 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:26:57.952 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:26:57.953 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:57.954 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:26:57.958 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:26:57.962 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:26:57.964 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:26:57.966 +05:30 [INF] Deserializing the notes
2024-12-09 12:26:57.967 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:26:57.978 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.9496ms
2024-12-09 12:26:57.982 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:57.987 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 38.6588ms
2024-12-09 12:26:59.602 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:26:59.607 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:26:59.610 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:59.612 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:26:59.617 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:26:59.620 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:26:59.628 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:26:59.630 +05:30 [INF] Deserializing the notes
2024-12-09 12:26:59.633 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:26:59.637 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.9714ms
2024-12-09 12:26:59.638 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:26:59.640 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:59.644 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:26:59.646 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.6285ms
2024-12-09 12:26:59.653 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:59.660 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:26:59.665 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:26:59.667 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:26:59.671 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:26:59.674 +05:30 [INF] Deserializing the notes
2024-12-09 12:26:59.676 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:26:59.680 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.4683ms
2024-12-09 12:26:59.682 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:26:59.684 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.4296ms
2024-12-09 12:27:00.759 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:27:00.763 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:00.766 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:00.767 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:27:00.778 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:27:00.781 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:27:00.784 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:27:00.786 +05:30 [INF] Deserializing the notes
2024-12-09 12:27:00.788 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:27:00.799 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.8816ms
2024-12-09 12:27:00.802 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:27:00.802 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:00.806 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:00.814 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 55.4697ms
2024-12-09 12:27:00.816 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:00.827 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:27:00.831 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:27:00.833 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:27:00.838 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:27:00.841 +05:30 [INF] Deserializing the notes
2024-12-09 12:27:00.843 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:27:00.845 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.8783ms
2024-12-09 12:27:00.848 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:00.849 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.7568ms
2024-12-09 12:27:20.607 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:27:20.610 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:20.613 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.6206ms
2024-12-09 12:27:20.617 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:27:20.626 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:20.629 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:20.633 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:27:20.641 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:27:20.646 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:27:20.648 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:27:20.654 +05:30 [INF] Deserializing the notes
2024-12-09 12:27:20.656 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:27:20.661 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.5388ms
2024-12-09 12:27:20.663 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:20.663 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:27:20.670 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 53.2457ms
2024-12-09 12:27:20.673 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:20.679 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:20.681 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:27:20.688 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:27:20.691 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:27:20.692 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:27:20.694 +05:30 [INF] Deserializing the notes
2024-12-09 12:27:20.696 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:27:20.698 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.2083ms
2024-12-09 12:27:20.700 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:20.702 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.1525ms
2024-12-09 12:27:21.177 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:27:21.180 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:21.182 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:21.184 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:27:21.188 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:27:21.194 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:27:21.197 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:27:21.204 +05:30 [INF] Deserializing the notes
2024-12-09 12:27:21.208 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:27:21.213 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 24.4585ms
2024-12-09 12:27:21.215 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:21.218 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.5518ms
2024-12-09 12:27:21.260 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:27:21.263 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:21.264 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:21.265 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:27:21.269 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:27:21.275 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:27:21.277 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:27:21.278 +05:30 [INF] Deserializing the notes
2024-12-09 12:27:21.280 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:27:21.288 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.7461ms
2024-12-09 12:27:21.291 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:21.293 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.5754ms
2024-12-09 12:27:42.896 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:27:42.899 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:42.901 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.9725ms
2024-12-09 12:27:42.904 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:27:42.910 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:42.911 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:42.913 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:27:42.923 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:27:42.926 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:27:42.928 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:27:42.930 +05:30 [INF] Deserializing the notes
2024-12-09 12:27:42.935 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:27:42.938 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.2082ms
2024-12-09 12:27:42.940 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:27:42.941 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:42.950 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:42.951 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.0714ms
2024-12-09 12:27:42.957 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:42.968 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:27:42.973 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:27:42.976 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:27:42.978 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:27:42.979 +05:30 [INF] Deserializing the notes
2024-12-09 12:27:42.982 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:27:42.985 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.0516ms
2024-12-09 12:27:42.987 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:42.993 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 53.2458ms
2024-12-09 12:27:45.015 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:27:45.018 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:45.020 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:45.022 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:27:45.032 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:27:45.035 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:27:45.038 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:27:45.045 +05:30 [INF] Deserializing the notes
2024-12-09 12:27:45.049 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:27:45.052 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.2252ms
2024-12-09 12:27:45.054 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:27:45.054 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:45.059 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:45.061 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.2383ms
2024-12-09 12:27:45.068 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:45.082 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:27:45.088 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:27:45.097 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:27:45.099 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:27:45.100 +05:30 [INF] Deserializing the notes
2024-12-09 12:27:45.101 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:27:45.104 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.3231ms
2024-12-09 12:27:45.105 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:45.107 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 53.2569ms
2024-12-09 12:27:46.336 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:27:46.340 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:46.342 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:46.345 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:27:46.350 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:27:46.353 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:27:46.358 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:27:46.361 +05:30 [INF] Deserializing the notes
2024-12-09 12:27:46.363 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:27:46.367 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.1676ms
2024-12-09 12:27:46.369 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:27:46.370 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:46.380 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:27:46.382 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.8081ms
2024-12-09 12:27:46.384 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:46.390 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:27:46.399 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:27:46.404 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:27:46.406 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:27:46.408 +05:30 [INF] Deserializing the notes
2024-12-09 12:27:46.409 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:27:46.412 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.0129ms
2024-12-09 12:27:46.418 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:27:46.422 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.9749ms
2024-12-09 12:28:00.303 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:28:00.308 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:28:00.311 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.0229ms
2024-12-09 12:28:00.317 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:28:00.331 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:28:00.333 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:28:00.334 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:28:00.342 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:28:00.346 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:28:00.349 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:28:00.350 +05:30 [INF] Deserializing the notes
2024-12-09 12:28:00.354 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:28:00.357 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.5448ms
2024-12-09 12:28:00.360 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:28:00.362 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.3564ms
2024-12-09 12:28:07.454 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:28:07.459 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:28:07.464 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.1832ms
2024-12-09 12:28:07.470 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:28:07.489 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:28:07.491 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:28:07.494 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:28:07.496 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:28:07.500 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:28:07.508 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:28:07.511 +05:30 [INF] Deserializing the notes
2024-12-09 12:28:07.514 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:28:07.517 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.7154ms
2024-12-09 12:28:07.520 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:28:07.523 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 53.8857ms
2024-12-09 12:28:34.470 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:28:34.474 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:28:34.480 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.9728ms
2024-12-09 12:28:34.486 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:28:34.501 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:28:34.503 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:28:34.506 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:28:34.514 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:28:34.520 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:28:34.524 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:28:34.526 +05:30 [INF] Deserializing the notes
2024-12-09 12:28:34.531 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:28:34.535 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.37ms
2024-12-09 12:28:34.542 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:28:34.550 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 63.4337ms
2024-12-09 12:28:36.404 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:28:36.409 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:28:36.411 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:28:36.413 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:28:36.433 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:28:36.436 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:28:36.439 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:28:36.441 +05:30 [INF] Deserializing the notes
2024-12-09 12:28:36.447 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:28:36.451 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.0741ms
2024-12-09 12:28:36.454 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:28:36.456 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.7613ms
2024-12-09 12:29:42.078 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 12:29:42.091 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:29:42.092 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 14.5156ms
2024-12-09 12:29:42.095 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 12:29:42.112 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:29:42.113 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:29:42.115 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:29:42.118 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 12:29:42.120 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 12:29:42.121 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 12:29:42.123 +05:30 [INF] Received isArchive value: True
2024-12-09 12:29:42.136 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:29:42.145 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:29:42.159 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 12:29:42.160 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 12:29:42.162 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:29:42.166 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 47.9825ms
2024-12-09 12:29:42.170 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:29:42.177 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 81.9956ms
2024-12-09 12:29:44.632 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:29:44.637 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:29:44.639 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.3923ms
2024-12-09 12:29:44.643 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:29:44.656 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:29:44.658 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:29:44.662 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:29:44.673 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:29:44.677 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:29:44.680 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:29:44.685 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:29:44.689 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:29:44.696 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:29:44.707 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:29:44.715 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:29:44.723 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:29:44.724 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:29:44.726 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:29:44.728 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:29:44.738 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 64.8612ms
2024-12-09 12:29:44.743 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:29:44.745 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 102.7699ms
2024-12-09 12:29:47.284 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:29:47.294 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:29:47.300 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:29:47.305 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:29:47.312 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:29:47.316 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:29:47.319 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:29:47.321 +05:30 [INF] Deserializing the notes
2024-12-09 12:29:47.323 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:29:47.325 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.4833ms
2024-12-09 12:29:47.327 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:29:47.333 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.8495ms
2024-12-09 12:31:21.015 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:31:21.028 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:21.029 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.7359ms
2024-12-09 12:31:21.032 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:31:21.042 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:21.044 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:21.052 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:31:21.092 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:31:21.095 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:31:21.110 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:31:21.112 +05:30 [INF] Deserializing the notes
2024-12-09 12:31:21.117 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:31:21.126 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 34.4195ms
2024-12-09 12:31:21.130 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:21.133 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 100.3803ms
2024-12-09 12:31:21.444 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:31:21.450 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:21.455 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:21.459 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:31:21.462 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:31:21.465 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:31:21.480 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:31:21.490 +05:30 [INF] Deserializing the notes
2024-12-09 12:31:21.498 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:31:21.508 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 45.8808ms
2024-12-09 12:31:21.515 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:21.517 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 73.6154ms
2024-12-09 12:31:26.039 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 12:31:26.045 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:26.048 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 8.6992ms
2024-12-09 12:31:26.056 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 12:31:26.071 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:26.072 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:31:26.076 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:31:26.085 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 12:31:26.089 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 12:31:26.090 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 12:31:26.093 +05:30 [INF] Received isArchive value: True
2024-12-09 12:31:26.119 +05:30 [INF] Executed DbCommand (20ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:31:26.128 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:31:26.136 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 12:31:26.138 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 12:31:26.140 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:31:26.142 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 57.7972ms
2024-12-09 12:31:26.146 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:31:26.148 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 92.9639ms
2024-12-09 12:31:28.485 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:31:28.492 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:28.496 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.6389ms
2024-12-09 12:31:28.500 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:31:28.515 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:28.519 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:28.525 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:31:28.530 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:31:28.536 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:31:28.538 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:31:28.540 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:31:28.541 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:31:28.545 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:31:28.553 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:31:28.562 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:31:28.569 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:31:28.573 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:31:28.575 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:31:28.580 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:31:28.585 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 54.4449ms
2024-12-09 12:31:28.590 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:28.592 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 91.6373ms
2024-12-09 12:31:29.722 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:31:29.726 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:29.731 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:29.737 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:31:29.744 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:31:29.748 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:31:29.751 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:31:29.756 +05:30 [INF] Deserializing the notes
2024-12-09 12:31:29.759 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:31:29.767 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 23.7271ms
2024-12-09 12:31:29.770 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:29.771 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.7309ms
2024-12-09 12:31:43.769 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:31:43.775 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:43.778 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.1975ms
2024-12-09 12:31:43.781 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:31:43.789 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:43.792 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:43.799 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:31:43.803 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:31:43.806 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:31:43.808 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:31:43.810 +05:30 [INF] Deserializing the notes
2024-12-09 12:31:43.812 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:31:43.816 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.6126ms
2024-12-09 12:31:43.818 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:31:43.823 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:43.826 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:43.828 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.3875ms
2024-12-09 12:31:43.830 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:43.837 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:31:43.842 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:31:43.850 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:31:43.852 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:31:43.854 +05:30 [INF] Deserializing the notes
2024-12-09 12:31:43.856 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:31:43.867 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.3659ms
2024-12-09 12:31:43.869 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:43.871 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 53.3132ms
2024-12-09 12:31:56.850 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:31:56.854 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:56.855 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.04ms
2024-12-09 12:31:56.864 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:31:56.868 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:56.870 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:56.877 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:31:56.883 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:31:56.886 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:31:56.888 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:31:56.889 +05:30 [INF] Deserializing the notes
2024-12-09 12:31:56.891 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:31:56.899 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.013ms
2024-12-09 12:31:56.901 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:56.902 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:31:56.908 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.1198ms
2024-12-09 12:31:56.916 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:31:56.924 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:56.926 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:31:56.930 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:31:56.932 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:31:56.939 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:31:56.941 +05:30 [INF] Deserializing the notes
2024-12-09 12:31:56.944 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:31:56.947 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.9844ms
2024-12-09 12:31:56.949 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:31:56.951 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.6723ms
2024-12-09 12:31:59.998 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:00.002 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:00.004 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:00.006 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:00.013 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:00.015 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:00.024 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:32:00.027 +05:30 [INF] Deserializing the notes
2024-12-09 12:32:00.031 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:00.046 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 32.5873ms
2024-12-09 12:32:00.051 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:00.060 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:00.052 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:00.068 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:00.069 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 71.3659ms
2024-12-09 12:32:00.074 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:00.085 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:00.087 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:00.094 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:32:00.096 +05:30 [INF] Deserializing the notes
2024-12-09 12:32:00.098 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:00.104 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.2105ms
2024-12-09 12:32:00.111 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:00.113 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 61.9971ms
2024-12-09 12:32:05.062 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:32:05.066 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:05.068 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.5505ms
2024-12-09 12:32:05.071 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:05.076 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:05.078 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:05.084 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:05.093 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:05.096 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:05.100 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:32:05.102 +05:30 [INF] Deserializing the notes
2024-12-09 12:32:05.107 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:05.109 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.0094ms
2024-12-09 12:32:05.112 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:05.113 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:05.123 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:05.117 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.4195ms
2024-12-09 12:32:05.124 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:05.134 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:05.142 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:05.144 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:05.149 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:32:05.151 +05:30 [INF] Deserializing the notes
2024-12-09 12:32:05.156 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:05.159 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.9716ms
2024-12-09 12:32:05.162 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:05.169 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 56.3765ms
2024-12-09 12:32:08.007 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:08.010 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:08.012 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:08.014 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:08.024 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:08.027 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:08.030 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:32:08.032 +05:30 [INF] Deserializing the notes
2024-12-09 12:32:08.034 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:08.042 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.8658ms
2024-12-09 12:32:08.045 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:08.046 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:08.050 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:08.052 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.485ms
2024-12-09 12:32:08.053 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:08.063 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:08.070 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:08.073 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:08.074 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:32:08.078 +05:30 [INF] Deserializing the notes
2024-12-09 12:32:08.080 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:08.087 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.2795ms
2024-12-09 12:32:08.093 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:08.094 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.304ms
2024-12-09 12:32:08.685 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:08.690 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:08.692 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:08.694 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:08.702 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:08.706 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:08.709 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:32:08.715 +05:30 [INF] Deserializing the notes
2024-12-09 12:32:08.717 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:08.722 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.2987ms
2024-12-09 12:32:08.726 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:08.729 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:08.733 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:08.737 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.901ms
2024-12-09 12:32:08.740 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:08.750 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:08.756 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:08.759 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:08.761 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:32:08.763 +05:30 [INF] Deserializing the notes
2024-12-09 12:32:08.765 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:08.775 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.2124ms
2024-12-09 12:32:08.777 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:08.779 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.7203ms
2024-12-09 12:32:16.865 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:32:16.868 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:16.870 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8711ms
2024-12-09 12:32:16.874 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:16.876 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:16.878 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:16.880 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:16.889 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:16.896 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:16.898 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:32:16.899 +05:30 [INF] Deserializing the notes
2024-12-09 12:32:16.900 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:16.901 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.9905ms
2024-12-09 12:32:16.903 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:16.907 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.8935ms
2024-12-09 12:32:19.160 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 12:32:19.164 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:19.166 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 6.3037ms
2024-12-09 12:32:19.169 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 12:32:19.180 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:19.183 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:32:19.187 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:19.191 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 12:32:19.193 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 12:32:19.194 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 12:32:19.201 +05:30 [INF] Received isArchive value: True
2024-12-09 12:32:19.219 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:32:19.231 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:32:19.242 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 12:32:19.245 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 12:32:19.249 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:19.255 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 64.0515ms
2024-12-09 12:32:19.259 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:32:19.263 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 94.4838ms
2024-12-09 12:32:21.591 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:21.596 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:21.599 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:21.605 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:21.613 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:21.617 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:21.620 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:32:21.622 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:32:21.623 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:32:21.627 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:32:21.638 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:32:21.648 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:32:21.652 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:32:21.657 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:32:21.660 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:32:21.668 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:21.675 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 61.8349ms
2024-12-09 12:32:21.679 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:21.684 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 92.5277ms
2024-12-09 12:32:22.796 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:32:22.801 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:22.806 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.953ms
2024-12-09 12:32:22.811 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:22.826 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:22.828 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:22.829 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:22.836 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:22.844 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:22.845 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:32:22.847 +05:30 [INF] Deserializing the notes
2024-12-09 12:32:22.849 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:22.852 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.2463ms
2024-12-09 12:32:22.859 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:22.863 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.3587ms
2024-12-09 12:32:49.959 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:32:49.964 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:49.966 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.716ms
2024-12-09 12:32:49.970 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:49.987 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:49.989 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:49.995 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:50.000 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:50.003 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:50.005 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:32:50.007 +05:30 [INF] Deserializing the notes
2024-12-09 12:32:50.008 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:50.015 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.0957ms
2024-12-09 12:32:50.019 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:50.021 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.3166ms
2024-12-09 12:32:50.077 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:50.081 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:50.082 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:50.083 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:50.086 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:50.088 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:50.094 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:32:50.096 +05:30 [INF] Deserializing the notes
2024-12-09 12:32:50.098 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:50.102 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.497ms
2024-12-09 12:32:50.104 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:50.107 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.2286ms
2024-12-09 12:32:56.095 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:32:56.100 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:56.103 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.5097ms
2024-12-09 12:32:56.107 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:32:56.124 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:56.128 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:56.130 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:56.133 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:32:56.137 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:32:56.144 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:32:56.147 +05:30 [INF] Deserializing the notes
2024-12-09 12:32:56.149 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:56.154 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.5883ms
2024-12-09 12:32:56.158 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:32:56.161 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.8986ms
2024-12-09 12:32:57.737 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 12:32:57.742 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:57.745 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 8.229ms
2024-12-09 12:32:57.748 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 12:32:57.757 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:32:57.763 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:32:57.767 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:32:57.771 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 12:32:57.772 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 12:32:57.774 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 12:32:57.775 +05:30 [INF] Received isArchive value: True
2024-12-09 12:32:57.780 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:32:57.791 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:32:57.796 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 12:32:57.797 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 12:32:57.799 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:32:57.800 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 29.9237ms
2024-12-09 12:32:57.808 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:32:57.811 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 63.0316ms
2024-12-09 12:33:00.421 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:33:00.426 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:00.429 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:00.433 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:00.444 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:33:00.448 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:33:00.452 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:33:00.457 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:33:00.459 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:33:00.474 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:33:00.488 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:33:00.494 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:33:00.501 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:33:00.509 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:33:00.512 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:33:00.513 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:00.518 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 73.981ms
2024-12-09 12:33:00.524 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:00.527 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 105.8954ms
2024-12-09 12:33:01.819 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:33:01.823 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:01.827 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.1164ms
2024-12-09 12:33:01.830 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:33:01.841 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:01.843 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:01.844 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:01.847 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:33:01.849 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:33:01.859 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:33:01.863 +05:30 [INF] Deserializing the notes
2024-12-09 12:33:01.867 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:01.870 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 23.9224ms
2024-12-09 12:33:01.884 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:01.889 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 58.6209ms
2024-12-09 12:33:04.602 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 12:33:04.610 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:04.613 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 11.641ms
2024-12-09 12:33:04.619 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 12:33:04.628 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:04.630 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:33:04.633 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:04.638 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 12:33:04.639 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 12:33:04.640 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 12:33:04.646 +05:30 [INF] Received isArchive value: True
2024-12-09 12:33:04.655 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:33:04.664 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:33:04.669 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 12:33:04.671 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 12:33:04.672 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:04.674 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 37.2682ms
2024-12-09 12:33:04.677 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:33:04.679 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 60.1436ms
2024-12-09 12:33:05.990 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:33:05.995 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:05.999 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:06.006 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:06.015 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:33:06.023 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:33:06.026 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:33:06.029 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:33:06.032 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:33:06.043 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:33:06.050 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:33:06.058 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:33:06.064 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:33:06.066 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:33:06.069 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:33:06.071 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:06.074 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 59.8261ms
2024-12-09 12:33:06.076 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:06.077 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 87.7127ms
2024-12-09 12:33:06.895 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:33:06.899 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:06.902 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.4652ms
2024-12-09 12:33:06.908 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:33:06.923 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:06.925 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:06.926 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:06.932 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:33:06.941 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:33:06.942 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:33:06.944 +05:30 [INF] Deserializing the notes
2024-12-09 12:33:06.947 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:06.949 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.5087ms
2024-12-09 12:33:06.954 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:06.958 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 50.0377ms
2024-12-09 12:33:11.303 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - null null
2024-12-09 12:33:11.308 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:11.310 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - 204 null null 7.8763ms
2024-12-09 12:33:11.314 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - application/json 4
2024-12-09 12:33:11.323 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:11.324 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:33:11.326 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:11.330 +05:30 [INF] Received noteId: 1026, isArchive: True
2024-12-09 12:33:11.331 +05:30 [INF] Received request to toggle archive status for note with ID: 1026
2024-12-09 12:33:11.336 +05:30 [INF] Initiating toggle of archive status for note with ID: 1026 for user ID: 1
2024-12-09 12:33:11.345 +05:30 [INF] Received isArchive value: True
2024-12-09 12:33:11.354 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:33:11.365 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 12:33:11.377 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 12:33:11.385 +05:30 [INF] Note with ID: 1026 archive status updated to true
2024-12-09 12:33:11.387 +05:30 [INF] Successfully toggled archive status for note with ID: 1026
2024-12-09 12:33:11.388 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:11.390 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 60.2772ms
2024-12-09 12:33:11.391 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 12:33:11.393 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - 200 null application/json; charset=utf-8 79.8422ms
2024-12-09 12:33:12.679 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:33:12.684 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:12.689 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.9423ms
2024-12-09 12:33:12.692 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:33:12.709 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:12.715 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:12.724 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:12.730 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:33:12.737 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:33:12.739 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:33:12.741 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:33:12.744 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:33:12.748 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:33:12.757 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:33:12.764 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:33:12.770 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:33:12.771 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:33:12.773 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:33:12.774 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:12.781 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 51.8336ms
2024-12-09 12:33:12.785 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:12.786 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 94.0203ms
2024-12-09 12:33:14.820 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:33:14.828 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:14.834 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:14.836 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:14.843 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:33:14.846 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:33:14.850 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:33:14.853 +05:30 [INF] Deserializing the notes
2024-12-09 12:33:14.854 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:14.857 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.755ms
2024-12-09 12:33:14.865 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:14.871 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.0916ms
2024-12-09 12:33:45.042 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:33:45.046 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:45.047 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4756ms
2024-12-09 12:33:45.050 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:33:45.056 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:45.057 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:45.059 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:45.062 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:33:45.071 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:33:45.074 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:33:45.077 +05:30 [INF] Deserializing the notes
2024-12-09 12:33:45.080 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:45.087 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 24.6705ms
2024-12-09 12:33:45.091 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:45.093 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.4929ms
2024-12-09 12:33:45.182 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:33:45.185 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:45.188 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:45.190 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:45.196 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:33:45.200 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:33:45.207 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:33:45.209 +05:30 [INF] Deserializing the notes
2024-12-09 12:33:45.212 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:45.217 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.9433ms
2024-12-09 12:33:45.219 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:45.221 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.0467ms
2024-12-09 12:33:49.820 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:33:49.825 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:49.827 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:49.829 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:49.838 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:33:49.841 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:33:49.844 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:33:49.846 +05:30 [INF] Deserializing the notes
2024-12-09 12:33:49.850 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:49.857 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.4755ms
2024-12-09 12:33:49.860 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:33:49.861 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:49.866 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:49.868 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.935ms
2024-12-09 12:33:49.871 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:49.882 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:49.887 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:33:49.890 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:33:49.895 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:33:49.897 +05:30 [INF] Deserializing the notes
2024-12-09 12:33:49.901 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:49.905 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.0188ms
2024-12-09 12:33:49.908 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:49.914 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.814ms
2024-12-09 12:33:57.754 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:33:57.757 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:57.759 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:33:57.760 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.1959ms
2024-12-09 12:33:57.762 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:33:57.767 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:57.776 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:57.778 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 19.4762ms
2024-12-09 12:33:57.780 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:57.787 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:57.798 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:33:57.800 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:33:57.803 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:33:57.804 +05:30 [INF] Deserializing the notes
2024-12-09 12:33:57.806 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:57.809 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.8976ms
2024-12-09 12:33:57.811 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:33:57.812 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:57.822 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:33:57.824 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 61.429ms
2024-12-09 12:33:57.826 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:57.834 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:33:57.839 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:33:57.842 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:33:57.844 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:33:57.845 +05:30 [INF] Deserializing the notes
2024-12-09 12:33:57.847 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:33:57.856 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.7151ms
2024-12-09 12:33:57.859 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:33:57.861 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.6975ms
2024-12-09 12:34:01.304 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:01.307 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:01.309 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:01.311 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:01.315 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:01.317 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:01.323 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:01.326 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:01.328 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:01.333 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.7802ms
2024-12-09 12:34:01.334 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:01.335 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:01.339 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:01.342 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.7614ms
2024-12-09 12:34:01.352 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:01.360 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:01.366 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:01.370 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:01.372 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:01.375 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:01.377 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:01.380 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.6566ms
2024-12-09 12:34:01.382 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:01.384 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 50.0371ms
2024-12-09 12:34:03.275 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:34:03.279 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:03.282 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.8959ms
2024-12-09 12:34:03.285 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:03.296 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:03.299 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:03.301 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:03.305 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:03.308 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:03.313 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:03.316 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:03.318 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:03.321 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.7579ms
2024-12-09 12:34:03.323 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:03.324 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:03.327 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:03.328 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.38ms
2024-12-09 12:34:03.336 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:03.342 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:03.347 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:03.349 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:03.351 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:03.353 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:03.354 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:03.357 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.4139ms
2024-12-09 12:34:03.365 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:03.367 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.7709ms
2024-12-09 12:34:09.234 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:34:09.237 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:09.239 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6766ms
2024-12-09 12:34:09.242 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:09.248 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:09.250 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:09.252 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:09.261 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:09.267 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:09.270 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:09.272 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:09.274 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:09.278 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.0404ms
2024-12-09 12:34:09.280 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:09.284 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:09.289 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:09.290 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.8656ms
2024-12-09 12:34:09.292 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:09.302 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:09.308 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:09.310 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:09.312 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:09.318 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:09.320 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:09.326 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.2631ms
2024-12-09 12:34:09.329 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:09.331 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.1999ms
2024-12-09 12:34:11.226 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:11.231 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:11.233 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:11.235 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:11.237 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:11.239 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:11.245 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:11.248 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:11.250 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:11.254 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.2898ms
2024-12-09 12:34:11.260 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:11.268 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.4164ms
2024-12-09 12:34:11.270 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:11.285 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:11.288 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:11.293 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:11.302 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:11.304 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:11.310 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:11.315 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:11.319 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:11.328 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.8492ms
2024-12-09 12:34:11.336 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:11.337 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 67.4406ms
2024-12-09 12:34:19.488 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:34:19.491 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:19.494 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.4376ms
2024-12-09 12:34:19.501 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:19.508 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:19.512 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:19.515 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:19.522 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:19.528 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:19.530 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:19.532 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:19.534 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:19.538 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.9399ms
2024-12-09 12:34:19.548 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:19.550 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.4084ms
2024-12-09 12:34:19.583 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:19.586 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:19.587 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:19.589 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:19.592 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:19.595 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:19.597 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:19.599 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:19.601 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:19.604 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.2954ms
2024-12-09 12:34:19.614 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:19.616 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.4058ms
2024-12-09 12:34:28.329 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:34:28.332 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:28.334 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2141ms
2024-12-09 12:34:28.337 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:28.342 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:28.344 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:28.346 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:28.356 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:28.359 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:28.361 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:28.363 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:28.368 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:28.374 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.2544ms
2024-12-09 12:34:28.376 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:28.379 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.2134ms
2024-12-09 12:34:28.405 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:28.409 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:28.411 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:28.413 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:28.416 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:28.418 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:28.423 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:28.426 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:28.427 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:28.430 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.7888ms
2024-12-09 12:34:28.432 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:28.438 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.4703ms
2024-12-09 12:34:39.279 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:34:39.282 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:34:39.284 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:39.288 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:39.289 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.1445ms
2024-12-09 12:34:39.291 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.782ms
2024-12-09 12:34:39.293 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:39.311 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:39.313 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:39.317 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:39.322 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:39.328 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:39.330 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:39.333 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:39.335 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:39.343 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.1508ms
2024-12-09 12:34:39.345 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:39.347 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:39.352 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:39.354 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 60.5202ms
2024-12-09 12:34:39.356 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:39.362 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:39.373 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:39.375 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:39.377 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:39.379 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:39.380 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:39.383 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7829ms
2024-12-09 12:34:39.390 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:39.393 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.6788ms
2024-12-09 12:34:46.501 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:34:46.504 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:46.507 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.7584ms
2024-12-09 12:34:46.508 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:34:46.510 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:46.517 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:46.522 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:46.524 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.3893ms
2024-12-09 12:34:46.530 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:46.539 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:46.548 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:46.552 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:46.555 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:46.557 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:46.563 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:46.570 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.1749ms
2024-12-09 12:34:46.572 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:46.577 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:46.584 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:46.586 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 75.987ms
2024-12-09 12:34:46.588 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:46.600 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:46.606 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:46.609 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:46.616 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:46.622 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:46.623 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:46.627 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.3066ms
2024-12-09 12:34:46.636 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:46.639 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 67.1613ms
2024-12-09 12:34:51.414 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:51.419 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:51.422 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:51.425 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:51.434 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:51.438 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:51.441 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:51.443 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:51.450 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:51.454 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.959ms
2024-12-09 12:34:51.456 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:51.457 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:51.466 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:51.469 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 55.9122ms
2024-12-09 12:34:51.471 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:51.484 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:51.489 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:51.496 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:51.499 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:51.502 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:51.505 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:51.507 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.6561ms
2024-12-09 12:34:51.512 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:51.515 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 59.1784ms
2024-12-09 12:34:52.652 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:34:52.656 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:52.658 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.8296ms
2024-12-09 12:34:52.659 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:34:52.662 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:52.681 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:52.685 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:52.687 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 27.9873ms
2024-12-09 12:34:52.689 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:52.695 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:52.704 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:52.707 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:52.709 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:52.711 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:52.716 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:52.721 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.7463ms
2024-12-09 12:34:52.723 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:52.723 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:34:52.725 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 62.4791ms
2024-12-09 12:34:52.728 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:34:52.739 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:52.743 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:34:52.746 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:34:52.752 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:34:52.754 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:34:52.756 +05:30 [INF] Deserializing the notes
2024-12-09 12:34:52.758 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:34:52.761 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.1787ms
2024-12-09 12:34:52.763 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:34:52.768 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.0484ms
2024-12-09 12:35:11.763 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:35:11.771 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:35:11.778 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 15.5477ms
2024-12-09 12:35:11.782 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:35:11.796 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:35:11.799 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:11.801 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:35:11.807 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:35:11.812 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:35:11.814 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:35:11.815 +05:30 [INF] Deserializing the notes
2024-12-09 12:35:11.816 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:35:11.818 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.9297ms
2024-12-09 12:35:11.821 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:11.822 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.1836ms
2024-12-09 12:35:28.237 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:35:28.241 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:35:28.243 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3748ms
2024-12-09 12:35:28.246 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:35:28.255 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:35:28.258 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:28.261 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:35:28.266 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:35:28.273 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:35:28.276 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:35:28.278 +05:30 [INF] Deserializing the notes
2024-12-09 12:35:28.280 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:35:28.284 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.2826ms
2024-12-09 12:35:28.286 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:35:28.291 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:28.297 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:35:28.299 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.736ms
2024-12-09 12:35:28.302 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:28.310 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:35:28.319 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:35:28.323 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:35:28.325 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:35:28.326 +05:30 [INF] Deserializing the notes
2024-12-09 12:35:28.329 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:35:28.332 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.0104ms
2024-12-09 12:35:28.334 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:35:28.340 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:28.343 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:35:28.345 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 58.9392ms
2024-12-09 12:35:28.346 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:28.352 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:35:28.355 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:35:28.357 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:35:28.359 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:35:28.360 +05:30 [INF] Deserializing the notes
2024-12-09 12:35:28.361 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:35:28.363 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.7404ms
2024-12-09 12:35:28.365 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:28.375 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.6394ms
2024-12-09 12:35:30.838 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:35:30.843 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:35:30.846 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:30.848 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:35:30.857 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:35:30.860 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:35:30.863 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:35:30.865 +05:30 [INF] Deserializing the notes
2024-12-09 12:35:30.870 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:35:30.874 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.6095ms
2024-12-09 12:35:30.877 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:30.880 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.4806ms
2024-12-09 12:35:30.980 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:35:30.985 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:35:30.988 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:30.990 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:35:30.997 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:35:31.001 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:35:31.009 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:35:31.011 +05:30 [INF] Deserializing the notes
2024-12-09 12:35:31.014 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:35:31.019 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.0003ms
2024-12-09 12:35:31.022 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:31.029 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.7066ms
2024-12-09 12:35:49.243 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:35:49.250 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:35:49.252 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.1931ms
2024-12-09 12:35:49.257 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:35:49.275 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:35:49.280 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:49.282 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:35:49.285 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:35:49.289 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:35:49.294 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:35:49.297 +05:30 [INF] Deserializing the notes
2024-12-09 12:35:49.299 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:35:49.302 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.6132ms
2024-12-09 12:35:49.308 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:49.313 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 56.336ms
2024-12-09 12:35:51.599 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:35:51.603 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:35:51.608 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:51.610 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:35:51.619 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:35:51.627 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:35:51.632 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:35:51.635 +05:30 [INF] Deserializing the notes
2024-12-09 12:35:51.638 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:35:51.646 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 27.5847ms
2024-12-09 12:35:51.655 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:35:51.663 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 64.7839ms
2024-12-09 12:36:25.685 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:36:25.692 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:36:25.696 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.3605ms
2024-12-09 12:36:25.700 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:36:25.716 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:36:25.721 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:36:25.726 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:36:25.734 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:36:25.741 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:36:25.743 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:36:25.744 +05:30 [INF] Deserializing the notes
2024-12-09 12:36:25.746 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:36:25.748 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.9027ms
2024-12-09 12:36:25.754 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:36:25.756 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 56.5878ms
2024-12-09 12:36:28.267 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:36:28.274 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:36:28.276 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:36:28.278 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:36:28.284 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:36:28.288 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:36:28.295 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:36:28.298 +05:30 [INF] Deserializing the notes
2024-12-09 12:36:28.304 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:36:28.308 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.1968ms
2024-12-09 12:36:28.313 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:36:28.315 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 50.452ms
2024-12-09 12:37:16.845 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:37:16.849 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:16.850 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6311ms
2024-12-09 12:37:16.853 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:16.858 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:16.859 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:16.861 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:16.872 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:16.875 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:16.877 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:16.879 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:16.881 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:16.890 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.0879ms
2024-12-09 12:37:16.891 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:16.893 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:16.906 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:16.909 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 56.2039ms
2024-12-09 12:37:16.912 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:16.923 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:16.927 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:16.929 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:16.931 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:16.936 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:16.940 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:16.943 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.3544ms
2024-12-09 12:37:16.945 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:16.950 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 58.8565ms
2024-12-09 12:37:16.965 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:16.969 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:16.970 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:16.972 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:16.975 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:16.981 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:16.983 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:16.985 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:16.987 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:16.990 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.1464ms
2024-12-09 12:37:16.996 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:16.999 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.482ms
2024-12-09 12:37:25.878 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:37:25.880 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:37:25.882 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:25.886 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:25.891 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.5092ms
2024-12-09 12:37:25.893 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.5128ms
2024-12-09 12:37:25.896 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:25.912 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:25.918 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:25.920 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:25.924 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:25.926 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:25.933 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:25.935 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:25.937 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:25.941 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.2587ms
2024-12-09 12:37:25.942 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:25.943 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:25.947 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:25.956 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 60.5103ms
2024-12-09 12:37:25.961 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:25.969 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:25.977 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:25.980 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:25.982 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:25.984 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:25.986 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:25.989 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.1394ms
2024-12-09 12:37:25.991 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:25.993 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 50.4554ms
2024-12-09 12:37:26.894 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:26.900 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:26.903 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:26.905 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:26.913 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:26.918 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:26.920 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:26.923 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:26.925 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:26.932 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.171ms
2024-12-09 12:37:26.934 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:26.936 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:26.940 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:26.943 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.595ms
2024-12-09 12:37:26.945 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:26.957 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:26.962 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:26.969 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:26.971 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:26.974 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:26.979 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:26.983 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.9839ms
2024-12-09 12:37:26.986 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:26.992 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 58.1277ms
2024-12-09 12:37:31.944 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:37:31.947 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:37:31.950 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:31.955 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:31.957 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.2031ms
2024-12-09 12:37:31.963 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:31.964 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 17.07ms
2024-12-09 12:37:31.974 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:31.985 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:31.988 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:31.992 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:31.996 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:32.001 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:32.004 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:32.007 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:32.009 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.7005ms
2024-12-09 12:37:32.012 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:32.015 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:32.018 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:32.020 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 57.0891ms
2024-12-09 12:37:32.022 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:32.028 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:32.032 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:32.038 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:32.041 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:32.043 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:32.044 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:32.047 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.579ms
2024-12-09 12:37:32.049 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:32.051 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.7666ms
2024-12-09 12:37:34.000 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:34.004 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:34.008 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:34.010 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:34.013 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:34.016 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:34.018 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:34.020 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:34.022 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:34.033 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.82ms
2024-12-09 12:37:34.035 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:34.036 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:34.041 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:34.043 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.2376ms
2024-12-09 12:37:34.050 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:34.058 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:34.062 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:34.068 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:34.071 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:34.073 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:34.076 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:34.079 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.0037ms
2024-12-09 12:37:34.081 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:34.083 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.531ms
2024-12-09 12:37:38.544 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:37:38.548 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:38.550 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.5907ms
2024-12-09 12:37:38.553 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:38.558 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:38.563 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:38.566 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:38.570 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:38.572 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:38.575 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:38.576 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:38.581 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:38.592 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.2602ms
2024-12-09 12:37:38.597 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:38.597 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:38.599 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.1214ms
2024-12-09 12:37:38.606 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:38.621 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:38.625 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:38.629 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:38.631 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:38.633 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:38.636 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:38.638 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:38.642 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.024ms
2024-12-09 12:37:38.648 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:38.651 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.592ms
2024-12-09 12:37:45.750 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:37:45.754 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:37:45.755 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:45.762 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:45.763 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.7879ms
2024-12-09 12:37:45.766 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:45.767 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.037ms
2024-12-09 12:37:45.779 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:45.787 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:45.789 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:45.798 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:45.802 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:45.805 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:45.807 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:45.809 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:45.818 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.5615ms
2024-12-09 12:37:45.823 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:45.824 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:45.832 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:45.835 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 68.7171ms
2024-12-09 12:37:45.841 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:45.848 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:45.851 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:45.853 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:45.859 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:45.860 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:45.862 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:45.865 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.4895ms
2024-12-09 12:37:45.867 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:45.869 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.5651ms
2024-12-09 12:37:51.466 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:37:51.469 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:37:51.470 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:51.473 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:51.474 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.844ms
2024-12-09 12:37:51.476 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.5832ms
2024-12-09 12:37:51.478 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:51.491 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:51.493 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:51.495 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:51.503 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:51.508 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:51.510 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:51.512 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:51.514 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:51.524 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.7515ms
2024-12-09 12:37:51.527 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:51.527 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:51.530 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:51.532 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 53.7169ms
2024-12-09 12:37:51.533 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:51.545 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:51.549 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:51.551 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:51.553 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:51.555 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:51.561 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:51.566 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.5025ms
2024-12-09 12:37:51.568 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:51.570 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.9927ms
2024-12-09 12:37:52.220 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:52.226 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:52.227 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:52.229 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:52.237 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:52.241 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:52.244 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:52.246 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:52.251 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:52.255 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.174ms
2024-12-09 12:37:52.258 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:37:52.258 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:52.263 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:37:52.266 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.73ms
2024-12-09 12:37:52.274 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:52.281 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:37:52.285 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:37:52.292 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:37:52.294 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:37:52.296 +05:30 [INF] Deserializing the notes
2024-12-09 12:37:52.298 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:37:52.301 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.9215ms
2024-12-09 12:37:52.303 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:37:52.305 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.9056ms
2024-12-09 12:38:16.651 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:38:16.652 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:38:16.656 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:38:16.660 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:38:16.662 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.3298ms
2024-12-09 12:38:16.673 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 21.2052ms
2024-12-09 12:38:16.675 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:38:16.694 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:38:16.697 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:16.698 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:38:16.706 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:38:16.708 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:38:16.712 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:38:16.714 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:38:16.716 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:38:16.727 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:38:16.733 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:38:16.737 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:38:16.741 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:38:16.743 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:38:16.764 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:38:16.766 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:38:16.771 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 65.7029ms
2024-12-09 12:38:16.774 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:38:16.776 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:16.783 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:38:16.785 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 109.8653ms
2024-12-09 12:38:16.787 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:16.794 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:38:16.800 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:38:16.804 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:38:16.809 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:38:16.811 +05:30 [INF] Deserializing the notes
2024-12-09 12:38:16.813 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:38:16.817 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.67ms
2024-12-09 12:38:16.819 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:16.821 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.937ms
2024-12-09 12:38:19.882 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:38:19.885 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:38:19.886 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:19.887 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:38:19.891 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:38:19.893 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:38:19.895 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:38:19.896 +05:30 [INF] Deserializing the notes
2024-12-09 12:38:19.898 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:38:19.901 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7207ms
2024-12-09 12:38:19.904 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:38:19.908 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:19.913 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:38:19.915 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.0344ms
2024-12-09 12:38:19.917 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:19.927 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:38:19.934 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:38:19.936 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:38:19.938 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:38:19.940 +05:30 [INF] Deserializing the notes
2024-12-09 12:38:19.942 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:38:19.952 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.7029ms
2024-12-09 12:38:19.955 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:19.957 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 53.2221ms
2024-12-09 12:38:32.711 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:38:32.713 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:38:32.715 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:38:32.718 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:38:32.720 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.549ms
2024-12-09 12:38:32.722 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.2807ms
2024-12-09 12:38:32.725 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:38:32.739 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:38:32.741 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:32.744 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:38:32.751 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:38:32.757 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:38:32.759 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:38:32.761 +05:30 [INF] Deserializing the notes
2024-12-09 12:38:32.764 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:38:32.766 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.3516ms
2024-12-09 12:38:32.769 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:38:32.770 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:32.779 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:38:32.782 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 56.8117ms
2024-12-09 12:38:32.784 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:32.798 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:38:32.802 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:38:32.805 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:38:32.810 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:38:32.813 +05:30 [INF] Deserializing the notes
2024-12-09 12:38:32.816 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:38:32.819 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.5263ms
2024-12-09 12:38:32.830 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:32.832 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 63.7903ms
2024-12-09 12:38:42.139 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:38:42.146 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:38:42.148 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.4983ms
2024-12-09 12:38:42.153 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:38:42.166 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:38:42.168 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:42.173 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:38:42.177 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:38:42.181 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:38:42.185 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:38:42.187 +05:30 [INF] Deserializing the notes
2024-12-09 12:38:42.191 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:38:42.195 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.2934ms
2024-12-09 12:38:42.199 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:38:42.203 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.4413ms
2024-12-09 12:39:17.527 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:39:17.532 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:39:17.534 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.1011ms
2024-12-09 12:39:17.563 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:39:17.572 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:39:17.593 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:39:17.605 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:39:17.626 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:39:17.633 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:39:17.637 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:39:17.639 +05:30 [INF] Deserializing the notes
2024-12-09 12:39:17.643 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:39:17.646 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.3184ms
2024-12-09 12:39:17.648 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:39:17.648 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:39:17.650 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 86.9946ms
2024-12-09 12:39:17.661 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:39:17.666 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:39:17.667 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:39:17.670 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:39:17.672 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:39:17.678 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:39:17.684 +05:30 [INF] Deserializing the notes
2024-12-09 12:39:17.686 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:39:17.689 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.5211ms
2024-12-09 12:39:17.692 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:39:17.692 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:39:17.694 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:39:17.700 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.4613ms
2024-12-09 12:39:17.703 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:39:17.710 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:39:17.714 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:39:17.716 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:39:17.721 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:39:17.727 +05:30 [INF] Deserializing the notes
2024-12-09 12:39:17.729 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:39:17.738 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 24.8945ms
2024-12-09 12:39:17.740 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:39:17.743 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.2408ms
2024-12-09 12:39:51.269 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:39:51.281 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:39:51.282 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.7853ms
2024-12-09 12:39:51.286 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:39:51.292 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:39:51.295 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:39:51.300 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:39:51.303 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:39:51.308 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:39:51.311 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:39:51.318 +05:30 [INF] Deserializing the notes
2024-12-09 12:39:51.320 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:39:51.326 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 23.3391ms
2024-12-09 12:39:51.333 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:39:51.329 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:39:51.335 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 50.1565ms
2024-12-09 12:39:51.350 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:39:51.360 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:39:51.363 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:39:51.366 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:39:51.368 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:39:51.373 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:39:51.377 +05:30 [INF] Deserializing the notes
2024-12-09 12:39:51.378 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:39:51.381 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.4948ms
2024-12-09 12:39:51.383 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:39:51.384 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 55.9639ms
2024-12-09 12:39:59.828 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:39:59.835 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:39:59.849 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 20.9105ms
2024-12-09 12:39:59.853 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:39:59.862 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:39:59.865 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:39:59.867 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:39:59.875 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:39:59.880 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:39:59.883 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:39:59.885 +05:30 [INF] Deserializing the notes
2024-12-09 12:39:59.888 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:39:59.890 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.9139ms
2024-12-09 12:39:59.893 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:39:59.897 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.3552ms
2024-12-09 12:40:53.706 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:40:53.709 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:40:53.712 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.0572ms
2024-12-09 12:40:53.715 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:40:53.721 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:40:53.727 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:40:53.729 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:40:53.732 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:40:53.734 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:40:53.740 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:40:53.742 +05:30 [INF] Deserializing the notes
2024-12-09 12:40:53.745 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:40:53.748 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.3723ms
2024-12-09 12:40:53.750 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:40:53.753 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:40:53.762 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:40:53.757 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.3922ms
2024-12-09 12:40:53.764 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:40:53.770 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:40:53.782 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:40:53.786 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:40:53.789 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:40:53.790 +05:30 [INF] Deserializing the notes
2024-12-09 12:40:53.799 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:40:53.803 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.174ms
2024-12-09 12:40:53.806 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:40:53.807 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:40:53.811 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:40:53.813 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 61.5694ms
2024-12-09 12:40:53.823 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:40:53.828 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:40:53.836 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:40:53.838 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:40:53.841 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:40:53.843 +05:30 [INF] Deserializing the notes
2024-12-09 12:40:53.845 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:40:53.851 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.9173ms
2024-12-09 12:40:53.856 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:40:53.858 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.8817ms
2024-12-09 12:41:00.327 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:41:00.332 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:41:00.335 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.8419ms
2024-12-09 12:41:00.339 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:41:00.358 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:41:00.363 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:41:00.368 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:41:00.372 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:41:00.374 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:41:00.377 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:41:00.378 +05:30 [INF] Deserializing the notes
2024-12-09 12:41:00.380 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:41:00.381 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.0002ms
2024-12-09 12:41:00.384 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:41:00.393 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.7706ms
2024-12-09 12:41:02.099 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:41:02.106 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:41:02.109 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:41:02.114 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:41:02.120 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:41:02.128 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:41:02.131 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:41:02.133 +05:30 [INF] Deserializing the notes
2024-12-09 12:41:02.134 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:41:02.143 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 23.623ms
2024-12-09 12:41:02.147 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:41:02.153 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 53.7851ms
2024-12-09 12:42:08.328 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:42:08.347 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:42:08.349 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 20.8553ms
2024-12-09 12:42:08.355 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:42:08.378 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:42:08.382 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:42:08.384 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:42:08.393 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:42:08.395 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:42:08.398 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:42:08.400 +05:30 [INF] Deserializing the notes
2024-12-09 12:42:08.404 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:42:08.407 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.4403ms
2024-12-09 12:42:08.409 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:42:08.411 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 56.381ms
2024-12-09 12:42:09.997 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:42:10.002 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:42:10.004 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:42:10.014 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:42:10.029 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:42:10.033 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:42:10.036 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:42:10.037 +05:30 [INF] Deserializing the notes
2024-12-09 12:42:10.039 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:42:10.041 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.0537ms
2024-12-09 12:42:10.047 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:42:10.052 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 55.5327ms
2024-12-09 12:42:14.541 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:42:14.546 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:42:14.550 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.3717ms
2024-12-09 12:42:14.553 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:42:14.575 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:42:14.577 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:42:14.582 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:42:14.587 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:42:14.590 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:42:14.596 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:42:14.597 +05:30 [INF] Deserializing the notes
2024-12-09 12:42:14.602 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:42:14.606 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.3333ms
2024-12-09 12:42:14.610 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:42:14.612 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 59.5969ms
2024-12-09 12:43:10.484 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:43:10.488 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:10.490 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6985ms
2024-12-09 12:43:10.493 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:10.499 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:10.502 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:10.504 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:10.514 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:10.516 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:10.518 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:10.521 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:10.528 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:10.533 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.5976ms
2024-12-09 12:43:10.536 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:10.544 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:10.549 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:10.554 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 61.5348ms
2024-12-09 12:43:10.557 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:10.565 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:10.574 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:10.576 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:10.580 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:10.582 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:10.583 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:10.589 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.3367ms
2024-12-09 12:43:10.591 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:10.593 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:10.597 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:10.600 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 63.3621ms
2024-12-09 12:43:10.601 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:10.615 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:10.619 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:10.620 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:10.622 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:10.624 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:10.630 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:10.634 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.6492ms
2024-12-09 12:43:10.636 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:10.641 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.2874ms
2024-12-09 12:43:17.715 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:43:17.718 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:17.720 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3451ms
2024-12-09 12:43:17.723 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:17.732 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:17.735 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:17.739 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:17.748 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:17.751 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:17.753 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:43:17.758 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:43:17.761 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:43:17.788 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:43:17.796 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:43:17.801 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:43:17.807 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:43:17.808 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:43:17.813 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:43:17.815 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:17.823 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 74.3523ms
2024-12-09 12:43:17.825 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:17.828 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:17.831 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:17.837 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 113.6932ms
2024-12-09 12:43:17.838 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:17.848 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:17.852 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:17.859 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:17.861 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:17.863 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:17.864 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:17.867 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.5326ms
2024-12-09 12:43:17.873 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:17.878 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.6494ms
2024-12-09 12:43:22.868 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:43:22.871 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:22.873 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3484ms
2024-12-09 12:43:22.876 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:22.882 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:22.884 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:22.889 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:22.894 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:22.896 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:22.898 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:22.900 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:22.907 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:22.912 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.6564ms
2024-12-09 12:43:22.914 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:22.919 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:22.928 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:22.931 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.5472ms
2024-12-09 12:43:22.933 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:22.943 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:22.948 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:22.950 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:22.952 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:22.954 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:22.956 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:22.959 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.4772ms
2024-12-09 12:43:22.966 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:22.969 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 55.1307ms
2024-12-09 12:43:24.149 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:24.152 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:24.155 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:24.157 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:24.162 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:24.165 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:24.172 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:24.175 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:24.178 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:24.183 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.2568ms
2024-12-09 12:43:24.186 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:24.186 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:24.195 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:24.196 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.1225ms
2024-12-09 12:43:24.199 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:24.205 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:24.214 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:24.216 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:24.219 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:24.221 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:24.223 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:24.234 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.3692ms
2024-12-09 12:43:24.236 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:24.238 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.6713ms
2024-12-09 12:43:26.587 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:26.591 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:26.592 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:26.594 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:26.598 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:26.600 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:26.602 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:26.604 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:26.612 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:26.616 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.7733ms
2024-12-09 12:43:26.618 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:26.619 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:26.627 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:26.629 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.8566ms
2024-12-09 12:43:26.632 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:26.642 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:26.648 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:26.650 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:26.654 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:26.656 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:26.659 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:26.663 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.6829ms
2024-12-09 12:43:26.664 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:26.666 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.3521ms
2024-12-09 12:43:28.334 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:43:28.337 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:28.337 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:43:28.339 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3458ms
2024-12-09 12:43:28.344 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:28.346 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:28.358 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:28.362 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 25.3187ms
2024-12-09 12:43:28.364 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:28.380 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:28.389 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:28.396 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:28.398 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:28.401 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:28.403 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:28.405 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.5569ms
2024-12-09 12:43:28.407 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:28.414 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:28.418 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:28.422 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 77.3873ms
2024-12-09 12:43:28.428 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:28.438 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:28.445 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:28.447 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:28.450 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:28.455 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:28.458 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:28.464 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.4135ms
2024-12-09 12:43:28.466 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:28.472 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 65.4992ms
2024-12-09 12:43:35.740 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:43:35.742 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:43:35.745 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:35.749 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:35.751 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.8324ms
2024-12-09 12:43:35.753 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.1665ms
2024-12-09 12:43:35.756 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:35.772 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:35.774 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:35.777 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:35.781 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:35.788 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:35.790 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:35.792 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:35.794 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:35.798 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.1996ms
2024-12-09 12:43:35.800 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:35.800 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:35.809 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 53.0526ms
2024-12-09 12:43:35.813 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:35.818 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:35.819 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:35.826 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:35.831 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:35.833 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:35.835 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:35.837 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:35.846 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.3484ms
2024-12-09 12:43:35.848 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:35.850 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 50.7154ms
2024-12-09 12:43:40.216 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:40.220 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:40.223 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:40.224 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:40.229 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:40.232 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:40.240 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:40.242 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:40.244 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:40.247 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.1771ms
2024-12-09 12:43:40.250 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:40.250 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:40.259 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:40.261 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.6437ms
2024-12-09 12:43:40.262 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:40.269 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:40.278 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:40.282 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:40.285 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:40.287 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:40.289 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:40.298 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.3448ms
2024-12-09 12:43:40.301 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:40.304 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 53.933ms
2024-12-09 12:43:44.653 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:43:44.657 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:44.659 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.9208ms
2024-12-09 12:43:44.662 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:44.673 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:44.675 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:44.677 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:44.682 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:44.685 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:44.688 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:44.695 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:44.700 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:44.704 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.2959ms
2024-12-09 12:43:44.707 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:44.710 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:44.713 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:44.716 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.2425ms
2024-12-09 12:43:44.720 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:44.726 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:44.729 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:44.739 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:44.741 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:44.744 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:44.746 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:44.750 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.6388ms
2024-12-09 12:43:44.753 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:44.761 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.5808ms
2024-12-09 12:43:52.165 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:43:52.168 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:52.170 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.9579ms
2024-12-09 12:43:52.175 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:52.184 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:52.188 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:52.192 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:52.198 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:52.202 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:52.204 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:52.206 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:52.211 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:52.218 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.3992ms
2024-12-09 12:43:52.221 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:52.226 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 50.6381ms
2024-12-09 12:43:52.222 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:52.241 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:52.243 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:52.244 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:52.253 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:52.255 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:52.258 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:52.260 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:52.262 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:52.270 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.8909ms
2024-12-09 12:43:52.276 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:52.278 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 56.4411ms
2024-12-09 12:43:55.603 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:55.610 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:55.612 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:55.616 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:55.621 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:55.624 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:55.626 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:55.633 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:55.635 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:55.639 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.9043ms
2024-12-09 12:43:55.640 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:55.646 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:55.648 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:55.642 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:55.652 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.753ms
2024-12-09 12:43:55.650 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:55.669 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:55.672 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:55.674 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:55.679 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:55.681 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:55.687 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.5996ms
2024-12-09 12:43:55.692 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:55.694 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.4079ms
2024-12-09 12:43:59.117 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:43:59.120 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:59.122 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.8853ms
2024-12-09 12:43:59.126 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:59.138 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:59.140 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:59.152 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:59.157 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:59.160 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:59.168 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:59.170 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:59.173 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:59.176 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.578ms
2024-12-09 12:43:59.179 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:59.182 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 56.1278ms
2024-12-09 12:43:59.179 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:43:59.196 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:43:59.198 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:59.199 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:43:59.208 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:43:59.211 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:43:59.214 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:43:59.215 +05:30 [INF] Deserializing the notes
2024-12-09 12:43:59.217 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:43:59.223 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.5879ms
2024-12-09 12:43:59.228 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:43:59.229 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.1359ms
2024-12-09 12:44:22.098 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:44:22.101 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:44:22.103 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.6066ms
2024-12-09 12:44:22.106 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:44:22.111 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:44:22.113 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:22.114 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:44:22.116 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:44:22.119 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:44:22.126 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:44:22.128 +05:30 [INF] Deserializing the notes
2024-12-09 12:44:22.130 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:44:22.134 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.8421ms
2024-12-09 12:44:22.137 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:22.143 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.6229ms
2024-12-09 12:44:22.255 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:44:22.260 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:44:22.262 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:22.264 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:44:22.270 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:44:22.280 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:44:22.284 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:44:22.287 +05:30 [INF] Deserializing the notes
2024-12-09 12:44:22.294 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:44:22.299 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 29.7192ms
2024-12-09 12:44:22.301 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:22.304 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.8783ms
2024-12-09 12:44:25.940 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:44:25.953 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:44:25.958 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:25.960 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:44:25.965 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:44:25.968 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:44:25.972 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:44:25.974 +05:30 [INF] Deserializing the notes
2024-12-09 12:44:25.975 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:44:25.979 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.7506ms
2024-12-09 12:44:25.981 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:25.981 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:44:25.983 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.7136ms
2024-12-09 12:44:25.987 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:44:25.999 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:26.000 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:44:26.004 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:44:26.006 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:44:26.011 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:44:26.015 +05:30 [INF] Deserializing the notes
2024-12-09 12:44:26.016 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:44:26.019 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.9586ms
2024-12-09 12:44:26.021 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:26.023 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.5161ms
2024-12-09 12:44:31.647 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:44:31.650 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:44:31.654 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.516ms
2024-12-09 12:44:31.658 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:44:31.664 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:44:31.666 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:31.668 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:44:31.681 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:44:31.684 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:44:31.690 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:44:31.692 +05:30 [INF] Deserializing the notes
2024-12-09 12:44:31.698 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:44:31.706 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.7423ms
2024-12-09 12:44:31.709 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:44:31.709 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:31.712 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:44:31.715 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 57.268ms
2024-12-09 12:44:31.725 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:31.732 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:44:31.739 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:44:31.742 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:44:31.744 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:44:31.751 +05:30 [INF] Deserializing the notes
2024-12-09 12:44:31.758 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:44:31.761 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.543ms
2024-12-09 12:44:31.766 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:31.768 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 59.3733ms
2024-12-09 12:44:56.317 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:44:56.326 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:44:56.330 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:44:56.335 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:44:56.341 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 23.8583ms
2024-12-09 12:44:56.345 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 19.0941ms
2024-12-09 12:44:56.351 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:44:56.369 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:44:56.371 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:56.373 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:44:56.377 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:44:56.379 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:44:56.384 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:44:56.387 +05:30 [INF] Deserializing the notes
2024-12-09 12:44:56.389 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:44:56.391 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.5707ms
2024-12-09 12:44:56.393 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:44:56.396 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:56.400 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:44:56.401 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 50.3907ms
2024-12-09 12:44:56.403 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:56.409 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:44:56.413 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:44:56.415 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:44:56.417 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:44:56.419 +05:30 [INF] Deserializing the notes
2024-12-09 12:44:56.420 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:44:56.422 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.0754ms
2024-12-09 12:44:56.424 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:44:56.433 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.7025ms
2024-12-09 12:45:04.532 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:45:04.534 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:45:04.536 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8577ms
2024-12-09 12:45:04.539 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:45:04.546 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:45:04.553 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:45:04.556 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:45:04.560 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:45:04.562 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:45:04.564 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:45:04.571 +05:30 [INF] Deserializing the notes
2024-12-09 12:45:04.575 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:45:04.578 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.2757ms
2024-12-09 12:45:04.581 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:45:04.581 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:45:04.589 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:45:04.592 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.7305ms
2024-12-09 12:45:04.596 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:45:04.607 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:45:04.615 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:45:04.620 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:45:04.622 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:45:04.624 +05:30 [INF] Deserializing the notes
2024-12-09 12:45:04.625 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:45:04.628 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.6215ms
2024-12-09 12:45:04.635 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:45:04.639 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 58.2251ms
2024-12-09 12:45:13.217 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:45:13.219 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:45:13.221 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:45:13.225 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:45:13.226 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.0064ms
2024-12-09 12:45:13.230 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:45:13.228 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.7499ms
2024-12-09 12:45:13.244 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:45:13.260 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:45:13.261 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:45:13.264 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:45:13.273 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:45:13.277 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:45:13.279 +05:30 [INF] Deserializing the notes
2024-12-09 12:45:13.281 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:45:13.285 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.0461ms
2024-12-09 12:45:13.288 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:45:13.291 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:45:13.298 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:45:13.299 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 69.1035ms
2024-12-09 12:45:13.301 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:45:13.307 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:45:13.318 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:45:13.321 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:45:13.324 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:45:13.327 +05:30 [INF] Deserializing the notes
2024-12-09 12:45:13.328 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:45:13.330 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.0139ms
2024-12-09 12:45:13.336 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:45:13.341 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.4718ms
2024-12-09 12:45:20.240 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:45:20.245 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:45:20.248 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.1786ms
2024-12-09 12:45:20.252 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:45:20.262 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:45:20.265 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:45:20.269 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:45:20.275 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:45:20.279 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:45:20.284 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:45:20.289 +05:30 [INF] Deserializing the notes
2024-12-09 12:45:20.290 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:45:20.293 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.939ms
2024-12-09 12:45:20.297 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:45:20.303 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.0223ms
2024-12-09 12:45:45.670 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:45:45.685 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:45:45.690 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 20.094ms
2024-12-09 12:45:45.694 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:45:45.709 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:45:45.713 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:45:45.714 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:45:45.719 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:45:45.723 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:45:45.724 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:45:45.725 +05:30 [INF] Deserializing the notes
2024-12-09 12:45:45.727 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:45:45.730 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.9447ms
2024-12-09 12:45:45.741 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:45:45.743 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.4839ms
2024-12-09 12:46:11.983 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:46:11.996 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:12.000 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 17.5077ms
2024-12-09 12:46:12.020 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:46:12.025 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:12.027 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:12.030 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:46:12.034 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:46:12.040 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:46:12.042 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:46:12.045 +05:30 [INF] Deserializing the notes
2024-12-09 12:46:12.048 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:46:12.052 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.0389ms
2024-12-09 12:46:12.055 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:46:12.055 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:12.059 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:12.067 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.4194ms
2024-12-09 12:46:12.072 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:12.080 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:46:12.087 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:46:12.089 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:46:12.091 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:46:12.093 +05:30 [INF] Deserializing the notes
2024-12-09 12:46:12.094 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:46:12.097 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.9953ms
2024-12-09 12:46:12.105 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:12.107 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.5402ms
2024-12-09 12:46:12.129 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:46:12.132 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:12.135 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:12.140 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:46:12.143 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:46:12.146 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:46:12.147 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:46:12.149 +05:30 [INF] Deserializing the notes
2024-12-09 12:46:12.151 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:46:12.155 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.532ms
2024-12-09 12:46:12.163 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:12.165 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.7043ms
2024-12-09 12:46:18.192 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:46:18.197 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:18.199 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:46:18.199 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.5573ms
2024-12-09 12:46:18.202 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:46:18.212 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:18.221 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:18.223 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 24.2746ms
2024-12-09 12:46:18.225 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:18.237 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:46:18.242 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:46:18.244 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:46:18.246 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:46:18.253 +05:30 [INF] Deserializing the notes
2024-12-09 12:46:18.255 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:46:18.257 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.4161ms
2024-12-09 12:46:18.259 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:18.259 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:46:18.261 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 58.4417ms
2024-12-09 12:46:18.264 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:18.277 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:18.279 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:46:18.284 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:46:18.287 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:46:18.289 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:46:18.291 +05:30 [INF] Deserializing the notes
2024-12-09 12:46:18.299 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:46:18.304 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.0367ms
2024-12-09 12:46:18.309 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:18.312 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.9282ms
2024-12-09 12:46:19.319 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:46:19.322 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:19.324 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:19.325 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:46:19.332 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:46:19.337 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:46:19.339 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:46:19.341 +05:30 [INF] Deserializing the notes
2024-12-09 12:46:19.343 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:46:19.347 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.8401ms
2024-12-09 12:46:19.349 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:46:19.354 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:19.358 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:19.361 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.8288ms
2024-12-09 12:46:19.363 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:19.375 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:46:19.380 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:46:19.386 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:46:19.388 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:46:19.390 +05:30 [INF] Deserializing the notes
2024-12-09 12:46:19.399 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:46:19.406 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 26.0078ms
2024-12-09 12:46:19.409 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:19.411 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 62.1296ms
2024-12-09 12:46:26.467 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:46:26.472 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:26.475 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.3818ms
2024-12-09 12:46:26.479 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:46:26.489 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:26.491 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:26.493 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:46:26.502 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:46:26.505 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:46:26.507 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:46:26.509 +05:30 [INF] Deserializing the notes
2024-12-09 12:46:26.511 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:46:26.518 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.5361ms
2024-12-09 12:46:26.520 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:46:26.520 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:26.525 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:26.529 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 50.1157ms
2024-12-09 12:46:26.535 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:26.542 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:46:26.546 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:46:26.549 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:46:26.554 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:46:26.558 +05:30 [INF] Deserializing the notes
2024-12-09 12:46:26.559 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:46:26.566 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.9114ms
2024-12-09 12:46:26.569 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:26.571 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.0365ms
2024-12-09 12:46:28.493 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:46:28.498 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:28.500 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:28.502 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:46:28.506 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:46:28.508 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:46:28.516 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:46:28.518 +05:30 [INF] Deserializing the notes
2024-12-09 12:46:28.520 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:46:28.523 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.8035ms
2024-12-09 12:46:28.525 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:46:28.531 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:28.537 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:46:28.540 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.7749ms
2024-12-09 12:46:28.543 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:28.563 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:46:28.569 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:46:28.571 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:46:28.574 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:46:28.576 +05:30 [INF] Deserializing the notes
2024-12-09 12:46:28.580 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:46:28.584 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.8641ms
2024-12-09 12:46:28.590 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:46:28.592 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 66.3559ms
2024-12-09 12:47:42.644 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:47:42.646 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:47:42.648 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9398ms
2024-12-09 12:47:42.650 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:47:42.654 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:47:42.657 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:42.658 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:47:42.662 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:47:42.664 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:47:42.665 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:47:42.666 +05:30 [INF] Deserializing the notes
2024-12-09 12:47:42.666 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:47:42.668 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.9518ms
2024-12-09 12:47:42.669 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:42.676 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:47:42.678 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.1301ms
2024-12-09 12:47:42.681 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:47:42.685 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:42.686 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:47:42.691 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:47:42.695 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:47:42.695 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:47:42.696 +05:30 [INF] Deserializing the notes
2024-12-09 12:47:42.697 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:47:42.699 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.3937ms
2024-12-09 12:47:42.700 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:42.701 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.8168ms
2024-12-09 12:47:46.408 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:47:46.412 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:47:46.413 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:46.414 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:47:46.417 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:47:46.419 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:47:46.421 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:47:46.425 +05:30 [INF] Deserializing the notes
2024-12-09 12:47:46.426 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:47:46.428 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.8723ms
2024-12-09 12:47:46.429 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:46.429 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.356ms
2024-12-09 12:47:46.464 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:47:46.468 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:47:46.470 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:46.471 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:47:46.474 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:47:46.476 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:47:46.477 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:47:46.478 +05:30 [INF] Deserializing the notes
2024-12-09 12:47:46.479 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:47:46.480 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.4794ms
2024-12-09 12:47:46.481 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:46.482 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.9092ms
2024-12-09 12:47:53.554 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:47:53.561 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:47:53.562 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6037ms
2024-12-09 12:47:53.564 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:47:53.569 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:47:53.570 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:53.571 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:47:53.573 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:47:53.574 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:47:53.575 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:47:53.579 +05:30 [INF] Deserializing the notes
2024-12-09 12:47:53.582 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:47:53.585 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.1575ms
2024-12-09 12:47:53.586 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:53.587 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:47:53.588 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.8974ms
2024-12-09 12:47:53.590 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:47:53.598 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:53.598 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:47:53.600 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:47:53.601 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:47:53.602 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:47:53.603 +05:30 [INF] Deserializing the notes
2024-12-09 12:47:53.605 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:47:53.610 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.744ms
2024-12-09 12:47:53.613 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:53.614 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.7762ms
2024-12-09 12:47:58.321 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:47:58.324 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:47:58.325 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:58.328 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:47:58.331 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:47:58.335 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:47:58.336 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:47:58.337 +05:30 [INF] Deserializing the notes
2024-12-09 12:47:58.338 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:47:58.340 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.16ms
2024-12-09 12:47:58.341 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:47:58.341 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:58.343 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:47:58.344 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.9175ms
2024-12-09 12:47:58.345 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:58.355 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:47:58.358 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:47:58.360 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:47:58.361 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:47:58.362 +05:30 [INF] Deserializing the notes
2024-12-09 12:47:58.363 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:47:58.365 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.376ms
2024-12-09 12:47:58.369 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:47:58.371 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.2088ms
2024-12-09 12:48:00.647 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:48:00.648 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:48:00.654 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:00.656 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:00.656 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.7527ms
2024-12-09 12:48:00.657 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.3391ms
2024-12-09 12:48:00.659 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:00.668 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:00.669 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:00.670 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:00.672 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:00.673 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:00.675 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:48:00.676 +05:30 [INF] Deserializing the notes
2024-12-09 12:48:00.677 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:00.684 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.36ms
2024-12-09 12:48:00.685 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:00.685 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:00.686 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.1285ms
2024-12-09 12:48:00.688 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:00.690 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:00.691 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:00.692 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:00.693 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:00.697 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:48:00.699 +05:30 [INF] Deserializing the notes
2024-12-09 12:48:00.700 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:00.701 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.7236ms
2024-12-09 12:48:00.702 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:00.703 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.7224ms
2024-12-09 12:48:03.890 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:03.892 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:03.894 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:03.895 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:03.897 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:03.898 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:03.899 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:48:03.900 +05:30 [INF] Deserializing the notes
2024-12-09 12:48:03.903 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:03.906 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.7777ms
2024-12-09 12:48:03.906 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:03.907 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:03.908 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.5423ms
2024-12-09 12:48:03.909 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:03.912 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:03.913 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:03.915 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:03.916 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:03.917 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:48:03.918 +05:30 [INF] Deserializing the notes
2024-12-09 12:48:03.919 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:03.926 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.9937ms
2024-12-09 12:48:03.927 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:03.928 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.1814ms
2024-12-09 12:48:19.080 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:48:19.083 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:19.084 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6832ms
2024-12-09 12:48:19.086 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:19.088 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:19.089 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:19.090 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:19.092 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:19.098 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:19.103 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 12:48:19.105 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 12:48:19.106 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 12:48:19.124 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 12:48:19.128 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 12:48:19.132 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 12:48:19.137 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 12:48:19.138 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 12:48:19.139 +05:30 [INF] Notes retrieved successfully
2024-12-09 12:48:19.139 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:19.140 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 48.0696ms
2024-12-09 12:48:19.141 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:19.142 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:19.144 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:19.145 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 59.4352ms
2024-12-09 12:48:19.146 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:19.154 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:19.155 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:19.157 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:19.157 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:48:19.158 +05:30 [INF] Deserializing the notes
2024-12-09 12:48:19.160 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:19.162 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.5365ms
2024-12-09 12:48:19.162 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:19.163 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.1084ms
2024-12-09 12:48:25.018 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:48:25.021 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:25.022 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1719ms
2024-12-09 12:48:25.025 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:25.028 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:25.029 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:25.030 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:25.031 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:25.033 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:25.035 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:48:25.037 +05:30 [INF] Deserializing the notes
2024-12-09 12:48:25.037 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:25.038 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.9318ms
2024-12-09 12:48:25.039 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:25.040 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.3135ms
2024-12-09 12:48:44.859 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:48:44.863 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:44.864 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.9613ms
2024-12-09 12:48:44.866 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:44.869 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:44.869 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:44.870 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:44.871 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:44.874 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:44.878 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:48:44.879 +05:30 [INF] Deserializing the notes
2024-12-09 12:48:44.881 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:44.883 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.4531ms
2024-12-09 12:48:44.884 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:44.885 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.4921ms
2024-12-09 12:48:44.971 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:44.973 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:44.974 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:44.974 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:44.975 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:44.976 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:44.977 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:48:44.978 +05:30 [INF] Deserializing the notes
2024-12-09 12:48:44.979 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:44.980 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6847ms
2024-12-09 12:48:44.980 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:44.981 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.7466ms
2024-12-09 12:48:44.992 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:44.995 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:44.996 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:44.997 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:44.999 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:45.000 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:45.002 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:48:45.005 +05:30 [INF] Deserializing the notes
2024-12-09 12:48:45.006 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:45.007 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.6517ms
2024-12-09 12:48:45.008 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:45.009 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.9359ms
2024-12-09 12:48:50.097 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:48:50.100 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:50.102 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2263ms
2024-12-09 12:48:50.104 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:50.109 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:50.109 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:50.112 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:50.113 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:50.117 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:50.118 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:48:50.119 +05:30 [INF] Deserializing the notes
2024-12-09 12:48:50.120 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:50.128 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.3902ms
2024-12-09 12:48:50.129 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:50.130 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:50.130 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.9818ms
2024-12-09 12:48:50.138 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:50.146 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:50.150 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:50.153 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:50.154 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:50.155 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:48:50.159 +05:30 [INF] Deserializing the notes
2024-12-09 12:48:50.161 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:50.162 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.8066ms
2024-12-09 12:48:50.163 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:50.163 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.6632ms
2024-12-09 12:48:58.950 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:48:58.953 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:58.954 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.2522ms
2024-12-09 12:48:58.956 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:58.959 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:58.965 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:58.966 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:58.968 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:58.969 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:58.970 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:48:58.971 +05:30 [INF] Deserializing the notes
2024-12-09 12:48:58.972 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:58.974 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.8101ms
2024-12-09 12:48:58.975 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:58.976 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:48:58.977 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.8976ms
2024-12-09 12:48:58.979 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:48:58.988 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:58.989 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:48:58.991 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:48:58.992 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:48:58.993 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:48:58.994 +05:30 [INF] Deserializing the notes
2024-12-09 12:48:58.995 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:48:58.996 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2575ms
2024-12-09 12:48:58.998 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:48:59.000 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.6884ms
2024-12-09 12:49:06.883 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:49:06.888 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:49:06.889 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.4916ms
2024-12-09 12:49:06.891 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:49:06.894 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:49:06.895 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:06.895 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:49:06.897 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:49:06.898 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:49:06.899 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:49:06.900 +05:30 [INF] Deserializing the notes
2024-12-09 12:49:06.900 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:49:06.901 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.1516ms
2024-12-09 12:49:06.905 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:06.906 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.8465ms
2024-12-09 12:49:09.246 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:49:09.248 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:49:09.249 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:09.250 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:49:09.251 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:49:09.253 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:49:09.253 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:49:09.254 +05:30 [INF] Deserializing the notes
2024-12-09 12:49:09.254 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:49:09.255 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4624ms
2024-12-09 12:49:09.256 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:09.257 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.5065ms
2024-12-09 12:49:11.866 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:49:11.869 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:49:11.870 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:11.871 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:49:11.872 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:49:11.873 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:49:11.874 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:49:11.874 +05:30 [INF] Deserializing the notes
2024-12-09 12:49:11.878 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:49:11.881 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.999ms
2024-12-09 12:49:11.882 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:11.882 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.807ms
2024-12-09 12:49:12.922 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:49:12.924 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:49:12.924 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9255ms
2024-12-09 12:49:12.926 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:49:12.928 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:49:12.929 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:12.930 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:49:12.931 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:49:12.932 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:49:12.932 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:49:12.933 +05:30 [INF] Deserializing the notes
2024-12-09 12:49:12.934 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:49:12.934 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.5496ms
2024-12-09 12:49:12.938 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:12.940 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.1883ms
2024-12-09 12:49:13.927 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:49:13.929 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:49:13.930 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:13.931 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:49:13.932 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:49:13.934 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:49:13.934 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:49:13.936 +05:30 [INF] Deserializing the notes
2024-12-09 12:49:13.936 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:49:13.937 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8293ms
2024-12-09 12:49:13.938 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:13.939 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.5914ms
2024-12-09 12:49:15.282 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:49:15.284 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:49:15.286 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:15.287 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:49:15.288 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:49:15.289 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:49:15.290 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:49:15.290 +05:30 [INF] Deserializing the notes
2024-12-09 12:49:15.291 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:49:15.293 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0181ms
2024-12-09 12:49:15.294 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:15.295 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.9479ms
2024-12-09 12:49:19.329 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:49:19.332 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:49:19.333 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.3244ms
2024-12-09 12:49:19.335 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:49:19.337 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:49:19.338 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:19.338 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:49:19.346 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:49:19.347 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:49:19.347 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:49:19.348 +05:30 [INF] Deserializing the notes
2024-12-09 12:49:19.348 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:49:19.349 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.6047ms
2024-12-09 12:49:19.350 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:49:19.351 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.9821ms
2024-12-09 12:50:57.815 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:50:57.822 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:50:57.824 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.5162ms
2024-12-09 12:50:57.827 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:50:57.829 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:50:57.830 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:50:57.831 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:50:57.833 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:50:57.834 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:50:57.835 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:50:57.836 +05:30 [INF] Deserializing the notes
2024-12-09 12:50:57.845 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:50:57.848 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.9691ms
2024-12-09 12:50:57.849 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:50:57.850 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.8971ms
2024-12-09 12:50:57.855 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:50:57.858 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:50:57.858 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:50:57.859 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:50:57.866 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:50:57.867 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:50:57.867 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:50:57.868 +05:30 [INF] Deserializing the notes
2024-12-09 12:50:57.869 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:50:57.870 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2548ms
2024-12-09 12:50:57.871 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:50:57.872 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.5783ms
2024-12-09 12:51:11.055 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:51:11.056 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:51:11.057 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4074ms
2024-12-09 12:51:11.060 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:51:11.061 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:51:11.062 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:11.062 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:51:11.064 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:51:11.068 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:51:11.068 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:51:11.073 +05:30 [INF] Deserializing the notes
2024-12-09 12:51:11.076 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:51:11.077 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.3558ms
2024-12-09 12:51:11.078 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:11.079 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.73ms
2024-12-09 12:51:11.082 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:51:11.085 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:51:11.086 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:11.086 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:51:11.088 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:51:11.088 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:51:11.089 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:51:11.090 +05:30 [INF] Deserializing the notes
2024-12-09 12:51:11.091 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:51:11.092 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3522ms
2024-12-09 12:51:11.093 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:11.097 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.6954ms
2024-12-09 12:51:12.246 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:51:12.249 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:51:12.250 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:12.252 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:51:12.256 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:51:12.258 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:51:12.261 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:51:12.263 +05:30 [INF] Deserializing the notes
2024-12-09 12:51:12.265 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:51:12.266 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.0921ms
2024-12-09 12:51:12.268 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:12.268 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:51:12.269 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.467ms
2024-12-09 12:51:12.271 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:51:12.274 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:12.275 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:51:12.277 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:51:12.278 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:51:12.283 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:51:12.284 +05:30 [INF] Deserializing the notes
2024-12-09 12:51:12.285 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:51:12.287 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.0112ms
2024-12-09 12:51:12.289 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:12.290 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.7863ms
2024-12-09 12:51:15.763 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:51:15.766 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:51:15.767 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:15.768 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:51:15.770 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:51:15.771 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:51:15.772 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:51:15.773 +05:30 [INF] Deserializing the notes
2024-12-09 12:51:15.774 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:51:15.775 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.8232ms
2024-12-09 12:51:15.776 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:15.777 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:51:15.777 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.5203ms
2024-12-09 12:51:15.779 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:51:15.786 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:15.788 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:51:15.789 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:51:15.790 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:51:15.791 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:51:15.792 +05:30 [INF] Deserializing the notes
2024-12-09 12:51:15.793 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:51:15.795 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5928ms
2024-12-09 12:51:15.796 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:15.797 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.4216ms
2024-12-09 12:51:27.824 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:51:27.827 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:51:27.829 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1714ms
2024-12-09 12:51:27.832 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:51:27.833 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:51:27.834 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:27.834 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:51:27.836 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:51:27.837 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:51:27.838 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:51:27.839 +05:30 [INF] Deserializing the notes
2024-12-09 12:51:27.840 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:51:27.846 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.589ms
2024-12-09 12:51:27.847 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:27.849 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.1956ms
2024-12-09 12:51:27.982 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:51:27.985 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:51:27.986 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:27.986 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:51:27.989 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:51:27.990 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:51:27.992 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:51:27.992 +05:30 [INF] Deserializing the notes
2024-12-09 12:51:27.993 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:51:27.994 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5967ms
2024-12-09 12:51:27.995 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:27.996 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.6013ms
2024-12-09 12:51:29.423 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:51:29.426 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:51:29.427 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:29.428 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:51:29.430 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:51:29.431 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:51:29.432 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:51:29.432 +05:30 [INF] Deserializing the notes
2024-12-09 12:51:29.433 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:51:29.435 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.4251ms
2024-12-09 12:51:29.436 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:29.436 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:51:29.437 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7712ms
2024-12-09 12:51:29.447 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:51:29.451 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:29.451 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:51:29.454 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:51:29.455 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:51:29.456 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:51:29.460 +05:30 [INF] Deserializing the notes
2024-12-09 12:51:29.463 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:51:29.465 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.2069ms
2024-12-09 12:51:29.467 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:51:29.468 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.8787ms
2024-12-09 12:52:47.446 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:52:47.448 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:52:47.449 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9916ms
2024-12-09 12:52:47.452 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:52:47.455 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:52:47.456 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:52:47.457 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:52:47.461 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:52:47.466 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:52:47.467 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:52:47.470 +05:30 [INF] Deserializing the notes
2024-12-09 12:52:47.472 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:52:47.474 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.4401ms
2024-12-09 12:52:47.475 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:52:47.477 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.2546ms
2024-12-09 12:52:47.480 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:52:47.487 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:52:47.489 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:52:47.490 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:52:47.491 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:52:47.493 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:52:47.496 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:52:47.498 +05:30 [INF] Deserializing the notes
2024-12-09 12:52:47.499 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:52:47.503 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.1244ms
2024-12-09 12:52:47.505 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:52:47.507 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.6997ms
2024-12-09 12:52:52.109 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:52:52.111 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:52:52.112 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:52:52.113 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:52:52.115 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:52:52.117 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:52:52.118 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:52:52.119 +05:30 [INF] Deserializing the notes
2024-12-09 12:52:52.120 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:52:52.122 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.9787ms
2024-12-09 12:52:52.123 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:52:52.123 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:52:52.124 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7696ms
2024-12-09 12:52:52.134 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:52:52.138 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:52:52.139 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:52:52.141 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:52:52.142 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:52:52.143 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:52:52.145 +05:30 [INF] Deserializing the notes
2024-12-09 12:52:52.149 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:52:52.152 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.1578ms
2024-12-09 12:52:52.154 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:52:52.156 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.6862ms
2024-12-09 12:52:58.708 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:52:58.712 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:52:58.713 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 12:52:58.713 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.9935ms
2024-12-09 12:52:58.716 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:52:58.716 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:52:58.719 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:52:58.720 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.1429ms
2024-12-09 12:52:58.721 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:52:58.724 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:52:58.725 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:52:58.727 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:52:58.733 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:52:58.734 +05:30 [INF] Deserializing the notes
2024-12-09 12:52:58.735 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:52:58.737 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.2609ms
2024-12-09 12:52:58.738 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:52:58.739 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:52:58.739 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.9109ms
2024-12-09 12:52:58.740 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:52:58.746 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:52:58.748 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:52:58.750 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:52:58.752 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:52:58.756 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:52:58.761 +05:30 [INF] Deserializing the notes
2024-12-09 12:52:58.764 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:52:58.765 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.4675ms
2024-12-09 12:52:58.767 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:52:58.767 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.6895ms
2024-12-09 12:53:02.604 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:53:02.606 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:53:02.608 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:53:02.609 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:53:02.612 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:53:02.615 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:53:02.616 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:53:02.617 +05:30 [INF] Deserializing the notes
2024-12-09 12:53:02.618 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:53:02.623 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.2617ms
2024-12-09 12:53:02.625 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:53:02.627 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:53:02.629 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:53:02.630 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.0113ms
2024-12-09 12:53:02.632 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:53:02.636 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:53:02.638 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:53:02.639 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:53:02.640 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:53:02.641 +05:30 [INF] Deserializing the notes
2024-12-09 12:53:02.642 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:53:02.648 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7029ms
2024-12-09 12:53:02.650 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:53:02.650 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.1062ms
2024-12-09 12:53:03.210 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:53:03.213 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:53:03.215 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:53:03.216 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:53:03.218 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:53:03.220 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:53:03.221 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:53:03.221 +05:30 [INF] Deserializing the notes
2024-12-09 12:53:03.222 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:53:03.224 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.9976ms
2024-12-09 12:53:03.225 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:53:03.226 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.8418ms
2024-12-09 12:53:03.241 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 12:53:03.242 +05:30 [INF] CORS policy execution successful.
2024-12-09 12:53:03.243 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:53:03.243 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 12:53:03.245 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 12:53:03.246 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 12:53:03.248 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 12:53:03.248 +05:30 [INF] Deserializing the notes
2024-12-09 12:53:03.249 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 12:53:03.254 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.8953ms
2024-12-09 12:53:03.257 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 12:53:03.258 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.3518ms
2024-12-09 13:04:35.959 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:04:35.966 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:04:35.967 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.2586ms
2024-12-09 13:04:35.969 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:04:35.971 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:04:35.972 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:04:35.972 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:04:35.974 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:04:35.975 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:04:35.980 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:04:35.982 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:04:35.983 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:04:36.008 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:04:36.013 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:04:36.020 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:04:36.022 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:04:36.023 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:04:36.024 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:04:36.024 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:04:36.026 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 52.0834ms
2024-12-09 13:04:36.027 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:04:36.027 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:04:36.034 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:04:36.035 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 66.1964ms
2024-12-09 13:04:36.035 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:04:36.038 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:04:36.040 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:04:36.042 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:04:36.043 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:04:36.046 +05:30 [INF] Deserializing the notes
2024-12-09 13:04:36.047 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:04:36.048 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.7506ms
2024-12-09 13:04:36.049 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:04:36.050 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.0255ms
2024-12-09 13:04:43.119 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:04:43.121 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:04:43.121 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.0924ms
2024-12-09 13:04:43.123 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:04:43.126 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:04:43.127 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:04:43.128 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:04:43.129 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:04:43.130 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:04:43.132 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:04:43.135 +05:30 [INF] Deserializing the notes
2024-12-09 13:04:43.135 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:04:43.136 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.7792ms
2024-12-09 13:04:43.137 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:04:43.137 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:04:43.138 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.8064ms
2024-12-09 13:04:43.139 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:04:43.142 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:04:43.144 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:04:43.149 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:04:43.151 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:04:43.152 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:04:43.153 +05:30 [INF] Deserializing the notes
2024-12-09 13:04:43.154 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:04:43.155 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.2903ms
2024-12-09 13:04:43.156 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:04:43.157 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.0807ms
2024-12-09 13:06:20.041 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:06:20.053 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:20.053 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:06:20.054 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.0662ms
2024-12-09 13:06:20.056 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:20.056 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:06:20.059 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3422ms
2024-12-09 13:06:20.061 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:20.067 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:20.068 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:20.070 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:06:20.071 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:06:20.071 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:06:20.072 +05:30 [INF] Deserializing the notes
2024-12-09 13:06:20.073 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:20.074 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5576ms
2024-12-09 13:06:20.075 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:20.075 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:06:20.076 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.9353ms
2024-12-09 13:06:20.077 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:20.081 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:20.085 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:20.088 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:06:20.089 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:06:20.090 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:06:20.091 +05:30 [INF] Deserializing the notes
2024-12-09 13:06:20.092 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:20.093 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.3342ms
2024-12-09 13:06:20.094 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:20.096 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.7693ms
2024-12-09 13:06:35.661 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:06:35.663 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:35.664 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.991ms
2024-12-09 13:06:35.665 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:06:35.667 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:35.668 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:35.668 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:35.670 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:06:35.672 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:06:35.673 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:06:35.674 +05:30 [INF] Deserializing the notes
2024-12-09 13:06:35.675 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:35.682 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.5369ms
2024-12-09 13:06:35.683 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:35.683 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:06:35.684 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.9465ms
2024-12-09 13:06:35.686 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:35.689 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:35.691 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:35.694 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:06:35.700 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:06:35.701 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:06:35.702 +05:30 [INF] Deserializing the notes
2024-12-09 13:06:35.703 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:35.705 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.154ms
2024-12-09 13:06:35.708 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:35.710 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.574ms
2024-12-09 13:06:38.052 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:06:38.053 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:06:38.057 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:38.058 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:38.059 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 7.1953ms
2024-12-09 13:06:38.061 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:06:38.060 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:38.067 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:38.069 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:38.071 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:06:38.072 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:06:38.072 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:38.073 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:06:38.075 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:06:38.075 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:06:38.075 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:06:38.076 +05:30 [INF] Deserializing the notes
2024-12-09 13:06:38.076 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:06:38.077 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:38.077 +05:30 [INF] Received isArchive value: True
2024-12-09 13:06:38.078 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.9684ms
2024-12-09 13:06:38.079 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:38.080 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.3636ms
2024-12-09 13:06:38.086 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:06:38.092 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:06:38.098 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:06:38.099 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:06:38.100 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:38.101 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 26.2088ms
2024-12-09 13:06:38.102 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:06:38.102 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 41.0203ms
2024-12-09 13:06:39.550 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:06:39.551 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:06:39.554 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:39.557 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:39.558 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:06:39.559 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:39.559 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:39.560 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:39.561 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:06:39.563 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:06:39.563 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:06:39.564 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:06:39.567 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:06:39.569 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:06:39.569 +05:30 [INF] Received isArchive value: True
2024-12-09 13:06:39.570 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:06:39.571 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:06:39.572 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:06:39.577 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:06:39.579 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:06:39.580 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:06:39.580 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:39.582 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 20.6535ms
2024-12-09 13:06:39.584 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:06:39.584 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:06:39.586 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:06:39.586 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 36.4039ms
2024-12-09 13:06:39.588 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:06:39.590 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:06:39.590 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:06:39.591 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:06:39.592 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:39.600 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 37.6307ms
2024-12-09 13:06:39.601 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:39.602 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.9345ms
2024-12-09 13:06:43.816 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:06:43.816 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:06:43.820 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:43.821 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:43.823 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 6.9701ms
2024-12-09 13:06:43.825 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:06:43.824 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.966ms
2024-12-09 13:06:43.826 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:06:43.832 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:43.835 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:43.836 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:06:43.836 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:43.837 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:43.837 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:43.838 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:06:43.839 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:06:43.839 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:06:43.840 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:06:43.841 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:06:43.841 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:06:43.842 +05:30 [INF] Received isArchive value: True
2024-12-09 13:06:43.842 +05:30 [INF] Deserializing the notes
2024-12-09 13:06:43.847 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:06:43.848 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:43.850 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:06:43.851 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.2151ms
2024-12-09 13:06:43.853 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:06:43.853 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:43.854 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:06:43.855 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.0142ms
2024-12-09 13:06:43.855 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:43.857 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 19.1788ms
2024-12-09 13:06:43.858 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:06:43.859 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 33.9685ms
2024-12-09 13:06:45.021 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:06:45.023 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:45.023 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:45.024 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:45.025 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:06:45.028 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:06:45.029 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:06:45.030 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:06:45.031 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:06:45.033 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:06:45.036 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:06:45.038 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:06:45.040 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:06:45.045 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:06:45.046 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:06:45.047 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:45.048 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.9473ms
2024-12-09 13:06:45.049 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:45.050 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.3198ms
2024-12-09 13:06:46.436 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:06:46.436 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:06:46.440 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:46.444 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:46.445 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:06:46.446 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:46.447 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:46.448 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:46.451 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:06:46.452 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:06:46.452 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:06:46.453 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:06:46.454 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:06:46.454 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:06:46.455 +05:30 [INF] Received isArchive value: True
2024-12-09 13:06:46.455 +05:30 [INF] Deserializing the notes
2024-12-09 13:06:46.457 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:06:46.459 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:46.463 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:06:46.463 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.8323ms
2024-12-09 13:06:46.465 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:06:46.465 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:46.466 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:06:46.467 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.7657ms
2024-12-09 13:06:46.468 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:46.474 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 23.9038ms
2024-12-09 13:06:46.475 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:06:46.475 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 40.111ms
2024-12-09 13:06:58.437 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:06:58.439 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:58.440 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.2746ms
2024-12-09 13:06:58.443 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:06:58.451 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:58.452 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:58.455 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:58.458 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:06:58.459 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:06:58.459 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:06:58.460 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:06:58.461 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:06:58.464 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:06:58.471 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:06:58.473 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:06:58.475 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:06:58.475 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:06:58.476 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:06:58.477 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:58.478 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.9087ms
2024-12-09 13:06:58.478 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:58.480 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.227ms
2024-12-09 13:06:58.512 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:06:58.516 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:06:58.517 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:58.518 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:06:58.520 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:06:58.520 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:06:58.521 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:06:58.522 +05:30 [INF] Deserializing the notes
2024-12-09 13:06:58.526 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:06:58.528 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.8077ms
2024-12-09 13:06:58.531 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:06:58.532 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.5839ms
2024-12-09 13:07:03.393 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:07:03.396 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:07:03.397 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 4.1792ms
2024-12-09 13:07:03.399 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:07:03.402 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:07:03.403 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:07:03.403 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:07:03.405 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:07:03.405 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:07:03.406 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:07:03.406 +05:30 [INF] Received isArchive value: True
2024-12-09 13:07:03.411 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:07:03.413 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:07:03.415 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:07:03.416 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:07:03.416 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:07:03.417 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 12.1997ms
2024-12-09 13:07:03.417 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:07:03.418 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 19.5603ms
2024-12-09 13:07:06.387 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:07:06.390 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:07:06.390 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6084ms
2024-12-09 13:07:06.392 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:07:06.395 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:07:06.395 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:07:06.396 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:07:06.398 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:07:06.399 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:07:06.400 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:07:06.400 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:07:06.402 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:07:06.410 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:07:06.416 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:07:06.418 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:07:06.419 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:07:06.420 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:07:06.421 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:07:06.425 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:07:06.427 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 29.4596ms
2024-12-09 13:07:06.428 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:07:06.429 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.7562ms
2024-12-09 13:07:07.807 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:07:07.808 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:07:07.809 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:07:07.810 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:07:07.812 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:07:07.813 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:07:07.814 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:07:07.815 +05:30 [INF] Deserializing the notes
2024-12-09 13:07:07.819 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:07:07.823 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.947ms
2024-12-09 13:07:07.824 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:07:07.824 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:07:07.827 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:07:07.828 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.2054ms
2024-12-09 13:07:07.833 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:07:07.837 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:07:07.838 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:07:07.839 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:07:07.840 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:07:07.840 +05:30 [INF] Deserializing the notes
2024-12-09 13:07:07.841 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:07:07.842 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8857ms
2024-12-09 13:07:07.843 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:07:07.843 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.5792ms
2024-12-09 13:07:10.371 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:07:10.373 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:07:10.375 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:07:10.376 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:07:10.379 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:07:10.380 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:07:10.381 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:07:10.381 +05:30 [INF] Deserializing the notes
2024-12-09 13:07:10.382 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:07:10.383 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5738ms
2024-12-09 13:07:10.386 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:07:10.388 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.6649ms
2024-12-09 13:07:29.252 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:07:29.255 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:07:29.257 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.2664ms
2024-12-09 13:07:29.259 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:07:29.262 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:07:29.264 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:07:29.265 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:07:29.270 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:07:29.272 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:07:29.272 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:07:29.273 +05:30 [INF] Deserializing the notes
2024-12-09 13:07:29.273 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:07:29.275 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9823ms
2024-12-09 13:07:29.276 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:07:29.276 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.93ms
2024-12-09 13:08:30.713 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:08:30.716 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:08:30.716 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9062ms
2024-12-09 13:08:30.718 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:08:30.719 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:08:30.720 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:30.721 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:08:30.722 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:08:30.725 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:08:30.727 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:08:30.728 +05:30 [INF] Deserializing the notes
2024-12-09 13:08:30.729 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:08:30.730 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.2824ms
2024-12-09 13:08:30.731 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:30.733 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7925ms
2024-12-09 13:08:30.769 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:08:30.771 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:08:30.772 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:30.773 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:08:30.775 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:08:30.777 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:08:30.777 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:08:30.778 +05:30 [INF] Deserializing the notes
2024-12-09 13:08:30.779 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:08:30.780 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.8857ms
2024-12-09 13:08:30.781 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:30.787 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.2265ms
2024-12-09 13:08:40.472 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:08:40.474 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:08:40.474 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.1524ms
2024-12-09 13:08:40.476 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:08:40.478 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:08:40.479 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:40.480 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:08:40.482 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:08:40.483 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:08:40.484 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:08:40.485 +05:30 [INF] Deserializing the notes
2024-12-09 13:08:40.486 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:08:40.487 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.114ms
2024-12-09 13:08:40.488 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:08:40.492 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:40.494 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:08:40.495 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.5335ms
2024-12-09 13:08:40.496 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:40.499 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:08:40.501 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:08:40.502 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:08:40.503 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:08:40.506 +05:30 [INF] Deserializing the notes
2024-12-09 13:08:40.509 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:08:40.510 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5888ms
2024-12-09 13:08:40.512 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:40.513 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.1784ms
2024-12-09 13:08:47.903 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:08:47.907 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:08:47.910 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.303ms
2024-12-09 13:08:47.913 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:08:47.916 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:08:47.917 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:47.918 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:08:47.924 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:08:47.926 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:08:47.926 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:08:47.927 +05:30 [INF] Deserializing the notes
2024-12-09 13:08:47.928 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:08:47.932 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.7225ms
2024-12-09 13:08:47.934 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:47.934 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:08:47.935 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.2899ms
2024-12-09 13:08:47.936 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:08:47.943 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:47.945 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:08:47.947 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:08:47.948 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:08:47.949 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:08:47.950 +05:30 [INF] Deserializing the notes
2024-12-09 13:08:47.950 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:08:47.952 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2486ms
2024-12-09 13:08:47.953 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:47.954 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.6887ms
2024-12-09 13:08:50.009 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:08:50.010 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:08:50.011 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:50.012 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:08:50.014 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:08:50.015 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:08:50.016 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:08:50.017 +05:30 [INF] Deserializing the notes
2024-12-09 13:08:50.018 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:08:50.019 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5604ms
2024-12-09 13:08:50.021 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:08:50.024 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:50.028 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:08:50.029 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.1325ms
2024-12-09 13:08:50.030 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:50.034 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:08:50.036 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:08:50.039 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:08:50.042 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:08:50.043 +05:30 [INF] Deserializing the notes
2024-12-09 13:08:50.044 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:08:50.045 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4575ms
2024-12-09 13:08:50.047 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:08:50.048 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.0202ms
2024-12-09 13:09:15.667 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:09:15.677 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:15.679 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.8978ms
2024-12-09 13:09:15.687 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:09:15.696 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:15.697 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:15.699 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:09:15.704 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:09:15.707 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:09:15.708 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:09:15.708 +05:30 [INF] Deserializing the notes
2024-12-09 13:09:15.709 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:09:15.710 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.0371ms
2024-12-09 13:09:15.711 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:15.711 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:09:15.712 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.7445ms
2024-12-09 13:09:15.718 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:15.722 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:15.723 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:09:15.724 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:09:15.725 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:09:15.726 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:09:15.726 +05:30 [INF] Deserializing the notes
2024-12-09 13:09:15.727 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:09:15.732 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.095ms
2024-12-09 13:09:15.733 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:15.736 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.3697ms
2024-12-09 13:09:16.916 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:09:16.920 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:16.920 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:16.921 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:09:16.922 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:09:16.924 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:09:16.924 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:09:16.925 +05:30 [INF] Deserializing the notes
2024-12-09 13:09:16.926 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:09:16.927 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8335ms
2024-12-09 13:09:16.928 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:16.928 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:09:16.929 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.1974ms
2024-12-09 13:09:16.937 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:16.940 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:16.941 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:09:16.943 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:09:16.944 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:09:16.948 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:09:16.950 +05:30 [INF] Deserializing the notes
2024-12-09 13:09:16.951 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:09:16.952 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.2255ms
2024-12-09 13:09:16.953 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:16.955 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.7295ms
2024-12-09 13:09:21.545 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:09:21.547 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:21.548 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.7471ms
2024-12-09 13:09:21.549 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:09:21.553 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:21.558 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:21.559 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:09:21.562 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:09:21.563 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:09:21.564 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:09:21.565 +05:30 [INF] Deserializing the notes
2024-12-09 13:09:21.566 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:09:21.569 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.1956ms
2024-12-09 13:09:21.571 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:21.572 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.7953ms
2024-12-09 13:09:22.956 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:09:22.958 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:22.958 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 2.6854ms
2024-12-09 13:09:22.959 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:09:22.961 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:22.962 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:09:22.962 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:09:22.965 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:09:22.965 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:09:22.966 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:09:22.967 +05:30 [INF] Received isArchive value: True
2024-12-09 13:09:22.974 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:09:22.978 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:09:22.980 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:09:22.985 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:09:22.987 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:09:22.988 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 23.9778ms
2024-12-09 13:09:22.989 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:09:22.991 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 31.1602ms
2024-12-09 13:09:25.246 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:09:25.249 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:25.250 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:25.251 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:09:25.253 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:09:25.255 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:09:25.256 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:09:25.256 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:09:25.257 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:09:25.259 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:09:25.260 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:09:25.261 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:09:25.263 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:09:25.264 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:09:25.265 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:09:25.271 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:09:25.272 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.0652ms
2024-12-09 13:09:25.273 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:25.273 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.3163ms
2024-12-09 13:09:39.777 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:09:39.780 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:39.781 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9247ms
2024-12-09 13:09:39.783 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:09:39.784 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:39.785 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:39.785 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:09:39.787 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:09:39.788 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:09:39.791 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:09:39.793 +05:30 [INF] Deserializing the notes
2024-12-09 13:09:39.794 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:09:39.795 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.6495ms
2024-12-09 13:09:39.796 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:39.797 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.0697ms
2024-12-09 13:09:41.584 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:09:41.586 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:41.588 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:41.589 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:09:41.590 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:09:41.592 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:09:41.593 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:09:41.594 +05:30 [INF] Deserializing the notes
2024-12-09 13:09:41.595 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:09:41.596 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.8002ms
2024-12-09 13:09:41.597 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:41.600 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.8244ms
2024-12-09 13:09:42.982 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:09:42.987 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:09:42.988 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:42.989 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:09:42.992 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:09:42.993 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:09:42.995 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:09:42.995 +05:30 [INF] Deserializing the notes
2024-12-09 13:09:42.996 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:09:42.997 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0906ms
2024-12-09 13:09:43.000 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:09:43.002 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.2534ms
2024-12-09 13:10:30.725 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:10:30.734 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:30.736 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.7448ms
2024-12-09 13:10:30.740 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:10:30.746 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:30.747 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:30.747 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:30.749 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:10:30.750 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:10:30.752 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:10:30.752 +05:30 [INF] Deserializing the notes
2024-12-09 13:10:30.753 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:30.755 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.7247ms
2024-12-09 13:10:30.761 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:30.762 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.3723ms
2024-12-09 13:10:30.770 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:10:30.771 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:30.772 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:30.773 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:30.777 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:10:30.781 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:10:30.781 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:10:30.782 +05:30 [INF] Deserializing the notes
2024-12-09 13:10:30.783 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:30.784 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.8014ms
2024-12-09 13:10:30.785 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:30.786 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.0547ms
2024-12-09 13:10:42.772 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:10:42.775 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:42.776 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.5849ms
2024-12-09 13:10:42.778 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:10:42.780 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:42.780 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:42.781 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:42.783 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:10:42.784 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:10:42.785 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:10:42.786 +05:30 [INF] Deserializing the notes
2024-12-09 13:10:42.787 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:42.788 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2875ms
2024-12-09 13:10:42.790 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:42.796 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:10:42.797 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.8262ms
2024-12-09 13:10:42.805 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:42.811 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:42.812 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:42.815 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:10:42.816 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:10:42.817 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:10:42.817 +05:30 [INF] Deserializing the notes
2024-12-09 13:10:42.819 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:42.820 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8663ms
2024-12-09 13:10:42.820 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:42.821 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.9114ms
2024-12-09 13:10:43.501 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:10:43.502 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:43.504 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:43.505 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:43.508 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:10:43.510 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:10:43.511 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:10:43.512 +05:30 [INF] Deserializing the notes
2024-12-09 13:10:43.513 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:43.514 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.5575ms
2024-12-09 13:10:43.515 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:43.516 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:10:43.521 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.6566ms
2024-12-09 13:10:43.523 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:43.526 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:43.527 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:43.528 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:10:43.529 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:10:43.530 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:10:43.531 +05:30 [INF] Deserializing the notes
2024-12-09 13:10:43.531 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:43.533 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6234ms
2024-12-09 13:10:43.533 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:43.534 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.4928ms
2024-12-09 13:10:47.238 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:10:47.240 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:47.240 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:47.241 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:47.242 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:10:47.244 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:10:47.245 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:10:47.246 +05:30 [INF] Deserializing the notes
2024-12-09 13:10:47.247 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:47.252 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.2303ms
2024-12-09 13:10:47.255 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:47.257 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.3247ms
2024-12-09 13:10:50.597 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:10:50.599 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:50.600 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.4732ms
2024-12-09 13:10:50.603 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:10:50.605 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:50.606 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:50.607 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:50.608 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:10:50.609 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:10:50.610 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:10:50.610 +05:30 [INF] Deserializing the notes
2024-12-09 13:10:50.611 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:50.612 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8244ms
2024-12-09 13:10:50.613 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:50.616 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.2396ms
2024-12-09 13:10:52.768 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:10:52.772 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:52.773 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 4.9986ms
2024-12-09 13:10:52.774 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:10:52.779 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:52.784 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:10:52.787 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:52.788 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:10:52.788 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:10:52.789 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:10:52.789 +05:30 [INF] Received isArchive value: False
2024-12-09 13:10:52.793 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:10:52.796 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:10:52.805 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:10:52.807 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:10:52.807 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:10:52.808 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:52.809 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 21.2116ms
2024-12-09 13:10:52.810 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:10:52.810 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 35.8113ms
2024-12-09 13:10:53.573 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:10:53.575 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:53.575 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:10:53.576 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:53.577 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:10:53.578 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:10:53.579 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:10:53.579 +05:30 [INF] Received isArchive value: False
2024-12-09 13:10:53.581 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:10:53.585 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:10:53.590 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:10:53.591 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:10:53.592 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:53.592 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 15.0182ms
2024-12-09 13:10:53.593 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:10:53.593 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 20.4912ms
2024-12-09 13:10:54.022 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:10:54.026 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:54.027 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:10:54.028 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:54.030 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:10:54.031 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:10:54.032 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:10:54.033 +05:30 [INF] Received isArchive value: False
2024-12-09 13:10:54.036 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:10:54.039 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:10:54.041 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:10:54.041 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:10:54.042 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:54.042 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 12.3346ms
2024-12-09 13:10:54.043 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:10:54.044 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 21.7118ms
2024-12-09 13:10:54.247 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:10:54.248 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:54.249 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:10:54.249 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:54.251 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:10:54.251 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:10:54.252 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:10:54.253 +05:30 [INF] Received isArchive value: False
2024-12-09 13:10:54.254 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:10:54.258 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:10:54.260 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:10:54.261 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:10:54.261 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:54.262 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 12.018ms
2024-12-09 13:10:54.269 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:10:54.270 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 23.4686ms
2024-12-09 13:10:55.255 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:10:55.257 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:55.258 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:55.258 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:55.260 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:10:55.262 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:10:55.263 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:10:55.263 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:10:55.264 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:10:55.266 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:10:55.273 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:10:55.275 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:10:55.276 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:10:55.277 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:10:55.278 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:10:55.278 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:55.279 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.4541ms
2024-12-09 13:10:55.285 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:55.285 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.5132ms
2024-12-09 13:10:57.186 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:10:57.188 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:57.189 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9304ms
2024-12-09 13:10:57.191 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:10:57.192 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:57.193 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:57.194 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:57.196 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:10:57.197 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:10:57.197 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:10:57.198 +05:30 [INF] Deserializing the notes
2024-12-09 13:10:57.199 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:57.200 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0537ms
2024-12-09 13:10:57.204 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:57.207 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.8977ms
2024-12-09 13:10:58.806 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - null null
2024-12-09 13:10:58.807 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:58.808 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - 204 null null 2.5743ms
2024-12-09 13:10:58.809 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - application/json 5
2024-12-09 13:10:58.812 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:58.812 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:10:58.813 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:58.815 +05:30 [INF] Received noteId: 1026, isArchive: False
2024-12-09 13:10:58.815 +05:30 [INF] Received request to toggle archive status for note with ID: 1026
2024-12-09 13:10:58.816 +05:30 [INF] Initiating toggle of archive status for note with ID: 1026 for user ID: 1
2024-12-09 13:10:58.819 +05:30 [INF] Received isArchive value: False
2024-12-09 13:10:58.822 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:10:58.825 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:10:58.828 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:10:58.832 +05:30 [INF] Note with ID: 1026 archive status updated to false
2024-12-09 13:10:58.833 +05:30 [INF] Successfully toggled archive status for note with ID: 1026
2024-12-09 13:10:58.834 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:58.834 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 19.7254ms
2024-12-09 13:10:58.835 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:10:58.836 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - 200 null application/json; charset=utf-8 26.2992ms
2024-12-09 13:10:59.974 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:10:59.976 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:10:59.978 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:10:59.979 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:10:59.982 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:10:59.984 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:10:59.985 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:10:59.986 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:10:59.986 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:10:59.988 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:10:59.993 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:10:59.994 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:10:59.996 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:10:59.996 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:10:59.997 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:10:59.998 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:10:59.999 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.8912ms
2024-12-09 13:11:00.000 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:11:00.001 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.8463ms
2024-12-09 13:11:01.374 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:11:01.378 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:11:01.378 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:11:01.379 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:11:01.380 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:11:01.382 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:11:01.383 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:11:01.384 +05:30 [INF] Deserializing the notes
2024-12-09 13:11:01.385 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:11:01.386 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5299ms
2024-12-09 13:11:01.387 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:11:01.387 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.4725ms
2024-12-09 13:11:02.557 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:11:02.559 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:11:02.560 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6415ms
2024-12-09 13:11:02.561 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:11:02.563 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:11:02.565 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:11:02.566 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:11:02.567 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:11:02.570 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:11:02.571 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:11:02.571 +05:30 [INF] Deserializing the notes
2024-12-09 13:11:02.572 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:11:02.572 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.3657ms
2024-12-09 13:11:02.576 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:11:02.578 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.7276ms
2024-12-09 13:11:12.126 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:11:12.128 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:11:12.128 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 2.7997ms
2024-12-09 13:11:12.130 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:11:12.132 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:11:12.132 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:11:12.133 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:11:12.135 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:11:12.135 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:11:12.136 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:11:12.137 +05:30 [INF] Received isArchive value: True
2024-12-09 13:11:12.139 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:11:12.141 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:11:12.146 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:11:12.152 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:11:12.152 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:11:12.153 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:11:12.154 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 19.3535ms
2024-12-09 13:11:12.155 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:11:12.155 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 25.3648ms
2024-12-09 13:11:13.919 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:11:13.922 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:11:13.923 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7869ms
2024-12-09 13:11:13.925 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:11:13.926 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:11:13.928 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:11:13.928 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:11:13.930 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:11:13.932 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:11:13.932 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:11:13.933 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:11:13.933 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:11:13.935 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:11:13.939 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:11:13.941 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:11:13.942 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:11:13.943 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:11:13.944 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:11:13.945 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:11:13.946 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.6791ms
2024-12-09 13:11:13.947 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:11:13.947 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.7257ms
2024-12-09 13:11:16.609 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:11:16.615 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:11:16.616 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:11:16.617 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:11:16.619 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:11:16.619 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:11:16.620 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:11:16.620 +05:30 [INF] Received isArchive value: False
2024-12-09 13:11:16.622 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:11:16.628 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:11:16.632 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:11:16.633 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:11:16.634 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:11:16.634 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:11:16.635 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 16.4369ms
2024-12-09 13:11:16.636 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:11:16.639 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 30.7513ms
2024-12-09 13:11:20.484 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:11:20.486 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:11:20.487 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.3509ms
2024-12-09 13:11:20.489 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:11:20.491 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:11:20.491 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:11:20.492 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:11:20.494 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:11:20.495 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:11:20.495 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:11:20.496 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:11:20.496 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:11:20.498 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:11:20.499 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:11:20.500 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:11:20.506 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:11:20.506 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:11:20.507 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:11:20.507 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:11:20.509 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.3232ms
2024-12-09 13:11:20.510 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:11:20.510 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.607ms
2024-12-09 13:11:25.763 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:11:25.765 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:11:25.766 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.3404ms
2024-12-09 13:11:25.768 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:11:25.770 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:11:25.772 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:11:25.772 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:11:25.775 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:11:25.776 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:11:25.779 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:11:25.781 +05:30 [INF] Deserializing the notes
2024-12-09 13:11:25.781 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:11:25.782 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.0838ms
2024-12-09 13:11:25.783 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:11:25.784 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.6987ms
2024-12-09 13:12:29.704 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:12:29.712 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:29.714 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.7531ms
2024-12-09 13:12:29.730 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:12:29.738 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:29.741 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:29.743 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:29.746 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:12:29.747 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:12:29.749 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:12:29.751 +05:30 [INF] Deserializing the notes
2024-12-09 13:12:29.752 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:29.754 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.259ms
2024-12-09 13:12:29.756 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:12:29.759 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:29.764 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:29.765 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.4648ms
2024-12-09 13:12:29.769 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:29.772 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:29.774 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:12:29.775 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:12:29.776 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:12:29.777 +05:30 [INF] Deserializing the notes
2024-12-09 13:12:29.777 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:29.778 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9906ms
2024-12-09 13:12:29.779 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:29.780 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.2537ms
2024-12-09 13:12:29.787 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:12:29.792 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:29.793 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:29.794 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:29.796 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:12:29.797 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:12:29.797 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:12:29.798 +05:30 [INF] Deserializing the notes
2024-12-09 13:12:29.799 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:29.801 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.4585ms
2024-12-09 13:12:29.802 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:29.803 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.4727ms
2024-12-09 13:12:36.725 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:12:36.727 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:36.728 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9798ms
2024-12-09 13:12:36.729 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:12:36.731 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:36.733 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:36.734 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:36.736 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:12:36.737 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:12:36.738 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:12:36.739 +05:30 [INF] Deserializing the notes
2024-12-09 13:12:36.740 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:36.741 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.937ms
2024-12-09 13:12:36.745 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:36.747 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:12:36.748 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.5711ms
2024-12-09 13:12:36.750 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:36.753 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:36.753 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:36.755 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:12:36.758 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:12:36.760 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:12:36.761 +05:30 [INF] Deserializing the notes
2024-12-09 13:12:36.762 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:36.763 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.9707ms
2024-12-09 13:12:36.764 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:36.765 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.4647ms
2024-12-09 13:12:38.303 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:12:38.306 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:38.307 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:38.308 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:38.309 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:12:38.310 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:12:38.311 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:12:38.312 +05:30 [INF] Deserializing the notes
2024-12-09 13:12:38.313 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:38.314 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0626ms
2024-12-09 13:12:38.315 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:38.316 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.4789ms
2024-12-09 13:12:38.325 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:12:38.327 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:38.328 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:38.329 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:38.330 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:12:38.332 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:12:38.333 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:12:38.333 +05:30 [INF] Deserializing the notes
2024-12-09 13:12:38.335 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:38.341 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6336ms
2024-12-09 13:12:38.344 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:38.345 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.2825ms
2024-12-09 13:12:42.826 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:12:42.828 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:42.829 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.3759ms
2024-12-09 13:12:42.832 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:12:42.833 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:12:42.845 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:42.846 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:42.848 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.512ms
2024-12-09 13:12:42.849 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:42.852 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:42.854 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:12:42.855 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:12:42.856 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:12:42.857 +05:30 [INF] Deserializing the notes
2024-12-09 13:12:42.858 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:42.859 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5489ms
2024-12-09 13:12:42.860 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:42.861 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:12:42.866 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.0271ms
2024-12-09 13:12:42.867 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:42.870 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:42.871 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:42.873 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:12:42.874 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:12:42.875 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:12:42.876 +05:30 [INF] Deserializing the notes
2024-12-09 13:12:42.876 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:42.878 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9688ms
2024-12-09 13:12:42.878 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:42.879 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.4679ms
2024-12-09 13:12:46.420 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:12:46.423 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:46.424 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 4.4712ms
2024-12-09 13:12:46.426 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:12:46.431 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:46.432 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:12:46.435 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:46.439 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:12:46.439 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:12:46.439 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:12:46.440 +05:30 [INF] Received isArchive value: True
2024-12-09 13:12:46.450 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:12:46.453 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:12:46.460 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:12:46.463 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:12:46.463 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:12:46.464 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:46.464 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 25.7647ms
2024-12-09 13:12:46.465 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:12:46.466 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 39.9443ms
2024-12-09 13:12:50.100 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:12:50.102 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:50.103 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.5269ms
2024-12-09 13:12:50.105 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:12:50.107 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:50.107 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:50.108 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:50.109 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:12:50.110 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:12:50.114 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:12:50.117 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:12:50.117 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:12:50.119 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:12:50.120 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:12:50.122 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:12:50.123 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:12:50.124 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:12:50.125 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:12:50.125 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:50.130 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.8286ms
2024-12-09 13:12:50.131 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:50.132 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.2064ms
2024-12-09 13:12:52.079 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:12:52.083 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:52.083 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 4.203ms
2024-12-09 13:12:52.084 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:12:52.088 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:52.088 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:12:52.089 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:52.091 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:12:52.095 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:12:52.096 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:12:52.096 +05:30 [INF] Received isArchive value: False
2024-12-09 13:12:52.098 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:12:52.100 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:12:52.102 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:12:52.104 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:12:52.108 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:12:52.109 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:52.111 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 20.6109ms
2024-12-09 13:12:52.112 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:12:52.112 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 28.0807ms
2024-12-09 13:12:52.926 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:12:52.929 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:52.930 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:12:52.931 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:52.933 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:12:52.934 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:12:52.934 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:12:52.935 +05:30 [INF] Received isArchive value: False
2024-12-09 13:12:52.941 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:12:52.945 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:12:52.947 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:12:52.947 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:12:52.948 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:52.948 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 15.0937ms
2024-12-09 13:12:52.949 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:12:52.950 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 24.6328ms
2024-12-09 13:12:54.108 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:12:54.112 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:54.114 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:54.115 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:54.116 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:12:54.117 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:12:54.118 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:12:54.118 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:12:54.119 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:12:54.121 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:12:54.125 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:12:54.127 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:12:54.128 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:12:54.129 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:12:54.130 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:12:54.130 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:54.131 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.0691ms
2024-12-09 13:12:54.135 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:54.137 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.2056ms
2024-12-09 13:12:55.241 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:12:55.243 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:55.244 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.2881ms
2024-12-09 13:12:55.245 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:12:55.248 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:55.248 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:55.249 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:55.251 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:12:55.252 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:12:55.252 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:12:55.253 +05:30 [INF] Deserializing the notes
2024-12-09 13:12:55.253 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:55.254 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.5678ms
2024-12-09 13:12:55.255 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:55.256 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.3649ms
2024-12-09 13:12:57.570 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:12:57.573 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:12:57.575 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:57.576 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:12:57.578 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:12:57.579 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:12:57.580 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:12:57.580 +05:30 [INF] Deserializing the notes
2024-12-09 13:12:57.581 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:12:57.582 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9609ms
2024-12-09 13:12:57.582 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:12:57.583 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.9859ms
2024-12-09 13:13:10.423 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:13:10.427 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:10.428 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:13:10.429 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.8262ms
2024-12-09 13:13:10.432 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:13:10.433 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:10.443 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:10.444 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.358ms
2024-12-09 13:13:10.446 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:10.452 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:13:10.455 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:13:10.457 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:13:10.458 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:13:10.458 +05:30 [INF] Deserializing the notes
2024-12-09 13:13:10.459 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:13:10.462 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.5952ms
2024-12-09 13:13:10.463 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:13:10.463 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:10.464 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:10.465 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.1378ms
2024-12-09 13:13:10.466 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:10.473 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:13:10.475 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:13:10.476 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:13:10.477 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:13:10.477 +05:30 [INF] Deserializing the notes
2024-12-09 13:13:10.478 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:13:10.480 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6652ms
2024-12-09 13:13:10.480 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:10.481 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.3206ms
2024-12-09 13:13:38.898 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:13:38.900 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:38.901 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.1115ms
2024-12-09 13:13:38.904 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:13:38.906 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:38.907 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:38.908 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:13:38.915 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:13:38.916 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:13:38.917 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:13:38.917 +05:30 [INF] Deserializing the notes
2024-12-09 13:13:38.918 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:13:38.919 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8947ms
2024-12-09 13:13:38.921 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:38.921 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:13:38.922 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.0023ms
2024-12-09 13:13:38.931 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:38.934 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:38.934 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:13:38.936 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:13:38.937 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:13:38.938 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:13:38.939 +05:30 [INF] Deserializing the notes
2024-12-09 13:13:38.940 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:13:38.945 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.0534ms
2024-12-09 13:13:38.946 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:38.947 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.5409ms
2024-12-09 13:13:42.367 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:13:42.368 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:42.369 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 2.1211ms
2024-12-09 13:13:42.370 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:13:42.372 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:42.372 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:13:42.373 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:13:42.374 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:13:42.375 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:13:42.375 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:13:42.376 +05:30 [INF] Received isArchive value: True
2024-12-09 13:13:42.386 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:13:42.392 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:13:42.397 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:13:42.399 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:13:42.400 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:13:42.400 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:13:42.401 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 26.8935ms
2024-12-09 13:13:42.402 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:13:42.402 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 32.1413ms
2024-12-09 13:13:44.686 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:13:44.690 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:44.692 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3118ms
2024-12-09 13:13:44.694 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:13:44.696 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:44.697 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:44.698 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:13:44.701 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:13:44.705 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:13:44.705 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:13:44.706 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:13:44.706 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:13:44.710 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:13:44.712 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:13:44.713 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:13:44.715 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:13:44.715 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:13:44.716 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:13:44.717 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:13:44.717 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.432ms
2024-12-09 13:13:44.718 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:44.719 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.2811ms
2024-12-09 13:13:46.327 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:13:46.329 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:46.330 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:46.330 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:13:46.333 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:13:46.334 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:13:46.334 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:13:46.335 +05:30 [INF] Deserializing the notes
2024-12-09 13:13:46.336 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:13:46.337 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0246ms
2024-12-09 13:13:46.337 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:46.340 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.2996ms
2024-12-09 13:13:47.515 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:13:47.517 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:47.518 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:47.519 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:13:47.521 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:13:47.522 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:13:47.523 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:13:47.523 +05:30 [INF] Deserializing the notes
2024-12-09 13:13:47.524 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:13:47.525 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6757ms
2024-12-09 13:13:47.526 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:47.530 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.885ms
2024-12-09 13:13:48.787 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:13:48.788 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:13:48.789 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:48.790 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:13:48.791 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:13:48.792 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:13:48.793 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:13:48.794 +05:30 [INF] Deserializing the notes
2024-12-09 13:13:48.794 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:13:48.796 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7342ms
2024-12-09 13:13:48.796 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:13:48.797 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.5053ms
2024-12-09 13:16:14.169 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:16:14.173 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:16:14.175 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.2482ms
2024-12-09 13:16:14.182 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:16:14.184 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:16:14.186 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:16:14.187 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:16:14.193 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:16:14.194 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:16:14.195 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:16:14.196 +05:30 [INF] Deserializing the notes
2024-12-09 13:16:14.197 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:16:14.200 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.1692ms
2024-12-09 13:16:14.203 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:16:14.204 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.1183ms
2024-12-09 13:16:19.267 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:16:19.269 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:16:19.271 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7324ms
2024-12-09 13:16:19.273 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:16:19.276 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:16:19.277 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:16:19.278 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:16:19.279 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:16:19.280 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:16:19.280 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:16:19.281 +05:30 [INF] Deserializing the notes
2024-12-09 13:16:19.281 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:16:19.282 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.579ms
2024-12-09 13:16:19.285 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:16:19.287 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.2861ms
2024-12-09 13:16:20.768 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:16:20.771 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:16:20.772 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:16:20.773 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:16:20.778 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:16:20.779 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:16:20.779 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:16:20.780 +05:30 [INF] Deserializing the notes
2024-12-09 13:16:20.781 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:16:20.782 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.225ms
2024-12-09 13:16:20.785 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:16:20.787 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.7666ms
2024-12-09 13:16:22.264 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:16:22.267 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:16:22.268 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:16:22.269 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:16:22.270 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:16:22.272 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:16:22.273 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:16:22.277 +05:30 [INF] Deserializing the notes
2024-12-09 13:16:22.279 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:16:22.280 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.8076ms
2024-12-09 13:16:22.280 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:16:22.281 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.2728ms
2024-12-09 13:18:30.216 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-09 13:18:30.413 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-09 13:18:30.414 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-09 13:18:30.448 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-09 13:18:30.449 +05:30 [INF] Hosting environment: Development
2024-12-09 13:18:30.449 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-09 13:18:31.073 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-09 13:18:31.193 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 129.5494ms
2024-12-09 13:18:31.216 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-09 13:18:31.216 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-09 13:18:31.236 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 20.0474ms
2024-12-09 13:18:31.278 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 61.6889ms
2024-12-09 13:18:31.314 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-09 13:18:31.393 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 78.907ms
2024-12-09 13:18:34.600 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:18:34.607 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:18:34.609 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.7933ms
2024-12-09 13:18:34.612 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:18:34.615 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:18:34.698 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 07:41:28', Current time (UTC): '09-12-2024 07:48:34'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 13:18:34.714 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 13:18:34.742 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 13:18:34.775 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 13:18:34.777 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 13:18:34.781 +05:30 [ERR] Connection id "0HN8O4NFVH90P", Request id "0HN8O4NFVH90P:00000003": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 13:18:34.788 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 176.7046ms
2024-12-09 13:18:37.261 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:18:37.263 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:18:37.268 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 07:41:28', Current time (UTC): '09-12-2024 07:48:37'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 13:18:37.273 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 13:18:37.291 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 13:18:37.323 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 13:18:37.327 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 13:18:37.328 +05:30 [ERR] Connection id "0HN8O4NFVH90P", Request id "0HN8O4NFVH90P:00000005": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 13:18:37.333 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 72.6228ms
2024-12-09 13:19:10.074 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-09 13:19:10.079 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:10.080 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 7.0157ms
2024-12-09 13:19:10.082 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-09 13:19:10.085 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:10.088 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 13:19:10.118 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-09 13:19:10.278 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-09 13:19:10.280 +05:30 [INF] Checking if the user present
2024-12-09 13:19:10.282 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-09 13:19:11.689 +05:30 [INF] Executed DbCommand (66ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-09 13:19:11.756 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-09 13:19:11.757 +05:30 [INF] Verifying the password
2024-12-09 13:19:12.206 +05:30 [INF] Password is valid and token is generated
2024-12-09 13:19:12.208 +05:30 [INF] Login successful
2024-12-09 13:19:12.214 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 13:19:12.221 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 2096.5759ms
2024-12-09 13:19:12.222 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 13:19:12.230 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 2147.9141ms
2024-12-09 13:19:12.238 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:19:12.240 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:12.241 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.3577ms
2024-12-09 13:19:12.242 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:19:12.244 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:12.258 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:12.262 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:19:12.270 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:19:12.309 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:19:12.310 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:19:12.311 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:19:12.314 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:19:12.351 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:19:12.355 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:19:12.404 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:19:12.409 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:19:12.410 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:19:12.420 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:19:12.421 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:19:12.428 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 164.0222ms
2024-12-09 13:19:12.429 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:12.430 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 188.1913ms
2024-12-09 13:19:15.473 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:19:15.475 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:15.478 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:15.479 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:19:15.481 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:19:15.487 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:19:15.488 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:19:15.489 +05:30 [INF] Deserializing the notes
2024-12-09 13:19:15.492 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:19:15.493 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.4172ms
2024-12-09 13:19:15.494 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:15.495 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.2907ms
2024-12-09 13:19:16.829 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:19:16.831 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:16.833 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:16.834 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:19:16.838 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:19:16.839 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:19:16.840 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:19:16.841 +05:30 [INF] Deserializing the notes
2024-12-09 13:19:16.844 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:19:16.846 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7602ms
2024-12-09 13:19:16.847 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:16.848 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.054ms
2024-12-09 13:19:18.037 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:19:18.040 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:18.041 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9755ms
2024-12-09 13:19:18.044 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:19:18.047 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:18.048 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:18.053 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:19:18.057 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:19:18.058 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:19:18.059 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:19:18.060 +05:30 [INF] Deserializing the notes
2024-12-09 13:19:18.060 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:19:18.062 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.436ms
2024-12-09 13:19:18.063 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:18.064 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.5033ms
2024-12-09 13:19:19.494 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:19:19.496 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:19.497 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 2.9606ms
2024-12-09 13:19:19.499 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:19:19.502 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:19.503 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:19:19.516 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:19:19.525 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:19:19.526 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:19:19.528 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:19:19.531 +05:30 [INF] Received isArchive value: True
2024-12-09 13:19:19.604 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:19:19.637 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:19:19.801 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:19:19.818 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:19:19.820 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:19:19.821 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:19:19.824 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 305.7669ms
2024-12-09 13:19:19.825 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:19:19.827 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 328.556ms
2024-12-09 13:19:20.904 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:19:20.907 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:20.909 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:20.910 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:19:20.913 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:19:20.914 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:19:20.918 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:19:20.921 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:19:20.921 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:19:20.924 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:19:20.926 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:19:20.930 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:19:20.934 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:19:20.934 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:19:20.936 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:19:20.936 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:19:20.937 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 24.7251ms
2024-12-09 13:19:20.938 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:20.939 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.5032ms
2024-12-09 13:19:22.581 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:19:22.584 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:22.585 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:19:22.586 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:19:22.587 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:19:22.587 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:19:22.588 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:19:22.588 +05:30 [INF] Received isArchive value: False
2024-12-09 13:19:22.591 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:19:22.598 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:19:22.602 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:19:22.604 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:19:22.605 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:19:22.605 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:19:22.606 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 19.4395ms
2024-12-09 13:19:22.607 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:19:22.607 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 26.8879ms
2024-12-09 13:19:23.927 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:19:23.930 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:23.931 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1402ms
2024-12-09 13:19:23.934 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:19:23.938 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:23.939 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:23.941 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:19:23.945 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:19:23.946 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:19:23.947 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:19:23.948 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:19:23.948 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:19:23.951 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:19:23.952 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:19:23.954 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:19:23.961 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:19:23.961 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:19:23.963 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:19:23.963 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:19:23.964 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.817ms
2024-12-09 13:19:23.965 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:23.966 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.0538ms
2024-12-09 13:19:25.282 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:19:25.285 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:19:25.287 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:25.288 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:19:25.290 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:19:25.291 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:19:25.292 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:19:25.293 +05:30 [INF] Deserializing the notes
2024-12-09 13:19:25.294 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:19:25.300 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.5617ms
2024-12-09 13:19:25.302 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:19:25.304 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.6488ms
2024-12-09 13:20:07.005 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:20:07.006 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:20:07.007 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0007ms
2024-12-09 13:20:07.009 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:20:07.015 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:20:07.016 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:20:07.017 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:20:07.021 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:20:07.024 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:20:07.025 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:20:07.026 +05:30 [INF] Deserializing the notes
2024-12-09 13:20:07.027 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:20:07.028 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.1869ms
2024-12-09 13:20:07.029 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:20:07.034 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.9666ms
2024-12-09 13:20:07.100 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:20:07.101 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:20:07.102 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:20:07.103 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:20:07.104 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:20:07.106 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:20:07.107 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:20:07.108 +05:30 [INF] Deserializing the notes
2024-12-09 13:20:07.109 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:20:07.111 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.9223ms
2024-12-09 13:20:07.112 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:20:07.113 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:20:07.118 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.1548ms
2024-12-09 13:20:07.126 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:20:07.133 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:20:07.133 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:20:07.136 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:20:07.138 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:20:07.139 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:20:07.140 +05:30 [INF] Deserializing the notes
2024-12-09 13:20:07.141 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:20:07.145 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.0412ms
2024-12-09 13:20:07.147 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:20:07.149 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.0938ms
2024-12-09 13:20:13.599 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:20:13.599 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:20:13.602 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:20:13.604 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:20:13.605 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7358ms
2024-12-09 13:20:13.606 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.4317ms
2024-12-09 13:20:13.609 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:20:13.617 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:20:13.618 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:20:13.620 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:20:13.622 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:20:13.623 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:20:13.624 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:20:13.624 +05:30 [INF] Deserializing the notes
2024-12-09 13:20:13.625 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:20:13.627 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.6892ms
2024-12-09 13:20:13.629 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:20:13.631 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:20:13.635 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:20:13.636 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.8831ms
2024-12-09 13:20:13.638 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:20:13.641 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:20:13.647 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:20:13.648 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:20:13.649 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:20:13.650 +05:30 [INF] Deserializing the notes
2024-12-09 13:20:13.651 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:20:13.652 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1511ms
2024-12-09 13:20:13.652 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:20:13.653 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.7946ms
2024-12-09 13:21:41.314 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:21:41.320 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:41.321 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.3465ms
2024-12-09 13:21:41.324 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:21:41.326 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:41.328 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:41.329 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:41.331 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:21:41.333 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:21:41.336 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:21:41.339 +05:30 [INF] Deserializing the notes
2024-12-09 13:21:41.340 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:41.341 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.3778ms
2024-12-09 13:21:41.342 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:41.343 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:21:41.344 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.496ms
2024-12-09 13:21:41.350 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:41.353 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:41.354 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:41.360 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:21:41.361 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:21:41.362 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:21:41.363 +05:30 [INF] Deserializing the notes
2024-12-09 13:21:41.364 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:41.365 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.3865ms
2024-12-09 13:21:41.366 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:41.367 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.0402ms
2024-12-09 13:21:44.445 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:21:44.447 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:44.448 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 3.1048ms
2024-12-09 13:21:44.450 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:21:44.452 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:44.453 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:21:44.454 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:44.456 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:21:44.457 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:21:44.458 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:21:44.459 +05:30 [INF] Received isArchive value: True
2024-12-09 13:21:44.465 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:21:44.470 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:21:44.476 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:21:44.479 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:21:44.479 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:21:44.480 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:44.481 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 25.3968ms
2024-12-09 13:21:44.481 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:21:44.482 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 32.5653ms
2024-12-09 13:21:47.297 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:21:47.301 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:47.302 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.9487ms
2024-12-09 13:21:47.304 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:21:47.306 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:47.307 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:47.308 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:47.310 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:21:47.311 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:21:47.312 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:21:47.313 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:21:47.317 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:21:47.321 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:21:47.322 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:21:47.324 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:21:47.326 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:21:47.327 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:21:47.328 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:21:47.329 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:47.330 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.6915ms
2024-12-09 13:21:47.331 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:47.333 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.5312ms
2024-12-09 13:21:49.113 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:21:49.113 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:21:49.117 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:49.121 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:49.123 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:21:49.128 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:49.130 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:49.131 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:49.133 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:21:49.134 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:21:49.134 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:21:49.136 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:21:49.138 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:21:49.140 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:21:49.140 +05:30 [INF] Received isArchive value: False
2024-12-09 13:21:49.141 +05:30 [INF] Deserializing the notes
2024-12-09 13:21:49.142 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:49.144 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:21:49.145 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.0777ms
2024-12-09 13:21:49.148 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:49.148 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:21:49.149 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.5274ms
2024-12-09 13:21:49.153 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:21:49.156 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:21:49.156 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:21:49.157 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:49.157 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 24.8125ms
2024-12-09 13:21:49.158 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:21:49.159 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 45.4647ms
2024-12-09 13:21:50.642 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:21:50.645 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:50.646 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:50.647 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:50.650 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:21:50.651 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:21:50.653 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:21:50.654 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:21:50.654 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:21:50.657 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:21:50.661 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:21:50.664 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:21:50.667 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:21:50.668 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:21:50.669 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:21:50.669 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:50.670 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.2757ms
2024-12-09 13:21:50.675 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:50.677 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.0091ms
2024-12-09 13:21:51.657 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:21:51.660 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:51.662 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:51.663 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:51.665 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:21:51.666 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:21:51.669 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:21:51.672 +05:30 [INF] Deserializing the notes
2024-12-09 13:21:51.672 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:51.673 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.5372ms
2024-12-09 13:21:51.674 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:51.675 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.7545ms
2024-12-09 13:21:53.306 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:21:53.310 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:53.311 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3634ms
2024-12-09 13:21:53.315 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:21:53.318 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:53.319 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:53.320 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:53.324 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:21:53.326 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:21:53.326 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:21:53.327 +05:30 [INF] Deserializing the notes
2024-12-09 13:21:53.328 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:53.329 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5875ms
2024-12-09 13:21:53.330 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:53.330 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.7743ms
2024-12-09 13:21:54.544 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:21:54.547 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:54.548 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 4.1951ms
2024-12-09 13:21:54.550 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:21:54.551 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:54.552 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:21:54.553 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:54.555 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:21:54.556 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:21:54.556 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:21:54.557 +05:30 [INF] Received isArchive value: True
2024-12-09 13:21:54.559 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:21:54.568 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:21:54.573 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:21:54.581 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:21:54.581 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:21:54.582 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:54.582 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 27.8246ms
2024-12-09 13:21:54.583 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:21:54.584 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 34.5947ms
2024-12-09 13:21:56.288 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:21:56.290 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:56.291 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:56.291 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:56.294 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:21:56.295 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:21:56.296 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:21:56.297 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:21:56.298 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:21:56.300 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:21:56.306 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:21:56.308 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:21:56.310 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:21:56.311 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:21:56.312 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:21:56.313 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:56.315 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.1321ms
2024-12-09 13:21:56.316 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:56.317 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.2308ms
2024-12-09 13:21:58.164 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:21:58.165 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:21:58.168 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:58.171 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:58.173 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:21:58.174 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:58.178 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:58.180 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:58.183 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:21:58.184 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:21:58.185 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:21:58.187 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:21:58.187 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:21:58.188 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:21:58.189 +05:30 [INF] Received isArchive value: False
2024-12-09 13:21:58.190 +05:30 [INF] Deserializing the notes
2024-12-09 13:21:58.191 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:58.194 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:21:58.197 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.4365ms
2024-12-09 13:21:58.201 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:21:58.201 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:58.203 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 38.7816ms
2024-12-09 13:21:58.208 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:21:58.212 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:21:58.213 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:21:58.214 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:58.215 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 32.448ms
2024-12-09 13:21:58.216 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:21:58.216 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 52.4137ms
2024-12-09 13:21:59.205 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:21:59.207 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:59.208 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8726ms
2024-12-09 13:21:59.211 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:21:59.212 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:21:59.213 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:59.214 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:21:59.216 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:21:59.217 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:21:59.221 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:21:59.222 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:21:59.223 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:21:59.226 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:21:59.229 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:21:59.231 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:21:59.233 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:21:59.233 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:21:59.234 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:21:59.235 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:21:59.236 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.6945ms
2024-12-09 13:21:59.236 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:21:59.242 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.764ms
2024-12-09 13:22:46.817 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:22:46.820 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:22:46.820 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 3.7765ms
2024-12-09 13:22:46.822 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:22:46.823 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:22:46.824 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:22:46.825 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:22:46.828 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:22:46.831 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:22:46.833 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:22:46.834 +05:30 [INF] Received isArchive value: True
2024-12-09 13:22:46.838 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:22:46.842 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:22:46.849 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:22:46.854 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:22:46.855 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:22:46.855 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:22:46.856 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 29.1262ms
2024-12-09 13:22:46.857 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:22:46.861 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 39.0325ms
2024-12-09 13:22:47.784 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:22:47.786 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:22:47.786 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4434ms
2024-12-09 13:22:47.788 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:22:47.790 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:22:47.795 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:22:47.798 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:22:47.801 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:22:47.802 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:22:47.803 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:22:47.804 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:22:47.805 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:22:47.807 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:22:47.813 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:22:47.815 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:22:47.816 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:22:47.817 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:22:47.818 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:22:47.818 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:22:47.819 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.7507ms
2024-12-09 13:22:47.825 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:22:47.826 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 38.0913ms
2024-12-09 13:22:51.841 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:22:51.846 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:22:51.847 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 6.3239ms
2024-12-09 13:22:51.849 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:22:51.850 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:22:51.851 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:22:51.853 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:22:51.855 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:22:51.856 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:22:51.856 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:22:51.857 +05:30 [INF] Received isArchive value: True
2024-12-09 13:22:51.860 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:22:51.867 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:22:51.869 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:22:51.869 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:22:51.870 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:22:51.871 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 16.7897ms
2024-12-09 13:22:51.872 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:22:51.872 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 23.8015ms
2024-12-09 13:22:53.275 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:22:53.278 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:22:53.278 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9537ms
2024-12-09 13:22:53.280 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:22:53.283 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:22:53.283 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:22:53.284 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:22:53.286 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:22:53.286 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:22:53.289 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:22:53.292 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:22:53.293 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:22:53.295 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:22:53.296 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:22:53.298 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:22:53.299 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:22:53.300 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:22:53.301 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:22:53.301 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:22:53.302 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.0494ms
2024-12-09 13:22:53.307 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:22:53.308 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.4017ms
2024-12-09 13:22:54.154 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:22:54.157 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:22:54.158 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:22:54.159 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:22:54.161 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:22:54.162 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:22:54.164 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:22:54.164 +05:30 [INF] Deserializing the notes
2024-12-09 13:22:54.167 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:22:54.170 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7635ms
2024-12-09 13:22:54.171 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:22:54.171 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.2585ms
2024-12-09 13:23:25.008 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:23:25.012 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:25.014 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.4303ms
2024-12-09 13:23:25.022 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:23:25.024 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:25.025 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:25.028 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:25.031 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:23:25.033 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:23:25.034 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:23:25.035 +05:30 [INF] Deserializing the notes
2024-12-09 13:23:25.036 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:25.037 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.514ms
2024-12-09 13:23:25.041 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:25.043 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.9909ms
2024-12-09 13:23:25.047 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:23:25.049 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:25.050 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:25.051 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:25.053 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:23:25.054 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:23:25.055 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:23:25.056 +05:30 [INF] Deserializing the notes
2024-12-09 13:23:25.057 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:25.064 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.1287ms
2024-12-09 13:23:25.064 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:25.066 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.4442ms
2024-12-09 13:23:26.507 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:23:26.510 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:26.511 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:26.512 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:26.515 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:23:26.517 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:23:26.519 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:23:26.520 +05:30 [INF] Deserializing the notes
2024-12-09 13:23:26.521 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:26.522 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.158ms
2024-12-09 13:23:26.523 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:26.528 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.437ms
2024-12-09 13:23:26.529 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:23:26.532 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:26.533 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:26.533 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:26.535 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:23:26.536 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:23:26.539 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:23:26.541 +05:30 [INF] Deserializing the notes
2024-12-09 13:23:26.542 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:26.543 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.2761ms
2024-12-09 13:23:26.544 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:26.545 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.8231ms
2024-12-09 13:23:29.370 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:23:29.370 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:23:29.373 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:29.375 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:29.376 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 6.3257ms
2024-12-09 13:23:29.377 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:29.378 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:23:29.381 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:29.382 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:29.384 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:23:29.385 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:23:29.385 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:23:29.386 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:29.387 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:23:29.388 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:23:29.388 +05:30 [INF] Deserializing the notes
2024-12-09 13:23:29.389 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:23:29.390 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:29.390 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:23:29.391 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.6616ms
2024-12-09 13:23:29.392 +05:30 [INF] Received isArchive value: True
2024-12-09 13:23:29.393 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:29.394 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.1739ms
2024-12-09 13:23:29.395 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:23:29.406 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:23:29.408 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:23:29.409 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:23:29.409 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:29.410 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 22.2197ms
2024-12-09 13:23:29.411 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:23:29.412 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 34.2673ms
2024-12-09 13:23:30.775 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:23:30.776 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:23:30.781 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:30.785 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:30.787 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:23:30.788 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.8092ms
2024-12-09 13:23:30.790 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:23:30.789 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:30.797 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:30.799 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:23:30.800 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:30.800 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:23:30.802 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:30.805 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:23:30.806 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:23:30.806 +05:30 [INF] Received isArchive value: True
2024-12-09 13:23:30.808 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:23:30.809 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:23:30.810 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:23:30.810 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:23:30.815 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:23:30.816 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:23:30.820 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:23:30.821 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:23:30.822 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:30.823 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 23.9433ms
2024-12-09 13:23:30.827 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:23:30.827 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:23:30.829 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 54.7688ms
2024-12-09 13:23:30.831 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:23:30.833 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:23:30.835 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:23:30.835 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:23:30.836 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:23:30.836 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:30.837 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 31.5995ms
2024-12-09 13:23:30.838 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:30.839 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.6475ms
2024-12-09 13:23:31.443 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:23:31.443 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:23:31.445 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:31.447 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:31.449 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:23:31.450 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:31.451 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:31.452 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:31.455 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:23:31.457 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:23:31.457 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:23:31.458 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:23:31.462 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:23:31.463 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:23:31.464 +05:30 [INF] Received isArchive value: True
2024-12-09 13:23:31.464 +05:30 [INF] Deserializing the notes
2024-12-09 13:23:31.466 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:31.467 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:23:31.468 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.5699ms
2024-12-09 13:23:31.471 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:23:31.471 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:31.473 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:23:31.473 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.9668ms
2024-12-09 13:23:31.474 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:23:31.476 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:31.477 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 22.3136ms
2024-12-09 13:23:31.483 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:23:31.484 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 41.6053ms
2024-12-09 13:23:32.092 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:23:32.093 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:23:32.099 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:32.095 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:32.100 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:32.102 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:23:32.103 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:32.104 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:32.106 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:23:32.108 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:23:32.108 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:23:32.109 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:23:32.109 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:23:32.110 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:23:32.111 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:23:32.111 +05:30 [INF] Received isArchive value: True
2024-12-09 13:23:32.112 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:23:32.114 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:23:32.115 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:23:32.121 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:23:32.121 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:23:32.122 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:23:32.123 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:23:32.125 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:23:32.125 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:23:32.126 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:23:32.127 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:32.128 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:23:32.133 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 26.0303ms
2024-12-09 13:23:32.135 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:32.136 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:23:32.137 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 31.6862ms
2024-12-09 13:23:32.138 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 46.3083ms
2024-12-09 13:23:32.139 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:32.141 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.1965ms
2024-12-09 13:23:32.419 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:23:32.420 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:23:32.421 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:32.423 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:32.423 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:23:32.424 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:32.424 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:32.425 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:32.427 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:23:32.429 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:23:32.433 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:23:32.436 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:23:32.437 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:23:32.437 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:23:32.438 +05:30 [INF] Received isArchive value: True
2024-12-09 13:23:32.438 +05:30 [INF] Deserializing the notes
2024-12-09 13:23:32.440 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:32.440 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:23:32.442 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.6391ms
2024-12-09 13:23:32.449 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:23:32.450 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:32.452 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:23:32.453 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.8221ms
2024-12-09 13:23:32.454 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:23:32.456 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:32.457 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 30.022ms
2024-12-09 13:23:32.457 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:23:32.458 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 39.0553ms
2024-12-09 13:23:32.871 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:23:32.873 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:23:32.881 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:32.883 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:32.884 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:23:32.885 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:32.889 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:32.890 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:32.894 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:23:32.895 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:23:32.896 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:23:32.897 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:23:32.899 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:23:32.901 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:23:32.902 +05:30 [INF] Received isArchive value: True
2024-12-09 13:23:32.903 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:23:32.904 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:23:32.905 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:23:32.907 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:23:32.909 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:23:32.910 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:23:32.912 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:23:32.913 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:23:32.913 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:23:32.913 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:32.921 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:23:32.922 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 28.7171ms
2024-12-09 13:23:32.923 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:23:32.923 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:23:32.924 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:23:32.925 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 54.0776ms
2024-12-09 13:23:32.925 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:32.928 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 33.1244ms
2024-12-09 13:23:32.929 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:32.932 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 59.4871ms
2024-12-09 13:23:40.868 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:23:40.870 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:40.871 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.54ms
2024-12-09 13:23:40.874 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:23:40.875 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:40.876 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:40.877 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:40.880 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:23:40.882 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:23:40.883 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:23:40.887 +05:30 [INF] Deserializing the notes
2024-12-09 13:23:40.890 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:40.892 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.9398ms
2024-12-09 13:23:40.892 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:40.894 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.1276ms
2024-12-09 13:23:40.908 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:23:40.909 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:23:40.910 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:40.911 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:23:40.912 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:23:40.914 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:23:40.915 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:23:40.917 +05:30 [INF] Deserializing the notes
2024-12-09 13:23:40.919 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:23:40.920 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.2508ms
2024-12-09 13:23:40.921 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:23:40.922 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7355ms
2024-12-09 13:24:20.302 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:24:20.304 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:24:20.305 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6228ms
2024-12-09 13:24:20.307 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:24:20.309 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:24:20.311 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:24:20.317 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:24:20.321 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:24:20.322 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:24:20.323 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:24:20.325 +05:30 [INF] Deserializing the notes
2024-12-09 13:24:20.326 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:24:20.330 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.6889ms
2024-12-09 13:24:20.332 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:24:20.334 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.9545ms
2024-12-09 13:24:20.343 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:24:20.349 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:24:20.354 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:24:20.355 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:24:20.358 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:24:20.359 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:24:20.361 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:24:20.363 +05:30 [INF] Deserializing the notes
2024-12-09 13:24:20.364 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:24:20.369 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.8339ms
2024-12-09 13:24:20.372 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:24:20.373 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.4209ms
2024-12-09 13:26:04.472 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:26:04.474 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:04.476 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7623ms
2024-12-09 13:26:04.478 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:04.480 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:04.481 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:04.482 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:04.485 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:04.486 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:04.490 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:26:04.493 +05:30 [INF] Deserializing the notes
2024-12-09 13:26:04.494 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:04.495 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.872ms
2024-12-09 13:26:04.496 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:04.497 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:04.501 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.3594ms
2024-12-09 13:26:04.506 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:04.510 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:04.511 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:04.514 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:04.516 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:04.519 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:26:04.522 +05:30 [INF] Deserializing the notes
2024-12-09 13:26:04.522 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:04.524 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6695ms
2024-12-09 13:26:04.524 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:04.526 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.8982ms
2024-12-09 13:26:07.608 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:07.610 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:07.612 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:07.613 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:07.617 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:07.619 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:07.620 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:26:07.620 +05:30 [INF] Deserializing the notes
2024-12-09 13:26:07.621 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:07.622 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1778ms
2024-12-09 13:26:07.628 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:07.629 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.6339ms
2024-12-09 13:26:07.631 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:07.633 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:07.634 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:07.634 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:07.637 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:07.638 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:07.641 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:26:07.643 +05:30 [INF] Deserializing the notes
2024-12-09 13:26:07.644 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:07.646 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7451ms
2024-12-09 13:26:07.648 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:07.649 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.8712ms
2024-12-09 13:26:12.263 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:26:12.264 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:26:12.268 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:12.271 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:12.274 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 11.0768ms
2024-12-09 13:26:12.277 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:26:12.283 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:12.279 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 15.2507ms
2024-12-09 13:26:12.287 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:12.288 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:12.291 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:26:12.291 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:12.294 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:12.296 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:12.298 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:26:12.299 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:12.299 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:26:12.301 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:12.301 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:26:12.304 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:26:12.306 +05:30 [INF] Received isArchive value: True
2024-12-09 13:26:12.307 +05:30 [INF] Deserializing the notes
2024-12-09 13:26:12.308 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:12.309 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.4304ms
2024-12-09 13:26:12.311 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:12.311 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.8824ms
2024-12-09 13:26:12.314 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:26:12.322 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:26:12.325 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:26:12.326 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:26:12.327 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:12.328 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 30.3796ms
2024-12-09 13:26:12.329 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:26:12.329 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 52.69ms
2024-12-09 13:26:12.692 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:26:12.692 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:12.696 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:12.698 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:12.700 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:26:12.701 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:12.701 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:12.702 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:12.710 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:26:12.710 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:12.710 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:26:12.711 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:12.712 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:26:12.713 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:26:12.714 +05:30 [INF] Received isArchive value: True
2024-12-09 13:26:12.714 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:26:12.715 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:26:12.716 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:26:12.718 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:26:12.719 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:26:12.720 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:26:12.722 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:26:12.723 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:26:12.727 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:26:12.729 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:26:12.730 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:12.730 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:26:12.731 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 22.041ms
2024-12-09 13:26:12.732 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:26:12.733 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:26:12.733 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:12.734 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 42.3612ms
2024-12-09 13:26:12.735 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.0851ms
2024-12-09 13:26:12.737 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:12.738 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.8775ms
2024-12-09 13:26:13.363 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:26:13.364 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:13.366 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:13.368 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:13.368 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:26:13.369 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:13.370 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:13.370 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:13.372 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:26:13.380 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:13.380 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:26:13.381 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:13.382 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:26:13.383 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:26:13.383 +05:30 [INF] Received isArchive value: True
2024-12-09 13:26:13.384 +05:30 [INF] Deserializing the notes
2024-12-09 13:26:13.385 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:13.386 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:26:13.387 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.2107ms
2024-12-09 13:26:13.390 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:26:13.390 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:13.392 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:26:13.392 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.1057ms
2024-12-09 13:26:13.397 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:26:13.401 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:13.402 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 30.1188ms
2024-12-09 13:26:13.403 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:26:13.405 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 42.3238ms
2024-12-09 13:26:15.791 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:15.793 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:15.793 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:15.794 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:15.795 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:15.796 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:15.798 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:26:15.799 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:26:15.799 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:26:15.801 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:26:15.803 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:26:15.804 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:26:15.810 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:26:15.810 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:26:15.811 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:26:15.811 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:15.812 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.9421ms
2024-12-09 13:26:15.813 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:15.814 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.7228ms
2024-12-09 13:26:17.247 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:17.250 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:17.251 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:17.252 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:17.253 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:17.255 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:17.257 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:26:17.258 +05:30 [INF] Deserializing the notes
2024-12-09 13:26:17.259 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:17.261 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.1456ms
2024-12-09 13:26:17.264 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:17.267 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.9673ms
2024-12-09 13:26:18.952 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - null null
2024-12-09 13:26:18.952 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:26:18.955 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:18.957 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:18.958 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - 204 null null 5.9885ms
2024-12-09 13:26:18.961 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - application/json 4
2024-12-09 13:26:18.961 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:18.959 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7569ms
2024-12-09 13:26:18.966 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:18.968 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:18.970 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:26:18.970 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:18.971 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:18.971 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:18.972 +05:30 [INF] Received noteId: 1026, isArchive: True
2024-12-09 13:26:18.976 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:18.978 +05:30 [INF] Received request to toggle archive status for note with ID: 1026
2024-12-09 13:26:18.979 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:18.980 +05:30 [INF] Initiating toggle of archive status for note with ID: 1026 for user ID: 1
2024-12-09 13:26:18.981 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:26:18.981 +05:30 [INF] Received isArchive value: True
2024-12-09 13:26:18.982 +05:30 [INF] Deserializing the notes
2024-12-09 13:26:18.983 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:18.984 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:26:18.985 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.3813ms
2024-12-09 13:26:18.987 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:26:18.991 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:18.995 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.9624ms
2024-12-09 13:26:19.000 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:26:19.001 +05:30 [INF] Note with ID: 1026 archive status updated to true
2024-12-09 13:26:19.002 +05:30 [INF] Successfully toggled archive status for note with ID: 1026
2024-12-09 13:26:19.002 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:19.003 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 30.4322ms
2024-12-09 13:26:19.006 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:26:19.008 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - 200 null application/json; charset=utf-8 47.4533ms
2024-12-09 13:26:20.315 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:20.318 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:20.320 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:20.323 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:20.325 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:20.326 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:20.327 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:26:20.328 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:26:20.329 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:26:20.332 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:26:20.336 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:26:20.338 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:26:20.341 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:26:20.342 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:26:20.343 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:26:20.344 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:20.345 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.2234ms
2024-12-09 13:26:20.346 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:20.347 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.281ms
2024-12-09 13:26:21.464 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:21.466 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:21.468 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:21.469 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:21.471 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:21.473 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:21.474 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:26:21.475 +05:30 [INF] Deserializing the notes
2024-12-09 13:26:21.476 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:21.477 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.189ms
2024-12-09 13:26:21.479 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:21.482 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.4385ms
2024-12-09 13:26:28.255 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:26:28.256 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:28.257 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.816ms
2024-12-09 13:26:28.260 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:28.262 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:28.262 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:28.263 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:28.265 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:28.266 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:28.268 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:26:28.273 +05:30 [INF] Deserializing the notes
2024-12-09 13:26:28.277 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:28.280 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.717ms
2024-12-09 13:26:28.280 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:28.281 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.3249ms
2024-12-09 13:26:28.310 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:26:28.312 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:26:28.313 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:28.314 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:26:28.316 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:26:28.318 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:26:28.319 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:26:28.319 +05:30 [INF] Deserializing the notes
2024-12-09 13:26:28.320 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:26:28.321 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.4115ms
2024-12-09 13:26:28.322 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:26:28.323 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.6915ms
2024-12-09 13:27:06.400 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:27:06.403 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:27:06.405 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 4.559ms
2024-12-09 13:27:06.408 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:27:06.411 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:27:06.415 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:27:06.416 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:27:06.420 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:27:06.421 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:27:06.422 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:27:06.425 +05:30 [INF] Received isArchive value: True
2024-12-09 13:27:06.432 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:27:06.436 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:27:06.440 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:27:06.441 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:27:06.441 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:27:06.442 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 22.2081ms
2024-12-09 13:27:06.443 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:27:06.444 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 36.0352ms
2024-12-09 13:27:19.112 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:27:19.115 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:27:19.117 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.5981ms
2024-12-09 13:27:19.120 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:27:19.122 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:27:19.123 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:27:19.123 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:27:19.125 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:27:19.126 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:27:19.127 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:27:19.127 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:27:19.128 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:27:19.131 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:27:19.138 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:27:19.140 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:27:19.142 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:27:19.143 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:27:19.144 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:27:19.144 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:27:19.146 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.9957ms
2024-12-09 13:27:19.154 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:27:19.155 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.7534ms
2024-12-09 13:27:43.613 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:27:43.616 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:27:43.617 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7333ms
2024-12-09 13:27:43.620 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:27:43.621 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:27:43.622 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:27:43.622 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:27:43.624 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:27:43.625 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:27:43.626 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:27:43.627 +05:30 [INF] Deserializing the notes
2024-12-09 13:27:43.628 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:27:43.629 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.4433ms
2024-12-09 13:27:43.630 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:27:43.631 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.4421ms
2024-12-09 13:28:20.282 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:28:20.284 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:28:20.285 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.7422ms
2024-12-09 13:28:20.287 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:28:20.288 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:28:20.289 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:28:20.290 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:28:20.291 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:28:20.293 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:28:20.294 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:28:20.295 +05:30 [INF] Deserializing the notes
2024-12-09 13:28:20.296 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:28:20.297 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.9961ms
2024-12-09 13:28:20.303 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:28:20.305 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.7675ms
2024-12-09 13:28:31.480 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:28:31.482 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:28:31.482 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:28:31.484 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:28:31.486 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 5.8809ms
2024-12-09 13:28:31.487 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2002ms
2024-12-09 13:28:31.495 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:28:31.492 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:28:31.504 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:28:31.506 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:28:31.507 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:28:31.508 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:28:31.509 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:28:31.515 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:28:31.519 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:28:31.520 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:28:31.520 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:28:31.521 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:28:31.523 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:28:31.524 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:28:31.524 +05:30 [INF] Received isArchive value: False
2024-12-09 13:28:31.525 +05:30 [INF] Deserializing the notes
2024-12-09 13:28:31.530 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:28:31.533 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.0284ms
2024-12-09 13:28:31.534 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:28:31.534 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:28:31.535 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.4457ms
2024-12-09 13:28:31.539 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:28:31.545 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:28:31.549 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:28:31.550 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:28:31.550 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:28:31.551 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 32.4293ms
2024-12-09 13:28:31.552 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:28:31.552 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 60.7509ms
2024-12-09 13:28:43.596 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:28:43.598 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:28:43.600 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.6149ms
2024-12-09 13:28:43.602 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:28:43.605 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:28:43.606 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:28:43.606 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:28:43.608 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:28:43.609 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:28:43.610 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:28:43.611 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:28:43.611 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:28:43.612 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:28:43.617 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:28:43.619 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:28:43.621 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:28:43.621 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:28:43.623 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:28:43.623 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:28:43.624 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.4668ms
2024-12-09 13:28:43.625 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:28:43.626 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.4645ms
2024-12-09 13:28:48.104 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:28:48.107 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:28:48.109 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:28:48.110 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:28:48.112 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:28:48.113 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:28:48.114 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:28:48.114 +05:30 [INF] Deserializing the notes
2024-12-09 13:28:48.115 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:28:48.116 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2483ms
2024-12-09 13:28:48.116 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:28:48.123 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.2729ms
2024-12-09 13:30:30.521 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:30:30.523 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:30:30.524 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0044ms
2024-12-09 13:30:30.526 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:30:30.528 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:30:30.529 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:30:30.530 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:30:30.532 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:30:30.536 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:30:30.538 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:30:30.539 +05:30 [INF] Deserializing the notes
2024-12-09 13:30:30.540 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:30:30.542 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.1165ms
2024-12-09 13:30:30.543 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:30:30.545 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.8084ms
2024-12-09 13:30:30.582 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:30:30.585 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:30:30.587 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:30:30.588 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:30:30.590 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:30:30.591 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:30:30.592 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:30:30.593 +05:30 [INF] Deserializing the notes
2024-12-09 13:30:30.595 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:30:30.602 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.078ms
2024-12-09 13:30:30.603 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:30:30.603 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:30:30.604 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:30:30.606 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.5839ms
2024-12-09 13:30:30.611 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:30:30.618 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:30:30.620 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:30:30.622 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:30:30.623 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:30:30.624 +05:30 [INF] Deserializing the notes
2024-12-09 13:30:30.625 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:30:30.627 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.1352ms
2024-12-09 13:30:30.629 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:30:30.630 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.9773ms
2024-12-09 13:31:29.544 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:31:29.558 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:31:29.563 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 18.5336ms
2024-12-09 13:31:29.567 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:31:29.577 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:31:29.578 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:31:29.582 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:31:29.586 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:31:29.588 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:31:29.590 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:31:29.591 +05:30 [INF] Deserializing the notes
2024-12-09 13:31:29.592 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:31:29.593 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.2483ms
2024-12-09 13:31:29.594 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:31:29.595 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.5357ms
2024-12-09 13:31:29.659 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:31:29.660 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:31:29.661 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:31:29.662 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:31:29.663 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:31:29.663 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:31:29.664 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:31:29.666 +05:30 [INF] Deserializing the notes
2024-12-09 13:31:29.667 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:31:29.669 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.8093ms
2024-12-09 13:31:29.670 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:31:29.671 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.1092ms
2024-12-09 13:31:30.078 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:31:30.080 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:31:30.081 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:31:30.082 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:31:30.084 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:31:30.086 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:31:30.087 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:31:30.091 +05:30 [INF] Deserializing the notes
2024-12-09 13:31:30.093 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:31:30.095 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.4697ms
2024-12-09 13:31:30.096 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:31:30.096 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:31:30.097 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.9701ms
2024-12-09 13:31:30.099 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:31:30.102 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:31:30.102 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:31:30.104 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:31:30.106 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:31:30.106 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:31:30.111 +05:30 [INF] Deserializing the notes
2024-12-09 13:31:30.113 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:31:30.114 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.1725ms
2024-12-09 13:31:30.115 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:31:30.116 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.6306ms
2024-12-09 13:31:54.808 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:31:54.812 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:31:54.813 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 5.2559ms
2024-12-09 13:31:54.814 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:31:54.817 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:31:54.818 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:31:54.818 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:31:54.820 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:31:54.820 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:31:54.821 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:31:54.822 +05:30 [INF] Received isArchive value: True
2024-12-09 13:31:54.831 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:31:54.834 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:31:54.840 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:31:54.842 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:31:54.843 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:31:54.843 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:31:54.844 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 24.3988ms
2024-12-09 13:31:54.845 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:31:54.845 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 30.9689ms
2024-12-09 13:31:57.083 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:31:57.086 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:31:57.087 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8993ms
2024-12-09 13:31:57.089 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:31:57.091 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:31:57.092 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:31:57.092 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:31:57.094 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:31:57.095 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:31:57.097 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:31:57.099 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:31:57.099 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:31:57.101 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:31:57.102 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:31:57.104 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:31:57.105 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:31:57.111 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:31:57.113 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:31:57.114 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:31:57.115 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.8416ms
2024-12-09 13:31:57.115 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:31:57.116 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.5097ms
2024-12-09 13:31:58.707 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:31:58.711 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:31:58.712 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:31:58.712 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:31:58.713 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:31:58.714 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:31:58.714 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:31:58.715 +05:30 [INF] Received isArchive value: False
2024-12-09 13:31:58.716 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:31:58.720 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:31:58.727 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:31:58.729 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:31:58.730 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:31:58.730 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:31:58.731 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 17.7727ms
2024-12-09 13:31:58.731 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:31:58.732 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 25.309ms
2024-12-09 13:32:00.230 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:00.233 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:00.234 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:00.234 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:00.236 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:00.237 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:00.238 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:32:00.239 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:32:00.240 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:32:00.243 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:32:00.244 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:32:00.245 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:32:00.247 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:32:00.248 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:32:00.250 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:32:00.250 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:00.251 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.4456ms
2024-12-09 13:32:00.259 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:00.260 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.4204ms
2024-12-09 13:32:01.697 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:01.699 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:01.700 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:01.700 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:01.703 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:01.704 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:01.705 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:01.706 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:01.707 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:01.710 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.8971ms
2024-12-09 13:32:01.713 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:01.713 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.3005ms
2024-12-09 13:32:03.318 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:32:03.321 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:03.322 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4626ms
2024-12-09 13:32:03.324 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:03.326 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:03.327 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:03.328 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:03.333 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:03.334 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:03.334 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:03.335 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:03.335 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:03.336 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.6386ms
2024-12-09 13:32:03.337 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:03.338 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.9801ms
2024-12-09 13:32:04.282 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:04.285 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:04.286 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:04.288 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:04.291 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:04.292 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:04.293 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:04.295 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:04.297 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:04.298 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.5837ms
2024-12-09 13:32:04.299 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:04.300 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.1114ms
2024-12-09 13:32:05.073 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:05.074 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:05.075 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:05.075 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:05.077 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:05.078 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:05.079 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:05.080 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:05.081 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:05.082 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.6976ms
2024-12-09 13:32:05.084 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:05.084 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:05.084 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.9039ms
2024-12-09 13:32:05.086 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:05.089 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:05.090 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:05.092 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:05.094 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:05.098 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:05.100 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:05.101 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:05.102 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.5064ms
2024-12-09 13:32:05.103 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:05.104 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.8588ms
2024-12-09 13:32:07.612 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:07.614 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:07.616 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:07.617 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:07.618 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:07.620 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:07.621 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:07.622 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:07.622 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:07.624 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.3563ms
2024-12-09 13:32:07.626 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:07.626 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7927ms
2024-12-09 13:32:09.161 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:32:09.165 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:09.166 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.4659ms
2024-12-09 13:32:09.168 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:09.170 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:09.172 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:09.172 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:09.174 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:09.175 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:09.177 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:09.179 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:09.180 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:09.181 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.9904ms
2024-12-09 13:32:09.182 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:09.182 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.8622ms
2024-12-09 13:32:11.857 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:32:11.860 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:11.860 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 3.1427ms
2024-12-09 13:32:11.862 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:32:11.863 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:11.864 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:32:11.865 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:11.866 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:32:11.867 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:32:11.867 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:32:11.868 +05:30 [INF] Received isArchive value: True
2024-12-09 13:32:11.870 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:32:11.876 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:32:11.880 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:32:11.885 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:32:11.887 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:32:11.887 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:11.888 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 21.9541ms
2024-12-09 13:32:11.889 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:32:11.889 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 27.9346ms
2024-12-09 13:32:13.858 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:13.861 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:13.862 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:13.862 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:13.864 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:13.865 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:13.866 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:32:13.867 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:32:13.872 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:32:13.876 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:32:13.877 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:32:13.878 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:32:13.880 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:32:13.880 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:32:13.881 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:32:13.882 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:13.882 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.6943ms
2024-12-09 13:32:13.887 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:13.888 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.7575ms
2024-12-09 13:32:14.675 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:32:14.679 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:14.680 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8677ms
2024-12-09 13:32:14.681 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:14.683 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:14.684 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:14.684 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:14.685 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:14.687 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:14.689 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:14.691 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:14.692 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:14.693 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.6934ms
2024-12-09 13:32:14.694 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:14.694 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.0691ms
2024-12-09 13:32:16.226 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:16.230 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:16.231 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:16.232 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:16.240 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:16.243 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:16.244 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:16.244 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:16.245 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:16.246 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.8674ms
2024-12-09 13:32:16.246 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:16.247 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.9748ms
2024-12-09 13:32:17.693 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:17.696 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:17.697 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:17.698 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:17.701 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:17.703 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:17.703 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:17.704 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:17.705 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:17.706 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.4234ms
2024-12-09 13:32:17.706 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:17.709 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.8162ms
2024-12-09 13:32:19.231 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:32:19.235 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:19.236 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 5.9136ms
2024-12-09 13:32:19.238 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:32:19.240 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:19.241 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:32:19.242 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:19.244 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:32:19.244 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:32:19.245 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:32:19.249 +05:30 [INF] Received isArchive value: True
2024-12-09 13:32:19.252 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:32:19.255 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:32:19.257 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:32:19.257 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:32:19.258 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:19.258 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 15.0047ms
2024-12-09 13:32:19.259 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:32:19.260 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 21.8318ms
2024-12-09 13:32:20.492 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:32:20.496 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:20.496 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.3578ms
2024-12-09 13:32:20.499 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:20.501 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:20.502 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:20.503 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:20.505 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:20.505 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:20.508 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:32:20.510 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:32:20.511 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:32:20.512 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:32:20.514 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:32:20.515 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:32:20.517 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:32:20.518 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:32:20.519 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:32:20.519 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:20.520 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.2316ms
2024-12-09 13:32:20.520 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:20.521 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.2516ms
2024-12-09 13:32:22.299 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:32:22.301 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:22.301 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:32:22.302 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:22.306 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:32:22.308 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:32:22.309 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:32:22.312 +05:30 [INF] Received isArchive value: False
2024-12-09 13:32:22.316 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:32:22.319 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:32:22.322 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:32:22.324 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:32:22.325 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:32:22.325 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:22.326 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 20.5627ms
2024-12-09 13:32:22.330 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:32:22.332 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 33.3445ms
2024-12-09 13:32:23.600 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:23.602 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:23.603 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:23.603 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:23.605 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:23.607 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:23.608 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:32:23.608 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:32:23.609 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:32:23.611 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:32:23.612 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:32:23.614 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:32:23.617 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:32:23.617 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:32:23.618 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:32:23.619 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:23.620 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.0893ms
2024-12-09 13:32:23.625 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:23.626 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.4589ms
2024-12-09 13:32:28.138 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:32:28.142 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:28.143 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3737ms
2024-12-09 13:32:28.145 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:28.147 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:28.148 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:28.149 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:28.151 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:28.151 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:28.152 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:28.153 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:28.153 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:28.154 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0059ms
2024-12-09 13:32:28.158 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:28.160 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.9729ms
2024-12-09 13:32:31.064 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:31.066 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:31.067 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:31.068 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:31.069 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:31.070 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:31.071 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:31.072 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:31.073 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:31.081 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.5648ms
2024-12-09 13:32:31.082 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:31.082 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:31.084 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:31.085 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.7109ms
2024-12-09 13:32:31.087 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:31.090 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:31.091 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:31.092 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:31.093 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:31.094 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:31.094 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:31.096 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4585ms
2024-12-09 13:32:31.096 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:31.098 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.894ms
2024-12-09 13:32:33.589 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:32:33.594 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:33.597 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.3626ms
2024-12-09 13:32:33.600 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:33.603 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:33.604 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:33.606 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:33.608 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:33.609 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:33.610 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:33.611 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:33.612 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:33.613 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0223ms
2024-12-09 13:32:33.614 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:33.614 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7307ms
2024-12-09 13:32:35.186 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:35.188 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:35.189 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:35.190 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:35.191 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:35.192 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:35.193 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:35.195 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:35.196 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:35.197 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.4774ms
2024-12-09 13:32:35.199 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:35.200 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.312ms
2024-12-09 13:32:36.237 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:36.241 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:36.242 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:36.243 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:36.245 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:36.247 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:36.248 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:36.248 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:36.249 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:36.250 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.507ms
2024-12-09 13:32:36.253 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:36.255 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.1286ms
2024-12-09 13:32:37.048 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:37.049 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:37.050 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:37.050 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:37.052 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:37.053 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:37.055 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:37.056 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:37.057 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:37.059 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.9556ms
2024-12-09 13:32:37.060 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:37.060 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:37.067 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:37.068 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.9834ms
2024-12-09 13:32:37.069 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:37.071 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:37.072 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:37.073 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:37.074 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:37.075 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:37.075 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:37.076 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0535ms
2024-12-09 13:32:37.080 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:37.082 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.0164ms
2024-12-09 13:32:39.533 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:32:39.535 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:39.535 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0054ms
2024-12-09 13:32:39.537 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:39.539 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:39.540 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:39.540 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:39.542 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:39.544 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:39.544 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:39.545 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:39.546 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:39.551 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5575ms
2024-12-09 13:32:39.552 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:39.553 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.2234ms
2024-12-09 13:32:41.248 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:41.251 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:41.252 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:41.253 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:41.255 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:41.256 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:41.257 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:41.258 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:41.259 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:41.265 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.5576ms
2024-12-09 13:32:41.266 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:41.267 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.5394ms
2024-12-09 13:32:42.382 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:42.385 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:42.385 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:42.386 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:42.388 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:42.389 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:42.390 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:42.393 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:42.398 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:42.399 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.5485ms
2024-12-09 13:32:42.400 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:42.401 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.0481ms
2024-12-09 13:32:43.636 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:43.638 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:43.640 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:43.643 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:43.644 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:43.645 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:43.646 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:43.646 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:43.647 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:43.648 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7935ms
2024-12-09 13:32:43.650 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:43.653 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.0446ms
2024-12-09 13:32:45.366 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:32:45.367 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:45.368 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4988ms
2024-12-09 13:32:45.375 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:32:45.382 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:32:45.383 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:45.385 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:32:45.387 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:32:45.388 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:32:45.389 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:32:45.392 +05:30 [INF] Deserializing the notes
2024-12-09 13:32:45.393 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:32:45.395 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.7557ms
2024-12-09 13:32:45.396 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:32:45.397 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.7034ms
2024-12-09 13:33:06.149 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-09 13:33:06.151 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:33:06.152 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 3.1514ms
2024-12-09 13:33:06.153 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-09 13:33:06.156 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:33:06.156 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 13:33:06.157 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-09 13:33:06.165 +05:30 [INF] Logging user Shreesha2002ms@gmail.com
2024-12-09 13:33:06.165 +05:30 [INF] Checking if the user present
2024-12-09 13:33:06.166 +05:30 [INF] Attempting to retrieve user with Email: Shreesha2002ms@gmail.com
2024-12-09 13:33:06.170 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-09 13:33:06.172 +05:30 [INF] User with Email: Shreesha2002ms@gmail.com retrieved successfully.
2024-12-09 13:33:06.172 +05:30 [INF] Verifying the password
2024-12-09 13:33:06.492 +05:30 [INF] Password is valid and token is generated
2024-12-09 13:33:06.492 +05:30 [INF] Login successful
2024-12-09 13:33:06.493 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 13:33:06.493 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 334.6027ms
2024-12-09 13:33:06.494 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 13:33:06.495 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 341.2596ms
2024-12-09 13:33:06.510 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:33:06.512 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:33:06.514 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9331ms
2024-12-09 13:33:06.516 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:33:06.517 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:33:06.518 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:33:06.519 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:33:06.521 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:33:06.522 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:33:06.523 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:33:06.526 +05:30 [INF] Deserializing the notes
2024-12-09 13:33:06.527 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:33:06.528 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.7265ms
2024-12-09 13:33:06.528 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:33:06.529 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.4153ms
2024-12-09 13:33:08.688 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:33:08.690 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:33:08.691 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:33:08.691 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:33:08.693 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:33:08.694 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:33:08.695 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:33:08.696 +05:30 [INF] Deserializing the notes
2024-12-09 13:33:08.696 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:33:08.697 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9935ms
2024-12-09 13:33:08.698 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:33:08.703 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.5953ms
2024-12-09 13:33:10.357 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:33:10.359 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:33:10.360 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:33:10.361 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:33:10.362 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:33:10.363 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:33:10.364 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:33:10.365 +05:30 [INF] Deserializing the notes
2024-12-09 13:33:10.366 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:33:10.372 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.2695ms
2024-12-09 13:33:10.373 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:33:10.374 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.9982ms
2024-12-09 13:35:51.763 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:35:51.769 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:35:51.770 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 7.2383ms
2024-12-09 13:35:51.771 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:35:51.773 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:35:51.774 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:35:51.777 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:35:51.781 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:35:51.781 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:35:51.781 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:35:51.782 +05:30 [INF] Received isArchive value: True
2024-12-09 13:35:51.793 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:35:51.797 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:35:51.805 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:35:51.806 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:35:51.807 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:35:51.809 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:35:51.812 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 31.3805ms
2024-12-09 13:35:51.813 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:35:51.813 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 42.1633ms
2024-12-09 13:35:53.060 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:35:53.063 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:35:53.067 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.9153ms
2024-12-09 13:35:53.068 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:35:53.070 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:35:53.071 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:35:53.071 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:35:53.073 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:35:53.074 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:35:53.076 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:35:53.079 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:35:53.079 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:35:53.081 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:35:53.082 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:35:53.086 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:35:53.091 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:35:53.091 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:35:53.092 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:35:53.093 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:35:53.094 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.144ms
2024-12-09 13:35:53.095 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:35:53.095 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.3435ms
2024-12-09 13:35:54.775 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 13:35:54.782 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:35:54.783 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:35:54.783 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:35:54.785 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 13:35:54.786 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:35:54.787 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:35:54.789 +05:30 [INF] Received isArchive value: False
2024-12-09 13:35:54.797 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:35:54.799 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:35:54.804 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:35:54.805 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 13:35:54.806 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:35:54.807 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:35:54.807 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 22.1614ms
2024-12-09 13:35:54.808 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:35:54.809 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 33.9369ms
2024-12-09 13:35:56.096 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:35:56.098 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:35:56.099 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:35:56.100 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:35:56.101 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:35:56.102 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:35:56.103 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:35:56.104 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:35:56.104 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:35:56.106 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:35:56.107 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:35:56.109 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:35:56.112 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:35:56.112 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:35:56.113 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:35:56.114 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:35:56.115 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.1243ms
2024-12-09 13:35:56.120 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:35:56.121 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.2414ms
2024-12-09 13:35:57.268 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:35:57.270 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:35:57.272 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:35:57.272 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:35:57.274 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:35:57.275 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:35:57.277 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:35:57.277 +05:30 [INF] Deserializing the notes
2024-12-09 13:35:57.278 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:35:57.279 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2851ms
2024-12-09 13:35:57.280 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:35:57.281 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.3229ms
2024-12-09 13:35:58.187 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:35:58.190 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:35:58.191 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.2733ms
2024-12-09 13:35:58.197 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:35:58.202 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:35:58.203 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:35:58.206 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:35:58.210 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:35:58.212 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:35:58.213 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:35:58.214 +05:30 [INF] Deserializing the notes
2024-12-09 13:35:58.216 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:35:58.220 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.8853ms
2024-12-09 13:35:58.220 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:35:58.221 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:35:58.221 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.5047ms
2024-12-09 13:35:58.227 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:35:58.230 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:35:58.230 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:35:58.232 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:35:58.233 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:35:58.234 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:35:58.235 +05:30 [INF] Deserializing the notes
2024-12-09 13:35:58.235 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:35:58.236 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9328ms
2024-12-09 13:35:58.237 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:35:58.238 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.3708ms
2024-12-09 13:36:00.633 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:36:00.637 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:00.638 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:00.638 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:36:00.640 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:36:00.641 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:36:00.645 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:36:00.648 +05:30 [INF] Deserializing the notes
2024-12-09 13:36:00.648 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:36:00.649 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.1306ms
2024-12-09 13:36:00.650 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:00.651 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.4359ms
2024-12-09 13:36:01.900 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:36:01.902 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:01.903 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:01.904 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:36:01.909 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:36:01.910 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:36:01.911 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:36:01.912 +05:30 [INF] Deserializing the notes
2024-12-09 13:36:01.912 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:36:01.914 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7974ms
2024-12-09 13:36:01.915 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:01.917 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.6572ms
2024-12-09 13:36:03.574 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - null null
2024-12-09 13:36:03.579 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:03.580 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - 204 null null 5.3855ms
2024-12-09 13:36:03.581 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - application/json 4
2024-12-09 13:36:03.583 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:03.584 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:36:03.584 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:36:03.586 +05:30 [INF] Received noteId: 1026, isArchive: True
2024-12-09 13:36:03.586 +05:30 [INF] Received request to toggle archive status for note with ID: 1026
2024-12-09 13:36:03.587 +05:30 [INF] Initiating toggle of archive status for note with ID: 1026 for user ID: 1
2024-12-09 13:36:03.588 +05:30 [INF] Received isArchive value: True
2024-12-09 13:36:03.590 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:36:03.595 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:36:03.597 +05:30 [INF] Note with ID: 1026 archive status updated to true
2024-12-09 13:36:03.597 +05:30 [INF] Successfully toggled archive status for note with ID: 1026
2024-12-09 13:36:03.597 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:36:03.598 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 12.3122ms
2024-12-09 13:36:03.599 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:36:03.599 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - 200 null application/json; charset=utf-8 17.9181ms
2024-12-09 13:36:04.899 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:36:04.902 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:04.904 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1337ms
2024-12-09 13:36:04.905 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:36:04.908 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:04.909 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:04.910 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:36:04.911 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:36:04.912 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:36:04.914 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:36:04.916 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:36:04.917 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:36:04.919 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:36:04.920 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:36:04.921 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:36:04.928 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:36:04.928 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:36:04.929 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:36:04.929 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:36:04.930 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.0727ms
2024-12-09 13:36:04.930 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:04.931 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.254ms
2024-12-09 13:36:06.207 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - application/json 5
2024-12-09 13:36:06.211 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:06.212 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:36:06.212 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:36:06.214 +05:30 [INF] Received noteId: 1026, isArchive: False
2024-12-09 13:36:06.214 +05:30 [INF] Received request to toggle archive status for note with ID: 1026
2024-12-09 13:36:06.215 +05:30 [INF] Initiating toggle of archive status for note with ID: 1026 for user ID: 1
2024-12-09 13:36:06.215 +05:30 [INF] Received isArchive value: False
2024-12-09 13:36:06.217 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:36:06.220 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:36:06.228 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:36:06.231 +05:30 [INF] Note with ID: 1026 archive status updated to false
2024-12-09 13:36:06.232 +05:30 [INF] Successfully toggled archive status for note with ID: 1026
2024-12-09 13:36:06.233 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:36:06.234 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 20.2886ms
2024-12-09 13:36:06.235 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:36:06.235 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - 200 null application/json; charset=utf-8 28.3233ms
2024-12-09 13:36:07.472 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:36:07.476 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:07.477 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:07.478 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:36:07.481 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:36:07.483 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:36:07.484 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:36:07.486 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:36:07.487 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:36:07.491 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:36:07.495 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:36:07.497 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:36:07.499 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:36:07.499 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:36:07.500 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:36:07.500 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:36:07.501 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.1653ms
2024-12-09 13:36:07.502 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:07.502 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:36:07.502 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.907ms
2024-12-09 13:36:07.504 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:07.510 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:07.511 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:36:07.513 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:36:07.513 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:36:07.514 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:36:07.515 +05:30 [INF] Deserializing the notes
2024-12-09 13:36:07.515 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:36:07.516 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.5296ms
2024-12-09 13:36:07.517 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:07.517 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.5691ms
2024-12-09 13:36:10.095 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:36:10.097 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:10.098 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0011ms
2024-12-09 13:36:10.099 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:36:10.101 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:10.102 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:10.103 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:36:10.104 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:36:10.105 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:36:10.106 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:36:10.109 +05:30 [INF] Deserializing the notes
2024-12-09 13:36:10.111 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:36:10.112 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.6463ms
2024-12-09 13:36:10.113 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:10.114 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.8608ms
2024-12-09 13:36:11.164 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:36:11.166 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:11.167 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:11.168 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:36:11.169 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:36:11.170 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:36:11.172 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:36:11.172 +05:30 [INF] Deserializing the notes
2024-12-09 13:36:11.173 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:36:11.174 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7913ms
2024-12-09 13:36:11.175 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:11.177 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.7644ms
2024-12-09 13:36:12.385 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 13:36:12.387 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:12.388 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 3.177ms
2024-12-09 13:36:12.390 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 13:36:12.392 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:12.393 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:36:12.393 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:36:12.395 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 13:36:12.395 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 13:36:12.396 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 13:36:12.396 +05:30 [INF] Received isArchive value: True
2024-12-09 13:36:12.398 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:36:12.401 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 13:36:12.410 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 13:36:12.413 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 13:36:12.413 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 13:36:12.414 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:36:12.414 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 20.3414ms
2024-12-09 13:36:12.415 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 13:36:12.416 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 25.6599ms
2024-12-09 13:36:13.927 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:36:13.929 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:13.930 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:13.930 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:36:13.932 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:36:13.933 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:36:13.934 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 13:36:13.935 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 13:36:13.936 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 13:36:13.939 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 13:36:13.944 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 13:36:13.945 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 13:36:13.947 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 13:36:13.947 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 13:36:13.948 +05:30 [INF] Notes retrieved successfully
2024-12-09 13:36:13.949 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:36:13.950 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.4476ms
2024-12-09 13:36:13.955 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:13.955 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.759ms
2024-12-09 13:36:16.880 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 13:36:16.883 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:16.883 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6181ms
2024-12-09 13:36:16.885 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 13:36:16.887 +05:30 [INF] CORS policy execution successful.
2024-12-09 13:36:16.889 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:16.890 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 13:36:16.891 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 13:36:16.892 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 13:36:16.893 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 13:36:16.893 +05:30 [INF] Deserializing the notes
2024-12-09 13:36:16.894 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 13:36:16.895 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2003ms
2024-12-09 13:36:16.898 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 13:36:16.900 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.5893ms
2024-12-09 14:05:16.508 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:05:16.518 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:05:16.520 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.6755ms
2024-12-09 14:05:16.523 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:05:16.525 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:05:16.526 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:05:16.527 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:05:16.528 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:05:16.535 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:05:16.536 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:05:16.537 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:05:16.538 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:05:16.559 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:05:16.561 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:05:16.564 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:05:16.567 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:05:16.568 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:05:16.569 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:05:16.569 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:05:16.570 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 42.3033ms
2024-12-09 14:05:16.571 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:05:16.572 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.8363ms
2024-12-09 14:05:16.609 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:05:16.611 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:05:16.612 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:05:16.612 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:05:16.613 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:05:16.623 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:05:16.625 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:05:16.625 +05:30 [INF] Deserializing the notes
2024-12-09 14:05:16.626 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:05:16.628 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.7004ms
2024-12-09 14:05:16.629 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:05:16.630 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.4211ms
2024-12-09 14:05:29.924 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:05:29.926 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:05:29.926 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.1619ms
2024-12-09 14:05:29.928 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:05:29.929 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:05:29.929 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:05:29.931 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:05:29.933 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:05:29.935 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:05:29.936 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:05:29.937 +05:30 [INF] Deserializing the notes
2024-12-09 14:05:29.938 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:05:29.939 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.7561ms
2024-12-09 14:05:29.941 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:05:29.941 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:05:29.942 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.1702ms
2024-12-09 14:05:29.948 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:05:29.951 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:05:29.952 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:05:29.954 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:05:29.956 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:05:29.957 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:05:29.961 +05:30 [INF] Deserializing the notes
2024-12-09 14:05:29.963 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:05:29.964 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.2025ms
2024-12-09 14:05:29.965 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:05:29.965 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.8526ms
2024-12-09 14:05:35.305 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:05:35.306 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:05:35.317 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:05:35.319 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:05:35.320 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 15.154ms
2024-12-09 14:05:35.321 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.8771ms
2024-12-09 14:05:35.323 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:05:35.327 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:05:35.331 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:05:35.334 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:05:35.336 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:05:35.338 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:05:35.338 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:05:35.340 +05:30 [INF] Deserializing the notes
2024-12-09 14:05:35.342 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:05:35.347 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.0443ms
2024-12-09 14:05:35.349 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:05:35.350 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:05:35.352 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:05:35.352 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.6529ms
2024-12-09 14:05:35.353 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:05:35.356 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:05:35.358 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:05:35.359 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:05:35.362 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:05:35.364 +05:30 [INF] Deserializing the notes
2024-12-09 14:05:35.366 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:05:35.369 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.574ms
2024-12-09 14:05:35.371 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:05:35.372 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.7434ms
2024-12-09 14:06:03.938 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:06:03.941 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:06:03.943 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.7988ms
2024-12-09 14:06:03.948 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:06:03.953 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:06:03.959 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:06:03.961 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:06:03.964 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:06:03.968 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:06:03.970 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:06:03.971 +05:30 [INF] Deserializing the notes
2024-12-09 14:06:03.972 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:06:03.976 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.8969ms
2024-12-09 14:06:03.978 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:06:03.979 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.9977ms
2024-12-09 14:06:03.986 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:06:03.987 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:06:03.988 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:06:03.988 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:06:03.994 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:06:03.995 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:06:03.998 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:06:04.000 +05:30 [INF] Deserializing the notes
2024-12-09 14:06:04.001 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:06:04.002 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.6475ms
2024-12-09 14:06:04.003 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:06:04.004 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.4099ms
2024-12-09 14:06:17.100 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:06:17.103 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:06:17.105 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.9353ms
2024-12-09 14:06:17.107 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:06:17.110 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:06:17.111 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:06:17.112 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:06:17.115 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:06:17.116 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:06:17.121 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:06:17.122 +05:30 [INF] Deserializing the notes
2024-12-09 14:06:17.122 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:06:17.124 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.3773ms
2024-12-09 14:06:17.125 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:06:17.126 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.7043ms
2024-12-09 14:06:17.163 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:06:17.164 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:06:17.165 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:06:17.167 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:06:17.168 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:06:17.170 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:06:17.171 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:06:17.171 +05:30 [INF] Deserializing the notes
2024-12-09 14:06:17.172 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:06:17.173 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0228ms
2024-12-09 14:06:17.174 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:06:17.174 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.8216ms
2024-12-09 14:06:37.287 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:06:37.293 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:06:37.295 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.2632ms
2024-12-09 14:06:37.297 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:06:37.302 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:06:37.303 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:06:37.304 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:06:37.306 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:06:37.307 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:06:37.308 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:06:37.308 +05:30 [INF] Deserializing the notes
2024-12-09 14:06:37.309 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:06:37.310 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.718ms
2024-12-09 14:06:37.312 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:06:37.312 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:06:37.316 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.2448ms
2024-12-09 14:06:37.323 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:06:37.326 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:06:37.331 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:06:37.333 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:06:37.334 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:06:37.336 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:06:37.337 +05:30 [INF] Deserializing the notes
2024-12-09 14:06:37.338 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:06:37.340 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.635ms
2024-12-09 14:06:37.341 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:06:37.341 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.807ms
2024-12-09 14:07:33.298 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:07:33.306 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:07:33.308 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.5572ms
2024-12-09 14:07:33.313 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:07:33.316 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:07:33.318 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:07:33.318 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:07:33.320 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:07:33.321 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:07:33.322 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:07:33.323 +05:30 [INF] Deserializing the notes
2024-12-09 14:07:33.324 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:07:33.329 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.2875ms
2024-12-09 14:07:33.331 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:07:33.332 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.2309ms
2024-12-09 14:07:33.411 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:07:33.414 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:07:33.416 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:07:33.416 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:07:33.418 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:07:33.419 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:07:33.420 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:07:33.420 +05:30 [INF] Deserializing the notes
2024-12-09 14:07:33.421 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:07:33.422 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3964ms
2024-12-09 14:07:33.423 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:07:33.424 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.454ms
2024-12-09 14:08:03.979 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:08:03.986 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:08:03.987 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.8245ms
2024-12-09 14:08:03.989 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:08:03.995 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:08:03.996 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:08:03.999 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:08:04.001 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:08:04.002 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:08:04.003 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:08:04.004 +05:30 [INF] Deserializing the notes
2024-12-09 14:08:04.004 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:08:04.006 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.3995ms
2024-12-09 14:08:04.010 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:08:04.013 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.4287ms
2024-12-09 14:08:04.015 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:08:04.017 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:08:04.018 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:08:04.019 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:08:04.021 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:08:04.024 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:08:04.026 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:08:04.026 +05:30 [INF] Deserializing the notes
2024-12-09 14:08:04.027 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:08:04.028 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.3013ms
2024-12-09 14:08:04.029 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:08:04.030 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.9693ms
2024-12-09 14:08:20.347 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:08:20.350 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:08:20.351 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.156ms
2024-12-09 14:08:20.354 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:08:20.358 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:08:20.364 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:08:20.365 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:08:20.368 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:08:20.370 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:08:20.373 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:08:20.376 +05:30 [INF] Deserializing the notes
2024-12-09 14:08:20.379 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:08:20.380 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.0539ms
2024-12-09 14:08:20.380 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:08:20.381 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:08:20.381 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.8941ms
2024-12-09 14:08:20.386 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:08:20.388 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:08:20.388 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:08:20.392 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:08:20.395 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:08:20.396 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:08:20.397 +05:30 [INF] Deserializing the notes
2024-12-09 14:08:20.398 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:08:20.399 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.5529ms
2024-12-09 14:08:20.400 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:08:20.401 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.0692ms
2024-12-09 14:09:49.554 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:09:49.557 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:09:49.557 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9968ms
2024-12-09 14:09:49.559 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:09:49.561 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:09:49.563 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:09:49.565 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:09:49.567 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:09:49.568 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:09:49.572 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:09:49.574 +05:30 [INF] Deserializing the notes
2024-12-09 14:09:49.575 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:09:49.576 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.1149ms
2024-12-09 14:09:49.577 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:09:49.578 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.0673ms
2024-12-09 14:09:49.589 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:09:49.591 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:09:49.592 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:09:49.593 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:09:49.595 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:09:49.595 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:09:49.597 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:09:49.600 +05:30 [INF] Deserializing the notes
2024-12-09 14:09:49.602 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:09:49.603 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.591ms
2024-12-09 14:09:49.604 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:09:49.605 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.1511ms
2024-12-09 14:09:59.535 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:09:59.537 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:09:59.537 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.7652ms
2024-12-09 14:09:59.539 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:09:59.541 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:09:59.542 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:09:59.543 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:09:59.545 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:09:59.546 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:09:59.547 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:09:59.548 +05:30 [INF] Deserializing the notes
2024-12-09 14:09:59.549 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:09:59.551 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.6648ms
2024-12-09 14:09:59.554 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:09:59.556 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:09:59.558 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:09:59.560 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.1153ms
2024-12-09 14:09:59.561 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:09:59.565 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:09:59.567 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:09:59.568 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:09:59.569 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:09:59.569 +05:30 [INF] Deserializing the notes
2024-12-09 14:09:59.573 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:09:59.576 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.6386ms
2024-12-09 14:09:59.580 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:09:59.581 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.9377ms
2024-12-09 14:10:04.804 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:10:04.806 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:10:04.806 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6595ms
2024-12-09 14:10:04.808 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:10:04.810 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:10:04.811 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:04.812 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:10:04.813 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:10:04.814 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:10:04.817 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:10:04.819 +05:30 [INF] Deserializing the notes
2024-12-09 14:10:04.819 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:10:04.820 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.7154ms
2024-12-09 14:10:04.820 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:04.821 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.5115ms
2024-12-09 14:10:06.218 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:10:06.221 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:10:06.223 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:06.223 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:10:06.226 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:10:06.227 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:10:06.228 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:10:06.229 +05:30 [INF] Deserializing the notes
2024-12-09 14:10:06.229 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:10:06.230 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6194ms
2024-12-09 14:10:06.231 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:06.232 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.8887ms
2024-12-09 14:10:07.167 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:10:07.170 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:10:07.171 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:07.171 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:10:07.174 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:10:07.176 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:10:07.177 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:10:07.178 +05:30 [INF] Deserializing the notes
2024-12-09 14:10:07.178 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:10:07.180 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.5166ms
2024-12-09 14:10:07.181 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:07.181 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.2077ms
2024-12-09 14:10:20.096 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:10:20.099 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:10:20.100 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.3996ms
2024-12-09 14:10:20.103 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:10:20.103 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:10:20.106 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:10:20.111 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.188ms
2024-12-09 14:10:20.108 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:10:20.115 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:20.115 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:10:20.118 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:10:20.121 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:10:20.122 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:10:20.123 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:10:20.128 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:10:20.146 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:10:20.150 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:10:20.153 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:10:20.159 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:10:20.159 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:10:20.160 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:10:20.161 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:10:20.162 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 44.5502ms
2024-12-09 14:10:20.163 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:20.163 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:10:20.164 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 60.531ms
2024-12-09 14:10:20.165 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:10:20.168 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:20.174 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:10:20.176 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:10:20.177 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:10:20.178 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:10:20.178 +05:30 [INF] Deserializing the notes
2024-12-09 14:10:20.179 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:10:20.180 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7922ms
2024-12-09 14:10:20.180 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:20.181 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:10:20.181 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.5792ms
2024-12-09 14:10:20.183 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:10:20.192 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:20.192 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:10:20.194 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:10:20.195 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:10:20.196 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:10:20.196 +05:30 [INF] Deserializing the notes
2024-12-09 14:10:20.197 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:10:20.198 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.1071ms
2024-12-09 14:10:20.198 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:20.199 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.4816ms
2024-12-09 14:10:38.483 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:10:38.485 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:10:38.486 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8386ms
2024-12-09 14:10:38.489 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:10:38.490 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:10:38.491 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:38.493 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:10:38.497 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:10:38.499 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:10:38.501 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:10:38.501 +05:30 [INF] Deserializing the notes
2024-12-09 14:10:38.502 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:10:38.509 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.3652ms
2024-12-09 14:10:38.510 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:38.510 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:10:38.511 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.5693ms
2024-12-09 14:10:38.517 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:10:38.520 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:38.520 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:10:38.575 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:10:38.576 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:10:38.578 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:10:38.579 +05:30 [INF] Deserializing the notes
2024-12-09 14:10:38.581 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:10:38.585 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.4585ms
2024-12-09 14:10:38.586 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:10:38.596 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 85.4816ms
2024-12-09 14:11:05.852 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:11:05.858 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:05.859 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7293ms
2024-12-09 14:11:05.860 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:11:05.862 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:05.863 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:05.863 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:11:05.865 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:11:05.866 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:11:05.869 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:11:05.871 +05:30 [INF] Deserializing the notes
2024-12-09 14:11:05.872 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:11:05.873 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.452ms
2024-12-09 14:11:05.874 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:05.876 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.3942ms
2024-12-09 14:11:05.982 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:11:05.986 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:05.986 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:05.988 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:11:05.990 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:11:05.991 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:11:05.992 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:11:05.993 +05:30 [INF] Deserializing the notes
2024-12-09 14:11:05.994 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:11:06.003 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.6335ms
2024-12-09 14:11:06.004 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:06.005 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.821ms
2024-12-09 14:11:23.722 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:11:23.726 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:23.728 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.6777ms
2024-12-09 14:11:23.732 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:11:23.736 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:23.737 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:23.737 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:11:23.740 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:11:23.742 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:11:23.744 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:11:23.746 +05:30 [INF] Deserializing the notes
2024-12-09 14:11:23.748 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:11:23.749 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.6384ms
2024-12-09 14:11:23.750 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:23.751 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.3787ms
2024-12-09 14:11:23.806 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:11:23.808 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:23.809 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:23.809 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:11:23.810 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:11:23.812 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:11:23.813 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:11:23.813 +05:30 [INF] Deserializing the notes
2024-12-09 14:11:23.814 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:11:23.816 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2666ms
2024-12-09 14:11:23.816 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:23.817 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.1734ms
2024-12-09 14:11:25.680 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:11:25.682 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:25.683 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:25.684 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:11:25.685 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:11:25.686 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:11:25.688 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:11:25.689 +05:30 [INF] Deserializing the notes
2024-12-09 14:11:25.690 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:11:25.692 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.7679ms
2024-12-09 14:11:25.694 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:25.694 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:11:25.695 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.857ms
2024-12-09 14:11:25.701 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:25.705 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:25.705 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:11:25.707 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:11:25.708 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:11:25.709 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:11:25.710 +05:30 [INF] Deserializing the notes
2024-12-09 14:11:25.715 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:11:25.717 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.0791ms
2024-12-09 14:11:25.718 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:25.720 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.5987ms
2024-12-09 14:11:35.182 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:11:35.185 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:35.186 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6113ms
2024-12-09 14:11:35.188 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:11:35.191 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:35.193 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:35.194 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:11:35.197 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:11:35.199 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:11:35.200 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:11:35.202 +05:30 [INF] Deserializing the notes
2024-12-09 14:11:35.203 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:11:35.209 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.3091ms
2024-12-09 14:11:35.211 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:35.212 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:11:35.213 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.1627ms
2024-12-09 14:11:35.214 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:35.217 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:35.218 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:11:35.220 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:11:35.225 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:11:35.226 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:11:35.231 +05:30 [INF] Deserializing the notes
2024-12-09 14:11:35.232 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:11:35.234 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.2711ms
2024-12-09 14:11:35.235 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:35.236 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.5155ms
2024-12-09 14:11:45.494 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:11:45.496 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:45.497 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.327ms
2024-12-09 14:11:45.499 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:11:45.502 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:45.503 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:45.503 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:11:45.506 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:11:45.507 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:11:45.508 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:11:45.509 +05:30 [INF] Deserializing the notes
2024-12-09 14:11:45.510 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:11:45.512 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.4477ms
2024-12-09 14:11:45.513 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:45.514 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.9458ms
2024-12-09 14:11:45.528 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:11:45.531 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:45.532 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:45.534 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:11:45.536 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:11:45.537 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:11:45.538 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:11:45.539 +05:30 [INF] Deserializing the notes
2024-12-09 14:11:45.539 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:11:45.541 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9216ms
2024-12-09 14:11:45.543 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:45.544 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.2259ms
2024-12-09 14:11:58.925 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:11:58.927 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:58.928 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.5435ms
2024-12-09 14:11:58.929 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:11:58.931 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:58.931 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:58.932 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:11:58.934 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:11:58.935 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:11:58.937 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:11:58.938 +05:30 [INF] Deserializing the notes
2024-12-09 14:11:58.939 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:11:58.941 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.9433ms
2024-12-09 14:11:58.946 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:58.949 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.6085ms
2024-12-09 14:11:58.980 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:11:58.982 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:11:58.983 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:58.984 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:11:58.987 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:11:58.988 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:11:58.990 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:11:58.990 +05:30 [INF] Deserializing the notes
2024-12-09 14:11:58.991 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:11:58.992 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.1245ms
2024-12-09 14:11:58.996 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:11:58.999 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.4316ms
2024-12-09 14:12:02.904 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:12:02.907 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:12:02.907 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:12:02.909 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:12:02.911 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:12:02.913 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:12:02.914 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:12:02.914 +05:30 [INF] Deserializing the notes
2024-12-09 14:12:02.915 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:12:02.922 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6306ms
2024-12-09 14:12:02.923 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:12:02.924 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.9295ms
2024-12-09 14:12:02.977 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:12:02.979 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:12:02.979 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:12:02.980 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:12:02.981 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:12:02.982 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:12:02.983 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:12:02.983 +05:30 [INF] Deserializing the notes
2024-12-09 14:12:02.986 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:12:02.992 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.6723ms
2024-12-09 14:12:02.993 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:12:02.994 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.8755ms
2024-12-09 14:12:08.965 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:12:08.969 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:12:08.970 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.413ms
2024-12-09 14:12:08.973 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:12:08.975 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:12:08.976 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:12:08.976 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:12:08.978 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:12:08.980 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:12:08.984 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:12:08.985 +05:30 [INF] Deserializing the notes
2024-12-09 14:12:08.985 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:12:08.987 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.1699ms
2024-12-09 14:12:08.988 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:12:08.989 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.8502ms
2024-12-09 14:12:09.010 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:12:09.012 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:12:09.013 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:12:09.013 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:12:09.015 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:12:09.018 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:12:09.021 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:12:09.023 +05:30 [INF] Deserializing the notes
2024-12-09 14:12:09.023 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:12:09.025 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.1903ms
2024-12-09 14:12:09.026 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:12:09.027 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.6782ms
2024-12-09 14:13:47.308 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:13:47.313 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:13:47.314 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.0573ms
2024-12-09 14:13:47.316 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:13:47.318 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:13:47.319 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:13:47.320 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:13:47.326 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:13:47.327 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:13:47.328 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:13:47.329 +05:30 [INF] Deserializing the notes
2024-12-09 14:13:47.330 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:13:47.331 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.6785ms
2024-12-09 14:13:47.337 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:13:47.340 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:13:47.343 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:13:47.344 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.5038ms
2024-12-09 14:13:47.345 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:13:47.348 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:13:47.355 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:13:47.358 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:13:47.359 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:13:47.360 +05:30 [INF] Deserializing the notes
2024-12-09 14:13:47.361 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:13:47.362 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.3202ms
2024-12-09 14:13:47.363 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:13:47.364 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.3525ms
2024-12-09 14:14:02.289 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:14:02.291 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:14:02.292 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:02.296 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:02.298 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.6193ms
2024-12-09 14:14:02.299 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6704ms
2024-12-09 14:14:02.300 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:02.308 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:02.310 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:02.311 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:02.312 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:02.313 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:02.315 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:02.315 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:02.316 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:02.317 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1659ms
2024-12-09 14:14:02.318 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:02.318 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:02.319 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.9504ms
2024-12-09 14:14:02.320 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:02.322 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:02.323 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:02.324 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:02.325 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:02.330 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:02.330 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:02.331 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:02.332 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.1403ms
2024-12-09 14:14:02.332 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:02.333 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.0691ms
2024-12-09 14:14:04.633 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:04.635 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:04.636 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:04.636 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:04.639 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:04.640 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:04.641 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:04.642 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:04.643 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:04.649 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.9178ms
2024-12-09 14:14:04.650 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:04.651 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.0341ms
2024-12-09 14:14:04.655 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:04.657 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:04.658 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:04.658 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:04.660 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:04.661 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:04.665 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:04.668 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:04.668 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:04.670 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.0521ms
2024-12-09 14:14:04.671 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:04.672 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.5808ms
2024-12-09 14:14:07.966 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:14:07.970 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:07.971 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8896ms
2024-12-09 14:14:07.973 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:07.975 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:07.976 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:07.977 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:07.979 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:07.980 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:07.981 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:07.982 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:07.986 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:07.990 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.772ms
2024-12-09 14:14:07.991 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:07.992 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.9615ms
2024-12-09 14:14:08.009 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:08.012 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:08.013 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:08.014 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:08.016 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:08.017 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:08.020 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:08.022 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:08.023 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:08.025 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.8691ms
2024-12-09 14:14:08.026 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:08.027 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.7224ms
2024-12-09 14:14:14.146 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:14:14.148 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:14.149 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8453ms
2024-12-09 14:14:14.151 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:14.153 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:14.154 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:14.155 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:14.157 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:14.159 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:14.159 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:14.161 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:14.162 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:14.163 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.2368ms
2024-12-09 14:14:14.164 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:14.165 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.8878ms
2024-12-09 14:14:14.187 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:14.189 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:14.191 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:14.192 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:14.194 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:14.195 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:14.197 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:14.198 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:14.202 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:14.205 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.6268ms
2024-12-09 14:14:14.208 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:14.209 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.1074ms
2024-12-09 14:14:15.610 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:15.611 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:15.612 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:15.613 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:15.617 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:15.618 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:15.622 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:15.624 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:15.625 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:15.627 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.2344ms
2024-12-09 14:14:15.628 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:15.629 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.0609ms
2024-12-09 14:14:15.643 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:15.645 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:15.646 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:15.646 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:15.648 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:15.650 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:15.652 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:15.654 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:15.655 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:15.657 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.8108ms
2024-12-09 14:14:15.658 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:15.659 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.7499ms
2024-12-09 14:14:17.934 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:17.937 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:17.938 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:17.939 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:17.942 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:17.943 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:17.943 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:17.944 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:17.945 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:17.946 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9802ms
2024-12-09 14:14:17.947 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:17.948 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.0497ms
2024-12-09 14:14:17.956 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:17.958 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:17.959 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:17.960 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:17.962 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:17.967 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:17.969 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:17.970 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:17.971 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:17.972 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7291ms
2024-12-09 14:14:17.973 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:17.974 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.6907ms
2024-12-09 14:14:32.267 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:14:32.270 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:32.271 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6107ms
2024-12-09 14:14:32.272 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:32.273 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:32.274 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:32.275 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:32.276 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:32.277 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:32.278 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:32.279 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:32.280 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:32.287 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.0309ms
2024-12-09 14:14:32.288 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:32.289 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:32.290 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.6563ms
2024-12-09 14:14:32.292 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:32.295 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:32.297 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:32.301 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:32.303 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:32.304 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:32.305 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:32.306 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:32.308 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.2637ms
2024-12-09 14:14:32.309 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:32.310 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.9646ms
2024-12-09 14:14:40.439 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:14:40.441 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:40.443 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.0459ms
2024-12-09 14:14:40.445 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:40.449 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:40.450 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:40.451 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:40.453 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:40.454 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:40.456 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:40.460 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:40.462 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:40.464 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7521ms
2024-12-09 14:14:40.465 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:40.466 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:40.467 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:40.468 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.0782ms
2024-12-09 14:14:40.469 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:40.472 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:40.473 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:40.474 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:40.479 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:40.480 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:40.483 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:40.484 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.2164ms
2024-12-09 14:14:40.485 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:40.486 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.0294ms
2024-12-09 14:14:43.855 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:43.857 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:43.857 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:43.858 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:43.861 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:43.862 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:43.863 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:43.865 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:43.866 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:43.871 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6458ms
2024-12-09 14:14:43.872 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:43.873 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:14:43.874 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.9339ms
2024-12-09 14:14:43.876 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:14:43.879 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:43.880 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:14:43.882 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:14:43.884 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:14:43.885 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:14:43.890 +05:30 [INF] Deserializing the notes
2024-12-09 14:14:43.892 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:14:43.894 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.9572ms
2024-12-09 14:14:43.895 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:14:43.897 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.5069ms
2024-12-09 14:15:19.572 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:15:19.581 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:15:19.582 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.6502ms
2024-12-09 14:15:19.584 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:15:19.586 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:15:19.587 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:19.588 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:15:19.590 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:15:19.591 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:15:19.592 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:15:19.593 +05:30 [INF] Deserializing the notes
2024-12-09 14:15:19.593 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:15:19.599 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.6823ms
2024-12-09 14:15:19.600 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:19.602 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.9142ms
2024-12-09 14:15:19.650 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:15:19.652 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:15:19.652 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:19.653 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:15:19.654 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:15:19.655 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:15:19.656 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:15:19.657 +05:30 [INF] Deserializing the notes
2024-12-09 14:15:19.658 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:15:19.659 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2338ms
2024-12-09 14:15:19.660 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:19.661 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.7343ms
2024-12-09 14:15:20.450 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:15:20.452 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:15:20.453 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:20.453 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:15:20.457 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:15:20.458 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:15:20.460 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:15:20.461 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:15:20.461 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:15:20.473 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:15:20.476 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:15:20.479 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:15:20.481 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:15:20.482 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:15:20.483 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:15:20.483 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:15:20.492 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 34.7295ms
2024-12-09 14:15:20.493 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:15:20.494 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:20.496 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:15:20.497 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.2665ms
2024-12-09 14:15:20.498 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:20.510 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:15:20.513 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:15:20.514 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:15:20.516 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:15:20.519 +05:30 [INF] Deserializing the notes
2024-12-09 14:15:20.522 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:15:20.524 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.9442ms
2024-12-09 14:15:20.530 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:20.532 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 38.7699ms
2024-12-09 14:15:23.515 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:15:23.518 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:15:23.520 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:23.520 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:15:23.523 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:15:23.524 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:15:23.529 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:15:23.531 +05:30 [INF] Deserializing the notes
2024-12-09 14:15:23.533 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:15:23.535 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.3313ms
2024-12-09 14:15:23.536 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:23.537 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:15:23.538 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.2059ms
2024-12-09 14:15:23.546 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:15:23.550 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:23.551 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:15:23.553 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:15:23.554 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:15:23.555 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:15:23.559 +05:30 [INF] Deserializing the notes
2024-12-09 14:15:23.562 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:15:23.563 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6517ms
2024-12-09 14:15:23.565 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:23.566 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.0027ms
2024-12-09 14:15:29.624 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:15:29.626 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:15:29.627 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6085ms
2024-12-09 14:15:29.629 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:15:29.631 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:15:29.632 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:29.633 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:15:29.635 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:15:29.636 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:15:29.637 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:15:29.642 +05:30 [INF] Deserializing the notes
2024-12-09 14:15:29.644 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:15:29.645 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.3878ms
2024-12-09 14:15:29.646 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:29.646 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:15:29.647 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.7044ms
2024-12-09 14:15:29.649 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:15:29.652 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:29.653 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:15:29.654 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:15:29.655 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:15:29.657 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:15:29.661 +05:30 [INF] Deserializing the notes
2024-12-09 14:15:29.663 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:15:29.665 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.5188ms
2024-12-09 14:15:29.666 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:15:29.667 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.8446ms
2024-12-09 14:16:13.854 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:16:13.858 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:13.859 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.0128ms
2024-12-09 14:16:13.861 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:13.865 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:13.867 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:13.872 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:13.876 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:13.877 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:13.878 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:13.879 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:13.880 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:13.881 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5016ms
2024-12-09 14:16:13.883 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:13.890 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.9624ms
2024-12-09 14:16:13.896 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:13.897 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:13.898 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:13.899 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:13.901 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:13.903 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:13.904 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:13.909 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:13.911 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:13.912 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.1659ms
2024-12-09 14:16:13.914 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:13.916 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.8414ms
2024-12-09 14:16:14.347 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:14.348 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:14.349 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:14.350 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:14.353 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:14.354 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:14.355 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:14.359 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:14.361 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:14.363 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.1957ms
2024-12-09 14:16:14.364 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:14.364 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:14.365 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.6125ms
2024-12-09 14:16:14.367 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:14.371 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:14.371 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:14.373 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:14.374 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:14.378 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:14.380 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:14.381 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:14.382 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.3633ms
2024-12-09 14:16:14.383 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:14.384 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.8803ms
2024-12-09 14:16:21.967 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:16:21.969 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:21.969 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0815ms
2024-12-09 14:16:21.971 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:21.973 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:21.974 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:21.974 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:21.976 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:21.976 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:21.977 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:21.978 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:21.978 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:21.979 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7366ms
2024-12-09 14:16:21.984 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:21.987 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.8321ms
2024-12-09 14:16:23.623 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:23.627 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:23.628 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:23.628 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:23.631 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:23.632 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:23.633 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:23.635 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:23.636 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:23.637 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.5501ms
2024-12-09 14:16:23.641 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:23.642 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.4196ms
2024-12-09 14:16:24.860 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:24.863 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:24.863 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:24.864 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:24.866 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:24.867 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:24.868 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:24.869 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:24.870 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:24.871 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0171ms
2024-12-09 14:16:24.871 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:24.872 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.8083ms
2024-12-09 14:16:27.193 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:16:27.196 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:27.197 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 4.003ms
2024-12-09 14:16:27.199 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:16:27.201 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:27.202 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:16:27.209 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:27.215 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:16:27.216 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:16:27.226 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:16:27.233 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:16:27.238 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:16:27.239 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:16:27.240 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:16:27.241 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:27.245 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 31.097ms
2024-12-09 14:16:27.247 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:16:27.248 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 48.7133ms
2024-12-09 14:16:28.672 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:16:28.675 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:28.676 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1887ms
2024-12-09 14:16:28.678 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:28.682 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:28.683 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:28.683 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:28.684 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:28.685 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:28.688 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:16:28.690 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:16:28.691 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:16:28.692 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:16:28.694 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:16:28.697 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:16:28.699 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:16:28.699 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:16:28.700 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:16:28.700 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:28.701 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.7026ms
2024-12-09 14:16:28.702 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:28.703 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.7862ms
2024-12-09 14:16:32.515 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:16:32.516 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:32.517 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 2.4029ms
2024-12-09 14:16:32.518 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:16:32.521 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:32.522 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:16:32.523 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:32.525 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:16:32.530 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:16:32.532 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:16:32.534 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:16:32.538 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:16:32.542 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:16:32.545 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:16:32.545 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:32.546 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 20.8362ms
2024-12-09 14:16:32.546 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:16:32.547 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 28.9645ms
2024-12-09 14:16:34.845 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:16:34.847 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:34.848 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6795ms
2024-12-09 14:16:34.850 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:34.851 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:34.852 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:34.853 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:34.855 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:34.858 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:34.860 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:16:34.861 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:16:34.862 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:16:34.864 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:16:34.865 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:16:34.867 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:16:34.868 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:16:34.869 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:16:34.869 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:16:34.870 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:34.871 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.9465ms
2024-12-09 14:16:34.875 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:34.877 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.331ms
2024-12-09 14:16:35.996 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:35.999 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:36.000 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:36.001 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:36.003 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:36.004 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:36.004 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:36.005 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:36.006 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:36.007 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0931ms
2024-12-09 14:16:36.007 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:36.008 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.1833ms
2024-12-09 14:16:36.701 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:36.702 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:36.703 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:36.704 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:36.707 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:36.709 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:36.711 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:36.712 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:36.713 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:36.716 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.256ms
2024-12-09 14:16:36.717 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:36.717 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:36.719 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:36.727 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.1095ms
2024-12-09 14:16:36.729 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:36.733 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:36.735 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:36.735 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:36.737 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:36.737 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:36.738 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:36.739 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8507ms
2024-12-09 14:16:36.740 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:36.741 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.1ms
2024-12-09 14:16:39.551 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:39.552 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:39.553 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:39.555 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:39.556 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:39.558 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:39.559 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:39.560 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:39.561 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:39.562 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.9346ms
2024-12-09 14:16:39.564 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:39.566 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.9437ms
2024-12-09 14:16:40.812 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:16:40.814 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:40.815 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4504ms
2024-12-09 14:16:40.816 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:40.819 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:40.820 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:40.821 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:40.822 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:40.823 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:40.823 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:40.828 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:40.831 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:40.832 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.5692ms
2024-12-09 14:16:40.833 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:40.833 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.1653ms
2024-12-09 14:16:42.190 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:42.193 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:42.196 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:42.196 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:42.199 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:42.200 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:42.200 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:42.201 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:42.202 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:42.202 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9822ms
2024-12-09 14:16:42.203 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:42.206 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.3861ms
2024-12-09 14:16:43.721 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:16:43.722 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:43.724 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 3.3267ms
2024-12-09 14:16:43.725 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 14:16:43.727 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:43.728 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:16:43.728 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:43.730 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 14:16:43.730 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:16:43.731 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:16:43.732 +05:30 [INF] Received isArchive value: False
2024-12-09 14:16:43.744 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:16:43.748 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:16:43.752 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:16:43.754 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 14:16:43.754 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:16:43.755 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:43.755 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 25.8279ms
2024-12-09 14:16:43.760 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:16:43.761 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 36.2283ms
2024-12-09 14:16:45.065 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:45.067 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:45.068 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:45.069 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:45.070 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:45.071 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:45.072 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:16:45.073 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:16:45.074 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:16:45.076 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:16:45.078 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:16:45.079 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:16:45.081 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:16:45.082 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:16:45.082 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:16:45.083 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:45.084 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.7724ms
2024-12-09 14:16:45.089 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:45.090 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.519ms
2024-12-09 14:16:45.987 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:16:45.989 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:45.991 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7806ms
2024-12-09 14:16:45.992 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:45.995 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:45.996 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:45.997 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:46.002 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:46.003 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:46.004 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:46.004 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:46.005 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:46.006 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.999ms
2024-12-09 14:16:46.007 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:46.008 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.0247ms
2024-12-09 14:16:46.570 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:46.571 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:46.572 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:46.573 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:46.575 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:46.578 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:46.579 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:46.579 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:46.584 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:46.588 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.6312ms
2024-12-09 14:16:46.589 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:46.589 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:46.591 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:46.592 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.0845ms
2024-12-09 14:16:46.593 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:46.597 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:46.598 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:46.599 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:46.600 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:46.600 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:46.601 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:46.602 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2474ms
2024-12-09 14:16:46.602 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:46.603 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.6917ms
2024-12-09 14:16:48.918 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:48.921 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:48.922 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:48.923 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:48.925 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:48.926 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:48.927 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:48.927 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:48.928 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:48.929 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7148ms
2024-12-09 14:16:48.930 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:48.930 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.9765ms
2024-12-09 14:16:49.947 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:49.949 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:49.950 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:49.950 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:49.952 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:49.953 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:49.954 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:49.955 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:49.955 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:49.956 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.378ms
2024-12-09 14:16:49.957 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:49.960 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.5112ms
2024-12-09 14:16:51.065 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:16:51.067 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:51.068 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8036ms
2024-12-09 14:16:51.070 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:51.071 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:51.072 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:51.073 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:51.074 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:51.075 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:51.078 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:16:51.081 +05:30 [INF] Deserializing the notes
2024-12-09 14:16:51.081 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:51.082 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.4489ms
2024-12-09 14:16:51.083 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:51.084 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.1084ms
2024-12-09 14:16:52.737 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:16:52.743 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:52.743 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 6.0786ms
2024-12-09 14:16:52.745 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 14:16:52.746 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:52.746 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:16:52.747 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:52.748 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 14:16:52.749 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:16:52.750 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:16:52.750 +05:30 [INF] Received isArchive value: True
2024-12-09 14:16:52.753 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:16:52.757 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:16:52.761 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:16:52.762 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 14:16:52.763 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:16:52.763 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:52.764 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 15.7398ms
2024-12-09 14:16:52.765 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:16:52.765 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 20.5553ms
2024-12-09 14:16:53.880 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:16:53.883 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:16:53.884 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:53.886 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:16:53.888 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:16:53.890 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:16:53.891 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:16:53.891 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:16:53.892 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:16:53.893 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:16:53.898 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:16:53.900 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:16:53.901 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:16:53.902 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:16:53.903 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:16:53.903 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:16:53.905 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.9545ms
2024-12-09 14:16:53.906 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:16:53.907 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.7253ms
2024-12-09 14:18:14.229 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:18:14.231 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:18:14.232 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.7602ms
2024-12-09 14:18:14.233 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:18:14.235 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:18:14.236 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:18:14.236 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:18:14.237 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:18:14.238 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:18:14.241 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:18:14.244 +05:30 [INF] Deserializing the notes
2024-12-09 14:18:14.245 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:18:14.246 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.2701ms
2024-12-09 14:18:14.246 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:18:14.247 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.9519ms
2024-12-09 14:18:15.082 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:18:15.085 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:18:15.085 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:18:15.086 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:18:15.087 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:18:15.089 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:18:15.090 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:18:15.091 +05:30 [INF] Deserializing the notes
2024-12-09 14:18:15.092 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:18:15.094 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.5217ms
2024-12-09 14:18:15.095 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:18:15.096 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.6378ms
2024-12-09 14:18:21.955 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:18:21.956 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:18:21.957 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 2.2445ms
2024-12-09 14:18:21.959 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 14:18:21.961 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:18:21.961 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:18:21.962 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:18:21.964 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 14:18:21.964 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:18:21.965 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:18:21.966 +05:30 [INF] Received isArchive value: False
2024-12-09 14:18:21.974 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:18:21.979 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:18:21.985 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:18:21.988 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 14:18:21.989 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:18:21.989 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:18:21.990 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 26.4286ms
2024-12-09 14:18:21.991 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:18:21.992 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 32.647ms
2024-12-09 14:18:23.384 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:18:23.386 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:18:23.387 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6831ms
2024-12-09 14:18:23.389 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:18:23.391 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:18:23.392 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:18:23.393 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:18:23.395 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:18:23.396 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:18:23.397 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:18:23.397 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:18:23.398 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:18:23.399 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:18:23.404 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:18:23.405 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:18:23.407 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:18:23.408 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:18:23.409 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:18:23.409 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:18:23.410 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.9729ms
2024-12-09 14:18:23.410 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:18:23.411 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.5106ms
2024-12-09 14:18:25.622 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 14:18:25.624 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:18:25.625 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:18:25.626 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:18:25.628 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 14:18:25.628 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:18:25.629 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:18:25.630 +05:30 [INF] Received isArchive value: True
2024-12-09 14:18:25.633 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:18:25.639 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:18:25.642 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:18:25.643 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 14:18:25.643 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:18:25.644 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:18:25.644 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 16.7324ms
2024-12-09 14:18:25.645 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:18:25.646 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 24.5488ms
2024-12-09 14:18:26.900 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:18:26.903 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:18:26.905 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:18:26.907 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:18:26.909 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:18:26.911 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:18:26.912 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:18:26.914 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:18:26.917 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:18:26.918 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:18:26.919 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:18:26.920 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:18:26.924 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:18:26.924 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:18:26.925 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:18:26.925 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:18:26.926 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.325ms
2024-12-09 14:18:26.926 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:18:26.927 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.6068ms
2024-12-09 14:19:07.333 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:19:07.340 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:19:07.340 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.1914ms
2024-12-09 14:19:07.342 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:19:07.350 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:19:07.352 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:19:07.353 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:19:07.355 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:19:07.356 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:19:07.361 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:19:07.362 +05:30 [INF] Deserializing the notes
2024-12-09 14:19:07.363 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:19:07.364 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.1611ms
2024-12-09 14:19:07.365 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:19:07.366 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.3114ms
2024-12-09 14:19:16.025 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:19:16.027 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:19:16.028 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0805ms
2024-12-09 14:19:16.030 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:19:16.032 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:19:16.034 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:19:16.034 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:19:16.035 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:19:16.036 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:19:16.038 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:19:16.039 +05:30 [INF] Deserializing the notes
2024-12-09 14:19:16.040 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:19:16.042 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.7397ms
2024-12-09 14:19:16.048 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:19:16.049 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.3098ms
2024-12-09 14:19:17.483 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:19:17.485 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:19:17.486 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:19:17.487 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:19:17.489 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:19:17.492 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:19:17.493 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:19:17.494 +05:30 [INF] Deserializing the notes
2024-12-09 14:19:17.494 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:19:17.495 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.6702ms
2024-12-09 14:19:17.496 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:19:17.497 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.6523ms
2024-12-09 14:19:21.160 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:19:21.163 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:19:21.164 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9829ms
2024-12-09 14:19:21.165 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:19:21.167 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:19:21.168 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:19:21.169 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:19:21.170 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:19:21.175 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:19:21.177 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:19:21.178 +05:30 [INF] Deserializing the notes
2024-12-09 14:19:21.178 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:19:21.179 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.3534ms
2024-12-09 14:19:21.180 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:19:21.181 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.6938ms
2024-12-09 14:19:25.090 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:19:25.092 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:19:25.093 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:19:25.093 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:19:25.095 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:19:25.097 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:19:25.098 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:19:25.099 +05:30 [INF] Deserializing the notes
2024-12-09 14:19:25.099 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:19:25.101 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.7967ms
2024-12-09 14:19:25.102 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:19:25.108 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.5215ms
2024-12-09 14:20:27.156 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:20:27.166 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:20:27.168 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.4391ms
2024-12-09 14:20:27.170 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:20:27.172 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:20:27.175 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:20:27.176 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:20:27.180 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:20:27.181 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:20:27.182 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:20:27.183 +05:30 [INF] Deserializing the notes
2024-12-09 14:20:27.184 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:20:27.186 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.1895ms
2024-12-09 14:20:27.187 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:20:27.188 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.9905ms
2024-12-09 14:20:27.288 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:20:27.291 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:20:27.291 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:20:27.292 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:20:27.293 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:20:27.294 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:20:27.295 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:20:27.296 +05:30 [INF] Deserializing the notes
2024-12-09 14:20:27.297 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:20:27.299 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.953ms
2024-12-09 14:20:27.300 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:20:27.301 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.8069ms
2024-12-09 14:20:27.308 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:20:27.313 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:20:27.314 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:20:27.315 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:20:27.319 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:20:27.321 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:20:27.322 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:20:27.323 +05:30 [INF] Deserializing the notes
2024-12-09 14:20:27.324 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:20:27.326 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.2556ms
2024-12-09 14:20:27.327 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:20:27.328 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.7286ms
2024-12-09 14:20:48.680 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:20:48.686 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:20:48.687 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.3137ms
2024-12-09 14:20:48.699 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:20:48.704 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:20:48.705 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:20:48.707 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:20:48.709 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:20:48.710 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:20:48.711 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:20:48.713 +05:30 [INF] Deserializing the notes
2024-12-09 14:20:48.714 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:20:48.715 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.7989ms
2024-12-09 14:20:48.716 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:20:48.717 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.7364ms
2024-12-09 14:20:48.721 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:20:48.725 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:20:48.726 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:20:48.727 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:20:48.729 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:20:48.730 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:20:48.731 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:20:48.732 +05:30 [INF] Deserializing the notes
2024-12-09 14:20:48.732 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:20:48.733 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.655ms
2024-12-09 14:20:48.734 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:20:48.734 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.4293ms
2024-12-09 14:21:07.343 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:21:07.345 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:07.346 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.977ms
2024-12-09 14:21:07.348 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:07.356 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:07.366 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:07.392 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:07.405 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:07.423 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:07.431 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:07.432 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:07.438 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:07.444 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 38.8043ms
2024-12-09 14:21:07.445 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:07.452 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:07.456 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:07.457 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 109.3475ms
2024-12-09 14:21:07.458 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:07.462 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:07.464 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:07.471 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:07.473 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:07.475 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:07.476 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:07.477 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.1367ms
2024-12-09 14:21:07.480 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:07.482 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.4298ms
2024-12-09 14:21:12.138 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:12.141 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:12.142 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:12.143 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:12.145 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:12.147 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:12.149 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:12.149 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:12.150 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:12.153 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.0002ms
2024-12-09 14:21:12.154 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:12.155 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.3941ms
2024-12-09 14:21:13.179 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:21:13.181 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:13.183 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4409ms
2024-12-09 14:21:13.186 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:13.189 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:13.189 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:13.190 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:13.192 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:13.193 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:13.195 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:13.197 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:13.198 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:13.199 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.7033ms
2024-12-09 14:21:13.200 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:13.201 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.4534ms
2024-12-09 14:21:17.579 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:21:17.581 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:17.582 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 2.5474ms
2024-12-09 14:21:17.584 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:21:17.585 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:17.586 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:21:17.587 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:17.588 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:21:17.589 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:21:17.595 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:21:17.600 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:21:17.607 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:21:17.609 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:21:17.610 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:21:17.610 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:17.611 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 23.1508ms
2024-12-09 14:21:17.611 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:21:17.612 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 28.2366ms
2024-12-09 14:21:21.660 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:21:21.663 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:21.671 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.4951ms
2024-12-09 14:21:21.673 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:21.678 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:21.682 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:21.682 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:21.683 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:21.684 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:21.685 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:21:21.685 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:21:21.686 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:21:21.687 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:21:21.688 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:21:21.690 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:21:21.695 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:21:21.696 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:21:21.697 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:21:21.697 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:21.698 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.6364ms
2024-12-09 14:21:21.698 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:21.699 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.9628ms
2024-12-09 14:21:25.090 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 14:21:25.092 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:25.093 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 2.3735ms
2024-12-09 14:21:25.094 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 4
2024-12-09 14:21:25.096 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:25.097 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:21:25.097 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:25.099 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 14:21:25.099 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 14:21:25.101 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:21:25.104 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:21:25.108 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:21:25.112 +05:30 [INF] Note with ID: 1026 trash status updated to true
2024-12-09 14:21:25.113 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 14:21:25.114 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:25.114 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 15.5465ms
2024-12-09 14:21:25.115 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:21:25.115 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 21.5034ms
2024-12-09 14:21:26.487 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:26.489 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:26.491 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:26.491 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:26.493 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:26.494 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:26.495 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:21:26.496 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:21:26.497 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:21:26.499 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:21:26.500 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:21:26.501 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:21:26.503 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:21:26.503 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:21:26.504 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:21:26.505 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:26.505 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.9487ms
2024-12-09 14:21:26.511 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:26.512 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.8335ms
2024-12-09 14:21:28.103 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:21:28.108 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:28.109 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3601ms
2024-12-09 14:21:28.110 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:28.113 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:28.114 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:28.115 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:28.116 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:28.117 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:28.118 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:28.119 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:28.119 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:28.120 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0269ms
2024-12-09 14:21:28.124 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:28.126 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.6229ms
2024-12-09 14:21:29.623 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:29.626 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:29.629 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:29.631 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:29.633 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:29.634 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:29.634 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:29.635 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:29.636 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:29.637 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4211ms
2024-12-09 14:21:29.640 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:29.642 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.865ms
2024-12-09 14:21:31.047 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:31.050 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:31.052 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:31.053 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:31.055 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:31.055 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:31.056 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:31.057 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:31.057 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:31.058 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.6458ms
2024-12-09 14:21:31.062 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:31.066 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.0631ms
2024-12-09 14:21:32.759 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:32.761 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:32.762 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:32.763 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:32.766 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:32.768 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:32.769 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:32.770 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:32.771 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:32.773 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.028ms
2024-12-09 14:21:32.773 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:32.779 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.6965ms
2024-12-09 14:21:36.166 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:21:36.168 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:36.169 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0957ms
2024-12-09 14:21:36.171 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:36.173 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:36.174 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:36.175 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:36.177 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:36.179 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:36.179 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:36.180 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:36.180 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:36.181 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7623ms
2024-12-09 14:21:36.182 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:36.185 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.2316ms
2024-12-09 14:21:39.123 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:21:39.127 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:39.128 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 5.2277ms
2024-12-09 14:21:39.129 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:21:39.132 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:39.134 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:21:39.135 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:39.140 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:21:39.141 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:21:39.142 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:21:39.145 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:21:39.148 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:21:39.151 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:21:39.152 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:21:39.153 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:39.153 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 13.8ms
2024-12-09 14:21:39.154 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:21:39.155 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 25.5592ms
2024-12-09 14:21:40.640 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 14:21:40.644 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:40.644 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 4.9901ms
2024-12-09 14:21:40.646 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 5
2024-12-09 14:21:40.647 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:40.648 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:21:40.649 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:40.650 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 14:21:40.650 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 14:21:40.653 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:21:40.658 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:21:40.661 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:21:40.663 +05:30 [INF] Note with ID: 1026 trash status updated to false
2024-12-09 14:21:40.664 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 14:21:40.664 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:40.665 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 14.9725ms
2024-12-09 14:21:40.666 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:21:40.669 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 23.7796ms
2024-12-09 14:21:41.908 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:21:41.911 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:41.912 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.3215ms
2024-12-09 14:21:41.919 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:41.927 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:41.927 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:41.929 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:41.930 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:41.931 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:41.932 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:21:41.932 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:21:41.933 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:21:41.934 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:21:41.935 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:21:41.936 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:21:41.938 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:21:41.943 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:21:41.944 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:21:41.944 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:41.945 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.0611ms
2024-12-09 14:21:41.946 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:41.946 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.0215ms
2024-12-09 14:21:43.198 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:43.204 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:43.208 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:43.212 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:43.216 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:43.217 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:43.218 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:43.219 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:43.219 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:43.220 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.64ms
2024-12-09 14:21:43.221 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:43.222 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.501ms
2024-12-09 14:21:45.898 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:45.901 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:45.903 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:45.905 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:45.908 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:45.910 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:45.911 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:45.911 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:45.912 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:45.913 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2053ms
2024-12-09 14:21:45.914 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:45.915 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.7348ms
2024-12-09 14:21:47.411 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:21:47.413 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:47.413 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 2.8478ms
2024-12-09 14:21:47.415 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 14:21:47.417 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:47.418 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:21:47.419 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:47.421 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 14:21:47.425 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:21:47.427 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:21:47.428 +05:30 [INF] Received isArchive value: False
2024-12-09 14:21:47.431 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:21:47.437 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:21:47.442 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:21:47.444 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 14:21:47.444 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:21:47.445 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:47.446 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 24.8432ms
2024-12-09 14:21:47.450 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:21:47.451 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 36.0931ms
2024-12-09 14:21:49.346 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:21:49.348 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:49.350 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7779ms
2024-12-09 14:21:49.352 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:49.357 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:49.357 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:49.358 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:49.359 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:49.360 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:49.361 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:21:49.362 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:21:49.362 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:21:49.364 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:21:49.365 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:21:49.366 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:21:49.368 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:21:49.368 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:21:49.369 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:21:49.374 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:49.376 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.4949ms
2024-12-09 14:21:49.376 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:49.377 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.0985ms
2024-12-09 14:21:52.916 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:21:52.918 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:52.919 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 3.2759ms
2024-12-09 14:21:52.921 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 14:21:52.923 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:52.924 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:21:52.925 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:52.926 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 14:21:52.927 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:21:52.928 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:21:52.928 +05:30 [INF] Received isArchive value: True
2024-12-09 14:21:52.930 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:21:52.938 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:21:52.941 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:21:52.943 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 14:21:52.944 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:21:52.944 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:52.945 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 18.9631ms
2024-12-09 14:21:52.946 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:21:52.946 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 25.125ms
2024-12-09 14:21:54.113 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:54.116 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:54.117 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:54.119 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:54.121 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:54.123 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:54.124 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:21:54.124 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:21:54.125 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:21:54.126 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:21:54.131 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:21:54.133 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:21:54.135 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:21:54.135 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:21:54.136 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:21:54.137 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:54.138 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.2843ms
2024-12-09 14:21:54.139 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:54.140 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.4088ms
2024-12-09 14:21:55.275 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:21:55.276 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:55.277 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.753ms
2024-12-09 14:21:55.285 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:55.287 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:55.288 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:55.289 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:55.291 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:55.293 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:55.296 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:55.298 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:55.299 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:55.300 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.5635ms
2024-12-09 14:21:55.301 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:55.301 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:55.303 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:55.304 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.1103ms
2024-12-09 14:21:55.305 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:55.307 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:55.308 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:55.309 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:55.311 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:55.313 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:55.314 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:55.314 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.6538ms
2024-12-09 14:21:55.315 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:55.316 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.8617ms
2024-12-09 14:21:57.525 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:57.527 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:57.528 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:57.530 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:57.532 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:57.534 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:57.535 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:57.539 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:57.542 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:57.543 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6632ms
2024-12-09 14:21:57.543 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:57.544 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.1931ms
2024-12-09 14:21:58.634 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:58.636 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:58.637 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:58.638 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:58.640 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:58.641 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:58.642 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:58.642 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:58.643 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:58.644 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4031ms
2024-12-09 14:21:58.645 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:58.646 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.9152ms
2024-12-09 14:21:59.841 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:21:59.844 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:21:59.846 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:59.847 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:21:59.849 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:21:59.851 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:21:59.852 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:21:59.853 +05:30 [INF] Deserializing the notes
2024-12-09 14:21:59.854 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:21:59.855 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.9717ms
2024-12-09 14:21:59.858 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:21:59.860 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.7269ms
2024-12-09 14:22:01.133 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:22:01.137 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:01.138 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 4.6655ms
2024-12-09 14:22:01.139 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 14:22:01.142 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:01.143 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:22:01.143 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:01.149 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 14:22:01.149 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:22:01.150 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:22:01.151 +05:30 [INF] Received isArchive value: False
2024-12-09 14:22:01.153 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:22:01.155 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:22:01.158 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:22:01.165 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 14:22:01.166 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:22:01.167 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:01.167 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 18.9425ms
2024-12-09 14:22:01.168 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:22:01.168 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 29.4425ms
2024-12-09 14:22:02.542 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:22:02.544 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:02.545 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6911ms
2024-12-09 14:22:02.546 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:02.548 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:02.549 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:02.550 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:02.552 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:02.553 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:02.554 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:22:02.555 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:22:02.555 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:22:02.557 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:22:02.558 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:22:02.559 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:22:02.561 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:22:02.562 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:22:02.562 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:22:02.563 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:02.564 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.9875ms
2024-12-09 14:22:02.570 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:02.571 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.109ms
2024-12-09 14:22:29.107 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:22:29.111 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:29.112 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 4.9957ms
2024-12-09 14:22:29.113 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:22:29.116 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:29.117 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:22:29.119 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:29.122 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:22:29.123 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:22:29.128 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:22:29.136 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:22:29.141 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:22:29.144 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:22:29.145 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:22:29.146 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:29.147 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 25.3098ms
2024-12-09 14:22:29.148 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:22:29.148 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 35.2355ms
2024-12-09 14:22:30.497 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:22:30.499 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:30.500 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.5112ms
2024-12-09 14:22:30.502 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:30.504 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:30.505 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:30.505 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:30.507 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:30.508 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:30.509 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:22:30.510 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:22:30.512 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:22:30.514 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:22:30.519 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:22:30.521 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:22:30.523 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:22:30.524 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:22:30.525 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:22:30.526 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:30.527 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.2476ms
2024-12-09 14:22:30.528 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:30.528 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.8658ms
2024-12-09 14:22:32.289 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:22:32.293 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:32.294 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:22:32.295 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:32.296 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:22:32.297 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:22:32.299 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:22:32.310 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:22:32.314 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:22:32.318 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:22:32.318 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:22:32.319 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:32.320 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 23.3807ms
2024-12-09 14:22:32.320 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:22:32.321 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 32.5705ms
2024-12-09 14:22:33.458 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:33.459 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:33.460 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:33.461 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:33.462 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:33.463 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:33.464 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:22:33.465 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:22:33.466 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:22:33.467 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:22:33.469 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:22:33.470 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:22:33.476 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:22:33.477 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:22:33.477 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:22:33.478 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:33.478 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.3112ms
2024-12-09 14:22:33.479 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:33.479 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.018ms
2024-12-09 14:22:34.467 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:34.472 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:34.473 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:34.476 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:34.478 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:34.480 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:34.481 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:22:34.481 +05:30 [INF] Deserializing the notes
2024-12-09 14:22:34.482 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:34.483 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2842ms
2024-12-09 14:22:34.483 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:34.486 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.9174ms
2024-12-09 14:22:36.262 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:22:36.264 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:36.265 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8646ms
2024-12-09 14:22:36.266 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:36.269 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:36.269 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:36.270 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:36.272 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:36.273 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:36.274 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:22:36.275 +05:30 [INF] Deserializing the notes
2024-12-09 14:22:36.278 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:36.281 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.3006ms
2024-12-09 14:22:36.281 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:36.282 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.8752ms
2024-12-09 14:22:38.208 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:38.211 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:38.212 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:38.212 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:38.215 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:38.216 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:38.217 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:22:38.217 +05:30 [INF] Deserializing the notes
2024-12-09 14:22:38.218 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:38.219 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.035ms
2024-12-09 14:22:38.224 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:38.227 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.6107ms
2024-12-09 14:22:42.548 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 14:22:42.551 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:42.552 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 3.6186ms
2024-12-09 14:22:42.554 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 4
2024-12-09 14:22:42.556 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:42.557 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:22:42.557 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:42.558 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 14:22:42.559 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 14:22:42.561 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:22:42.563 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:22:42.566 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:22:42.571 +05:30 [INF] Note with ID: 1026 trash status updated to true
2024-12-09 14:22:42.571 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 14:22:42.572 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:42.572 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 14.1966ms
2024-12-09 14:22:42.573 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:22:42.574 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 20.0816ms
2024-12-09 14:22:44.194 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:22:44.196 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:44.197 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.4322ms
2024-12-09 14:22:44.199 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:44.200 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:44.202 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:44.203 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:44.205 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:44.206 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:44.208 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:22:44.211 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:22:44.211 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:22:44.212 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:22:44.214 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:22:44.215 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:22:44.216 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:22:44.217 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:22:44.218 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:22:44.222 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:44.224 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.9075ms
2024-12-09 14:22:44.224 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:44.225 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.3071ms
2024-12-09 14:22:45.117 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:45.119 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:45.120 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:45.120 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:45.122 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:45.125 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:45.126 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:22:45.128 +05:30 [INF] Deserializing the notes
2024-12-09 14:22:45.132 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:45.134 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.032ms
2024-12-09 14:22:45.135 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:45.136 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:45.136 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.4858ms
2024-12-09 14:22:45.140 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:45.146 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:45.146 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:45.148 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:45.149 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:45.149 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:22:45.150 +05:30 [INF] Deserializing the notes
2024-12-09 14:22:45.151 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:45.153 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2166ms
2024-12-09 14:22:45.153 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:45.154 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.4478ms
2024-12-09 14:22:47.484 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:47.487 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:47.488 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:47.489 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:47.491 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:47.492 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:47.492 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:22:47.493 +05:30 [INF] Deserializing the notes
2024-12-09 14:22:47.494 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:47.495 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9479ms
2024-12-09 14:22:47.495 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:47.496 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.1801ms
2024-12-09 14:22:49.233 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 14:22:49.238 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:49.238 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 5.0624ms
2024-12-09 14:22:49.239 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 5
2024-12-09 14:22:49.241 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:49.241 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:22:49.242 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:49.243 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 14:22:49.243 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 14:22:49.246 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:22:49.248 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:22:49.257 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:22:49.258 +05:30 [INF] Note with ID: 1026 trash status updated to false
2024-12-09 14:22:49.259 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 14:22:49.260 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:49.260 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 17.6ms
2024-12-09 14:22:49.264 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:22:49.266 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 26.7061ms
2024-12-09 14:22:50.387 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:22:50.389 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:50.390 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9867ms
2024-12-09 14:22:50.391 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:50.394 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:50.394 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:50.395 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:50.396 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:50.397 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:50.398 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:22:50.399 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:22:50.403 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:22:50.408 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:22:50.409 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:22:50.410 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:22:50.411 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:22:50.412 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:22:50.413 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:22:50.413 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:50.414 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.1811ms
2024-12-09 14:22:50.419 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:50.420 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.5165ms
2024-12-09 14:22:51.964 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:51.968 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:51.970 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:51.972 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:51.976 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:51.977 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:51.978 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:22:51.981 +05:30 [INF] Deserializing the notes
2024-12-09 14:22:51.985 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:51.986 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.4383ms
2024-12-09 14:22:51.986 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:51.987 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.7688ms
2024-12-09 14:22:55.058 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:55.061 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:55.063 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:55.064 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:55.067 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:55.069 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:55.070 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:22:55.070 +05:30 [INF] Deserializing the notes
2024-12-09 14:22:55.071 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:55.072 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.3725ms
2024-12-09 14:22:55.072 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:55.075 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.3224ms
2024-12-09 14:22:56.281 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:22:56.283 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:56.284 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.7303ms
2024-12-09 14:22:56.287 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:56.288 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:56.289 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:56.289 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:56.291 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:56.293 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:56.297 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:22:56.298 +05:30 [INF] Deserializing the notes
2024-12-09 14:22:56.298 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:56.300 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.7957ms
2024-12-09 14:22:56.301 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:56.301 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7601ms
2024-12-09 14:22:57.532 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:22:57.537 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:57.538 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 6.8084ms
2024-12-09 14:22:57.540 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 14:22:57.543 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:57.544 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:22:57.545 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:57.548 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 14:22:57.548 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:22:57.549 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:22:57.550 +05:30 [INF] Received isArchive value: True
2024-12-09 14:22:57.552 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:22:57.558 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:22:57.562 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:22:57.564 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 14:22:57.564 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:22:57.565 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:57.565 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 18.1095ms
2024-12-09 14:22:57.566 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:22:57.567 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 26.4608ms
2024-12-09 14:22:59.484 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:22:59.486 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:22:59.487 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:59.488 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:22:59.490 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:22:59.491 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:22:59.492 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:22:59.493 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:22:59.494 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:22:59.496 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:22:59.497 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:22:59.500 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:22:59.505 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:22:59.505 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:22:59.506 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:22:59.507 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:22:59.507 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.0428ms
2024-12-09 14:22:59.508 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:22:59.509 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.5426ms
2024-12-09 14:23:01.612 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:23:01.616 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:01.616 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 5.212ms
2024-12-09 14:23:01.618 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:23:01.619 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:01.620 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:23:01.620 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:01.621 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:23:01.622 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:23:01.624 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:23:01.627 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:23:01.633 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:23:01.634 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:23:01.636 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:23:01.636 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:01.637 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 15.4836ms
2024-12-09 14:23:01.638 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:23:01.638 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 20.3742ms
2024-12-09 14:23:06.946 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:23:06.949 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:06.949 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 3.6768ms
2024-12-09 14:23:06.951 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:23:06.953 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:06.953 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:23:06.954 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:06.955 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:23:06.956 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:23:06.958 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:23:06.960 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:23:06.966 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:23:06.966 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:23:06.967 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:06.967 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 12.4828ms
2024-12-09 14:23:06.968 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:23:06.969 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 18.2511ms
2024-12-09 14:23:08.691 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:23:08.692 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:08.694 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0743ms
2024-12-09 14:23:08.696 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:08.698 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:08.698 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:08.699 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:08.701 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:08.704 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:08.706 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:23:08.707 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:23:08.708 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:23:08.709 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:23:08.712 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:23:08.713 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:23:08.715 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:23:08.716 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:23:08.716 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:23:08.717 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:08.718 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.1361ms
2024-12-09 14:23:08.724 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:08.725 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.9387ms
2024-12-09 14:23:09.668 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:09.670 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:09.672 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:09.673 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:09.675 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:09.677 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:09.681 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:09.683 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:09.684 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:09.685 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.3871ms
2024-12-09 14:23:09.685 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:09.686 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.3055ms
2024-12-09 14:23:11.268 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:11.271 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:11.273 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:11.274 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:11.275 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:11.278 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:11.279 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:11.279 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:11.280 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:11.281 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.1825ms
2024-12-09 14:23:11.285 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:11.287 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.8232ms
2024-12-09 14:23:12.501 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:12.502 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:12.503 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:12.504 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:12.505 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:12.506 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:12.507 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:12.508 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:12.509 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:12.511 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.6074ms
2024-12-09 14:23:12.512 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:12.513 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.1228ms
2024-12-09 14:23:14.405 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:23:14.406 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:14.407 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 2.6862ms
2024-12-09 14:23:14.409 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:23:14.411 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:14.412 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:23:14.413 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:14.414 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:23:14.414 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:23:14.420 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:23:14.429 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:23:14.433 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:23:14.435 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:23:14.436 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:23:14.437 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:14.441 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 27.1118ms
2024-12-09 14:23:14.443 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:23:14.444 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 34.8582ms
2024-12-09 14:23:16.444 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:23:16.445 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:16.446 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8198ms
2024-12-09 14:23:16.448 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:16.450 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:16.451 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:16.451 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:16.453 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:16.454 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:16.455 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:23:16.455 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:23:16.456 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:23:16.460 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:23:16.462 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:23:16.463 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:23:16.465 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:23:16.466 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:23:16.466 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:23:16.467 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:16.473 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.2132ms
2024-12-09 14:23:16.474 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:16.475 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.1077ms
2024-12-09 14:23:18.545 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:18.550 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:18.551 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:18.552 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:18.554 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:18.555 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:18.556 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:18.557 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:18.559 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:18.563 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.2116ms
2024-12-09 14:23:18.566 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:18.568 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.3251ms
2024-12-09 14:23:19.366 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:19.369 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:19.370 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:19.371 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:19.373 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:19.374 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:19.375 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:19.376 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:19.377 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:19.379 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.7952ms
2024-12-09 14:23:19.379 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:19.380 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.0488ms
2024-12-09 14:23:20.346 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:20.347 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:20.348 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:20.349 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:20.352 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:20.352 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:20.353 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:20.354 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:20.354 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:20.362 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6331ms
2024-12-09 14:23:20.363 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:20.364 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.0773ms
2024-12-09 14:23:21.872 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:23:21.877 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:21.877 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 5.9208ms
2024-12-09 14:23:21.879 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 14:23:21.881 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:21.882 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:23:21.883 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:21.885 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 14:23:21.886 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:23:21.886 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:23:21.887 +05:30 [INF] Received isArchive value: False
2024-12-09 14:23:21.891 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:23:21.896 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:23:21.899 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:23:21.905 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 14:23:21.905 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:23:21.906 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:21.907 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 21.8872ms
2024-12-09 14:23:21.908 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:23:21.908 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 29.8433ms
2024-12-09 14:23:24.468 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:23:24.471 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:24.472 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7983ms
2024-12-09 14:23:24.474 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:24.476 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:24.477 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:24.479 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:24.483 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:24.484 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:24.485 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:23:24.485 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:23:24.486 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:23:24.487 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:23:24.489 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:23:24.491 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:23:24.493 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:23:24.493 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:23:24.494 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:23:24.495 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:24.495 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.7748ms
2024-12-09 14:23:24.496 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:24.497 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.0122ms
2024-12-09 14:23:25.821 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:25.823 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:25.824 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:25.825 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:25.827 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:25.827 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:25.829 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:25.829 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:25.830 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:25.832 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5733ms
2024-12-09 14:23:25.833 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:25.833 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.4964ms
2024-12-09 14:23:27.123 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:27.125 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:27.126 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:27.126 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:27.128 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:27.130 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:27.131 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:27.132 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:27.133 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:27.133 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.8467ms
2024-12-09 14:23:27.134 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:27.135 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.7958ms
2024-12-09 14:23:28.526 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:28.527 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:28.528 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:28.529 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:28.530 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:28.532 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:28.534 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:28.535 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:28.536 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:28.537 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.3439ms
2024-12-09 14:23:28.538 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:28.539 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.5531ms
2024-12-09 14:23:31.419 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:23:31.422 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:31.423 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 3.8467ms
2024-12-09 14:23:31.424 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 14:23:31.427 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:31.427 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:23:31.428 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:31.430 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 14:23:31.430 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:23:31.431 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:23:31.432 +05:30 [INF] Received isArchive value: True
2024-12-09 14:23:31.433 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:23:31.436 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:23:31.441 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:23:31.446 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 14:23:31.446 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:23:31.447 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:31.448 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 17.8867ms
2024-12-09 14:23:31.448 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:23:31.449 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 24.8058ms
2024-12-09 14:23:34.557 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:23:34.559 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:34.560 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9272ms
2024-12-09 14:23:34.561 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:34.563 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:34.564 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:34.565 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:34.567 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:34.568 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:34.569 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:23:34.569 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:23:34.571 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:23:34.573 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:23:34.574 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:23:34.575 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:23:34.577 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:23:34.577 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:23:34.578 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:23:34.578 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:34.579 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.6265ms
2024-12-09 14:23:34.585 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:34.586 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.0735ms
2024-12-09 14:23:37.170 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:23:37.174 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:37.174 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 5.089ms
2024-12-09 14:23:37.176 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:23:37.177 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:37.177 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:23:37.178 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:37.179 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:23:37.180 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:23:37.182 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:23:37.189 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:23:37.193 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:23:37.199 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:23:37.200 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:23:37.200 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:37.201 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 22.0935ms
2024-12-09 14:23:37.202 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:23:37.203 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 27.1291ms
2024-12-09 14:23:38.681 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:38.683 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:38.685 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:38.686 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:38.687 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:38.689 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:38.690 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:23:38.690 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:23:38.691 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:23:38.692 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:23:38.697 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:23:38.698 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:23:38.700 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:23:38.701 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:23:38.702 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:23:38.702 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:38.703 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.5858ms
2024-12-09 14:23:38.705 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:38.705 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.7583ms
2024-12-09 14:23:40.057 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:23:40.059 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:40.060 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.5594ms
2024-12-09 14:23:40.061 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:40.063 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:40.064 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:40.065 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:40.067 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:40.072 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:40.073 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:40.073 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:40.074 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:40.075 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.4145ms
2024-12-09 14:23:40.075 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:40.076 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7879ms
2024-12-09 14:23:47.056 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:23:47.058 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:47.058 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8927ms
2024-12-09 14:23:47.060 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:47.062 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:47.062 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:47.063 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:47.066 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:47.067 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:47.068 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:47.068 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:47.069 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:47.069 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.997ms
2024-12-09 14:23:47.073 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:47.075 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7544ms
2024-12-09 14:23:48.922 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:48.924 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:48.925 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:48.926 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:48.928 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:48.929 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:48.930 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:48.932 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:48.933 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:48.934 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.0413ms
2024-12-09 14:23:48.935 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:48.935 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.994ms
2024-12-09 14:23:49.820 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:49.822 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:49.824 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:49.824 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:49.827 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:49.828 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:49.832 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:49.834 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:49.835 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:49.835 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.1226ms
2024-12-09 14:23:49.836 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:49.837 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.8982ms
2024-12-09 14:23:51.079 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:23:51.084 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:51.086 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 6.6848ms
2024-12-09 14:23:51.087 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:23:51.090 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:51.093 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:23:51.094 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:51.098 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:23:51.098 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:23:51.099 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:23:51.102 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:23:51.104 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:23:51.105 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:23:51.106 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:23:51.106 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:51.107 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 9.6191ms
2024-12-09 14:23:51.107 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:23:51.108 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 21.058ms
2024-12-09 14:23:52.238 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:23:52.240 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:52.241 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.979ms
2024-12-09 14:23:52.242 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:52.244 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:52.245 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:52.246 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:52.248 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:52.249 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:52.249 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:23:52.250 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:23:52.250 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:23:52.252 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:23:52.253 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:23:52.254 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:23:52.256 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:23:52.256 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:23:52.257 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:23:52.257 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:52.258 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.3879ms
2024-12-09 14:23:52.264 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:52.265 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.753ms
2024-12-09 14:23:58.243 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:23:58.246 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:58.247 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4291ms
2024-12-09 14:23:58.252 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:58.256 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:58.257 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:58.262 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:58.264 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:58.265 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:58.266 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:58.267 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:58.268 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:58.268 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0522ms
2024-12-09 14:23:58.269 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:58.269 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:23:58.272 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.0793ms
2024-12-09 14:23:58.276 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:23:58.278 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:58.279 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:23:58.280 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:23:58.280 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:23:58.281 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:23:58.282 +05:30 [INF] Deserializing the notes
2024-12-09 14:23:58.282 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:23:58.284 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2442ms
2024-12-09 14:23:58.285 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:23:58.286 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.3586ms
2024-12-09 14:24:02.640 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:02.643 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:02.644 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:02.646 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:02.647 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:02.649 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:02.650 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:02.650 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:02.651 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:02.652 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9335ms
2024-12-09 14:24:02.652 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:02.653 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.58ms
2024-12-09 14:24:04.116 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:24:04.118 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:04.119 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.65ms
2024-12-09 14:24:04.121 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:04.123 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:04.124 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:04.125 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:04.130 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:04.132 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:04.133 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:04.134 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:04.134 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:04.135 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5549ms
2024-12-09 14:24:04.136 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:04.137 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.0915ms
2024-12-09 14:24:05.079 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:05.082 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:05.083 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:05.084 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:05.086 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:05.087 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:05.088 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:05.088 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:05.089 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:05.094 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.2194ms
2024-12-09 14:24:05.096 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:05.097 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.615ms
2024-12-09 14:24:05.865 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:05.868 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:05.869 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:05.870 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:05.871 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:05.872 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:05.873 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:05.874 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:05.874 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:05.876 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1784ms
2024-12-09 14:24:05.880 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:05.882 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.5568ms
2024-12-09 14:24:06.714 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:06.716 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:06.718 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:06.719 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:06.720 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:06.721 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:06.722 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:06.723 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:06.724 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:06.728 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.7598ms
2024-12-09 14:24:06.731 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:06.731 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.1567ms
2024-12-09 14:24:23.718 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:24:23.722 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:23.723 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 5.4771ms
2024-12-09 14:24:23.724 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:24:23.726 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:23.727 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:24:23.728 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:23.730 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:24:23.733 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:24:23.739 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:24:23.743 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:24:23.747 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:24:23.753 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:24:23.754 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:24:23.755 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:23.755 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 25.6798ms
2024-12-09 14:24:23.756 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:24:23.757 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 32.6131ms
2024-12-09 14:24:25.412 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:24:25.415 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:25.418 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2453ms
2024-12-09 14:24:25.419 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:25.422 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:25.423 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:25.423 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:25.425 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:25.426 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:25.426 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:24:25.429 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:24:25.431 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:24:25.433 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:24:25.435 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:24:25.437 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:24:25.438 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:24:25.439 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:24:25.440 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:24:25.440 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:25.441 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.3175ms
2024-12-09 14:24:25.441 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:25.446 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.4694ms
2024-12-09 14:24:26.534 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:26.537 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:26.537 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:26.538 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:26.541 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:26.542 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:26.543 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:26.543 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:26.544 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:26.545 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4183ms
2024-12-09 14:24:26.549 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:26.551 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.5695ms
2024-12-09 14:24:27.721 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:27.722 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:27.723 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:27.724 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:27.725 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:27.727 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:27.728 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:27.729 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:27.729 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:27.730 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8865ms
2024-12-09 14:24:27.731 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:27.732 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.6415ms
2024-12-09 14:24:30.172 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:30.173 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:30.174 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:30.175 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:30.176 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:30.178 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:30.180 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:30.180 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:30.181 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:30.183 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.0268ms
2024-12-09 14:24:30.187 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:30.189 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.4667ms
2024-12-09 14:24:31.622 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:24:31.624 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:31.628 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.2623ms
2024-12-09 14:24:31.630 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:31.632 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:31.633 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:31.633 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:31.634 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:31.635 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:31.636 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:31.636 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:31.637 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:31.637 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.4768ms
2024-12-09 14:24:31.638 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:31.639 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.9758ms
2024-12-09 14:24:34.085 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:34.087 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:34.087 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:34.088 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:34.089 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:34.091 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:34.092 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:34.092 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:34.093 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:34.094 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9227ms
2024-12-09 14:24:34.095 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:34.096 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.4727ms
2024-12-09 14:24:35.190 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:35.193 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:35.194 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:35.194 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:35.196 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:35.196 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:35.198 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:35.199 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:35.200 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:35.201 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2382ms
2024-12-09 14:24:35.202 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:35.202 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.4601ms
2024-12-09 14:24:36.818 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:24:36.821 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:36.822 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.4872ms
2024-12-09 14:24:36.823 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:36.825 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:36.826 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:36.827 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:36.828 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:36.829 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:36.833 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:36.837 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:36.838 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:36.838 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.3879ms
2024-12-09 14:24:36.839 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:36.839 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.4496ms
2024-12-09 14:24:38.083 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:38.085 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:38.086 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:38.086 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:38.088 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:38.090 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:38.091 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:38.091 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:38.092 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:38.093 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.4499ms
2024-12-09 14:24:38.094 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:38.094 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.6791ms
2024-12-09 14:24:39.557 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:24:39.558 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:39.559 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 1.7006ms
2024-12-09 14:24:39.560 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:24:39.562 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:39.563 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:24:39.564 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:39.566 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:24:39.566 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:24:39.568 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:24:39.570 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:24:39.574 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:24:39.576 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:24:39.577 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:24:39.577 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:39.578 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 12.4977ms
2024-12-09 14:24:39.584 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:24:39.584 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 24.8981ms
2024-12-09 14:24:41.122 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:41.126 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:41.126 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:41.127 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:41.129 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:41.131 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:41.132 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:24:41.133 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:24:41.133 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:24:41.135 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:24:41.137 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:24:41.138 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:24:41.139 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:24:41.140 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:24:41.141 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:24:41.141 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:41.142 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.2572ms
2024-12-09 14:24:41.142 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:41.148 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.0344ms
2024-12-09 14:24:43.552 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:24:43.554 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:43.557 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.7287ms
2024-12-09 14:24:43.558 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:43.560 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:43.561 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:43.562 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:43.564 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:43.565 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:43.568 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:43.570 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:43.571 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:43.572 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.7171ms
2024-12-09 14:24:43.573 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:43.573 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.9328ms
2024-12-09 14:24:47.792 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:24:47.796 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:47.797 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 5.7721ms
2024-12-09 14:24:47.799 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:24:47.800 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:47.801 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:24:47.801 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:47.803 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:24:47.804 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:24:47.806 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:24:47.808 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:24:47.812 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:24:47.816 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:24:47.817 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:24:47.817 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:47.818 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 14.8516ms
2024-12-09 14:24:47.819 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:24:47.819 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 20.9132ms
2024-12-09 14:24:49.554 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:24:49.556 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:49.557 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.7044ms
2024-12-09 14:24:49.559 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:49.561 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:49.562 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:49.563 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:49.565 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:49.566 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:49.567 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:24:49.567 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:24:49.570 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:24:49.573 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:24:49.574 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:24:49.576 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:24:49.578 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:24:49.579 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:24:49.580 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:24:49.581 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:49.581 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.5486ms
2024-12-09 14:24:49.582 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:49.583 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.2368ms
2024-12-09 14:24:50.477 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:50.481 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:50.482 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:50.483 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:50.485 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:50.486 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:50.488 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:50.490 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:50.491 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:50.492 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.8626ms
2024-12-09 14:24:50.493 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:50.494 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.9267ms
2024-12-09 14:24:51.483 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:51.485 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:51.486 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:51.487 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:51.488 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:51.489 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:51.490 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:24:51.491 +05:30 [INF] Deserializing the notes
2024-12-09 14:24:51.492 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:51.493 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8301ms
2024-12-09 14:24:51.496 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:51.498 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.4522ms
2024-12-09 14:24:55.170 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:24:55.171 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:55.172 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 1.8161ms
2024-12-09 14:24:55.173 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:24:55.175 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:55.176 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:24:55.177 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:55.178 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:24:55.179 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:24:55.181 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:24:55.183 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:24:55.187 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:24:55.191 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:24:55.192 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:24:55.192 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:55.193 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 15.0332ms
2024-12-09 14:24:55.194 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:24:55.195 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 22.0449ms
2024-12-09 14:24:56.398 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:24:56.400 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:56.401 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6153ms
2024-12-09 14:24:56.403 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:24:56.405 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:56.405 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:56.406 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:56.407 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:24:56.409 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:24:56.411 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:24:56.414 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:24:56.414 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:24:56.416 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:24:56.417 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:24:56.419 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:24:56.420 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:24:56.420 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:24:56.421 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:24:56.422 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:56.423 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.3375ms
2024-12-09 14:24:56.423 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:24:56.429 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.8845ms
2024-12-09 14:24:59.922 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:24:59.923 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:59.924 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 2.938ms
2024-12-09 14:24:59.926 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 14:24:59.928 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:24:59.928 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:24:59.929 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:24:59.931 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 14:24:59.931 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:24:59.932 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:24:59.932 +05:30 [INF] Received isArchive value: False
2024-12-09 14:24:59.935 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:24:59.939 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:24:59.945 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:24:59.947 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 14:24:59.948 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:24:59.948 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:24:59.949 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 18.7276ms
2024-12-09 14:24:59.949 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:24:59.954 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 27.9864ms
2024-12-09 14:25:00.998 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:01.002 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:01.003 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:01.003 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:01.005 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:01.006 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:01.007 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:25:01.008 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:25:01.008 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:25:01.011 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:25:01.012 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:25:01.013 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:25:01.015 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:25:01.015 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:25:01.016 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:25:01.017 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:01.018 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.6037ms
2024-12-09 14:25:01.024 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:01.025 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.9895ms
2024-12-09 14:25:30.245 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:25:30.249 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:30.250 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 5.7194ms
2024-12-09 14:25:30.252 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:25:30.253 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:30.254 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:25:30.254 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:30.256 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:25:30.257 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:25:30.267 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:25:30.271 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:25:30.274 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:25:30.276 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:25:30.280 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:25:30.281 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:30.282 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 26.0285ms
2024-12-09 14:25:30.283 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:25:30.284 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 31.875ms
2024-12-09 14:25:31.513 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:25:31.515 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:31.516 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.2955ms
2024-12-09 14:25:31.519 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:31.520 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:31.521 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:31.522 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:31.524 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:31.525 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:31.526 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:25:31.526 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:25:31.527 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:25:31.529 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:25:31.536 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:25:31.537 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:25:31.539 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:25:31.539 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:25:31.540 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:25:31.541 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:31.542 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.2181ms
2024-12-09 14:25:31.542 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:31.547 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.2226ms
2024-12-09 14:25:34.868 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:34.871 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:34.872 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:34.873 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:34.874 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:34.875 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:34.877 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:25:34.878 +05:30 [INF] Deserializing the notes
2024-12-09 14:25:34.879 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:34.880 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.6269ms
2024-12-09 14:25:34.881 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:34.881 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.1234ms
2024-12-09 14:25:37.363 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:25:37.364 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:37.365 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6222ms
2024-12-09 14:25:37.367 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:37.369 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:37.370 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:37.370 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:37.373 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:37.374 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:37.375 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:25:37.375 +05:30 [INF] Deserializing the notes
2024-12-09 14:25:37.376 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:37.378 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0237ms
2024-12-09 14:25:37.381 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:37.383 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.7056ms
2024-12-09 14:25:38.990 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:38.992 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:38.993 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:38.994 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:38.995 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:38.997 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:38.999 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:25:38.999 +05:30 [INF] Deserializing the notes
2024-12-09 14:25:39.001 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:39.003 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.4361ms
2024-12-09 14:25:39.004 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:39.004 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:39.011 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.0985ms
2024-12-09 14:25:39.020 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:39.023 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:39.026 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:39.027 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:39.028 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:39.029 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:25:39.029 +05:30 [INF] Deserializing the notes
2024-12-09 14:25:39.030 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:39.031 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.5386ms
2024-12-09 14:25:39.031 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:39.032 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.1847ms
2024-12-09 14:25:42.883 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:25:42.886 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:42.889 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.9224ms
2024-12-09 14:25:42.892 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:42.894 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:42.898 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:42.898 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:42.902 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:42.903 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:42.904 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:25:42.904 +05:30 [INF] Deserializing the notes
2024-12-09 14:25:42.905 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:42.905 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7271ms
2024-12-09 14:25:42.906 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:42.907 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.6581ms
2024-12-09 14:25:44.673 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:25:44.678 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:44.679 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 5.7311ms
2024-12-09 14:25:44.680 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:25:44.682 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:44.682 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:25:44.683 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:44.684 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:25:44.685 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:25:44.687 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:25:44.692 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:25:44.695 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:25:44.696 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:25:44.697 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:25:44.698 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:44.698 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 14.026ms
2024-12-09 14:25:44.699 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:25:44.700 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 19.6479ms
2024-12-09 14:25:46.685 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:46.689 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:46.690 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:46.690 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:46.693 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:46.695 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:46.696 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:25:46.697 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:25:46.698 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:25:46.699 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:25:46.704 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:25:46.707 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:25:46.709 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:25:46.710 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:25:46.710 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:25:46.711 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:46.712 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.6566ms
2024-12-09 14:25:46.712 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:46.713 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.3746ms
2024-12-09 14:25:47.701 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:47.704 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:47.708 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:47.709 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:47.712 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:47.715 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:47.716 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:25:47.717 +05:30 [INF] Deserializing the notes
2024-12-09 14:25:47.717 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:47.718 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.1236ms
2024-12-09 14:25:47.721 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:47.724 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.0151ms
2024-12-09 14:25:49.987 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:25:49.989 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:49.991 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7105ms
2024-12-09 14:25:49.993 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:49.996 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:49.997 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:49.998 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:49.999 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:50.000 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:50.003 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:25:50.005 +05:30 [INF] Deserializing the notes
2024-12-09 14:25:50.006 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:50.007 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.2462ms
2024-12-09 14:25:50.008 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:50.009 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.5507ms
2024-12-09 14:25:50.977 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:50.981 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:50.982 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:50.983 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:50.985 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:50.986 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:50.987 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:25:50.988 +05:30 [INF] Deserializing the notes
2024-12-09 14:25:50.988 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:50.992 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.4836ms
2024-12-09 14:25:50.995 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:50.995 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.2119ms
2024-12-09 14:25:52.704 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:25:52.706 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:52.707 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 3.4401ms
2024-12-09 14:25:52.709 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 14:25:52.711 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:52.712 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:25:52.713 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:52.718 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 14:25:52.719 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:25:52.721 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:25:52.723 +05:30 [INF] Received isArchive value: True
2024-12-09 14:25:52.724 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:25:52.727 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:25:52.731 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:25:52.732 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 14:25:52.733 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:25:52.733 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:52.734 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 16.2094ms
2024-12-09 14:25:52.734 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:25:52.735 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 26.5613ms
2024-12-09 14:25:54.809 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:54.811 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:54.812 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:54.813 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:54.814 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:54.817 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:54.818 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:25:54.818 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:25:54.819 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:25:54.821 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:25:54.827 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:25:54.829 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:25:54.830 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:25:54.830 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:25:54.831 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:25:54.832 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:54.833 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.5425ms
2024-12-09 14:25:54.837 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:54.838 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.8194ms
2024-12-09 14:25:57.353 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:25:57.355 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:57.355 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.7757ms
2024-12-09 14:25:57.358 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:57.359 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:57.361 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:57.362 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:57.365 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:57.368 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:57.369 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:25:57.370 +05:30 [INF] Deserializing the notes
2024-12-09 14:25:57.371 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:57.372 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.773ms
2024-12-09 14:25:57.373 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:57.374 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.3254ms
2024-12-09 14:25:57.775 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:25:57.777 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:25:57.778 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:57.779 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:25:57.782 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:25:57.784 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:25:57.786 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:25:57.786 +05:30 [INF] Deserializing the notes
2024-12-09 14:25:57.787 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:25:57.795 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.8534ms
2024-12-09 14:25:57.796 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:25:57.797 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.7135ms
2024-12-09 14:26:00.477 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:26:00.480 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:00.481 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:26:00.482 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:26:00.484 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:26:00.485 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:26:00.486 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:26:00.487 +05:30 [INF] Deserializing the notes
2024-12-09 14:26:00.491 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:26:00.494 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4205ms
2024-12-09 14:26:00.495 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:26:00.495 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.6597ms
2024-12-09 14:26:02.481 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:26:02.482 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:02.483 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 2.4442ms
2024-12-09 14:26:02.485 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:26:02.486 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:02.487 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:26:02.487 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:26:02.489 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:26:02.489 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:26:02.492 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:26:02.494 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:26:02.502 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:26:02.503 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:26:02.504 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:26:02.505 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:26:02.505 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 16.5858ms
2024-12-09 14:26:02.506 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:26:02.507 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 22.1144ms
2024-12-09 14:26:05.023 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:26:05.025 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:05.026 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8835ms
2024-12-09 14:26:05.027 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:26:05.030 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:05.030 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:26:05.031 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:26:05.032 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:26:05.034 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:26:05.034 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:26:05.035 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:26:05.037 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:26:05.038 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:26:05.040 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:26:05.041 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:26:05.048 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:26:05.048 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:26:05.049 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:26:05.049 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:26:05.050 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.2238ms
2024-12-09 14:26:05.051 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:26:05.052 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.3503ms
2024-12-09 14:26:06.575 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:26:06.576 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:06.578 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:26:06.580 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:26:06.581 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:26:06.582 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:26:06.583 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:26:06.584 +05:30 [INF] Deserializing the notes
2024-12-09 14:26:06.584 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:26:06.591 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.8424ms
2024-12-09 14:26:06.591 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:26:06.592 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.4611ms
2024-12-09 14:26:12.325 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:26:12.327 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:12.328 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9484ms
2024-12-09 14:26:12.330 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:26:12.332 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:12.333 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:26:12.334 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:26:12.336 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:26:12.337 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:26:12.338 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:26:12.339 +05:30 [INF] Deserializing the notes
2024-12-09 14:26:12.342 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:26:12.345 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.1102ms
2024-12-09 14:26:12.346 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:26:12.346 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.5476ms
2024-12-09 14:26:13.553 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:26:13.554 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:13.554 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 1.6823ms
2024-12-09 14:26:13.556 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:26:13.557 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:13.558 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:26:13.558 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:26:13.559 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:26:13.560 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:26:13.562 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:26:13.565 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:26:13.569 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:26:13.570 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:26:13.571 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:26:13.571 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:26:13.572 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 12.5616ms
2024-12-09 14:26:13.573 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:26:13.573 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 17.7609ms
2024-12-09 14:26:14.702 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:26:14.703 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:14.705 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:26:14.705 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:26:14.707 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:26:14.708 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:26:14.709 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:26:14.710 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:26:14.711 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:26:14.713 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:26:14.714 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:26:14.716 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:26:14.722 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:26:14.722 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:26:14.723 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:26:14.724 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:26:14.724 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.5314ms
2024-12-09 14:26:14.725 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:26:14.726 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.8772ms
2024-12-09 14:26:19.774 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:26:19.776 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:19.776 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 2.2206ms
2024-12-09 14:26:19.777 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 14:26:19.780 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:19.781 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:26:19.781 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:26:19.782 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 14:26:19.783 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:26:19.783 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:26:19.784 +05:30 [INF] Received isArchive value: False
2024-12-09 14:26:19.786 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:26:19.788 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:26:19.792 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:26:19.796 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 14:26:19.797 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:26:19.797 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:26:19.798 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 15.4375ms
2024-12-09 14:26:19.799 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:26:19.799 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 21.8266ms
2024-12-09 14:26:21.000 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:26:21.002 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:21.004 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9698ms
2024-12-09 14:26:21.005 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:26:21.008 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:26:21.008 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:26:21.009 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:26:21.010 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:26:21.015 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:26:21.018 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:26:21.018 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:26:21.019 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:26:21.020 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:26:21.021 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:26:21.023 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:26:21.024 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:26:21.025 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:26:21.026 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:26:21.026 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:26:21.032 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.5976ms
2024-12-09 14:26:21.033 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:26:21.034 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.2614ms
2024-12-09 14:27:44.116 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:27:44.130 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:27:44.133 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 16.5376ms
2024-12-09 14:27:44.135 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 14:27:44.137 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:27:44.138 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:27:44.138 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:27:44.143 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 14:27:44.144 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:27:44.144 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:27:44.145 +05:30 [INF] Received isArchive value: True
2024-12-09 14:27:44.148 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:27:44.151 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:27:44.156 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:27:44.160 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 14:27:44.160 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:27:44.161 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:27:44.161 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 18.4685ms
2024-12-09 14:27:44.162 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:27:44.163 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 27.975ms
2024-12-09 14:27:45.463 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:27:45.464 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:27:45.465 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9298ms
2024-12-09 14:27:45.467 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:27:45.471 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:27:45.471 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:27:45.475 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:27:45.478 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:27:45.479 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:27:45.480 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:27:45.481 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:27:45.482 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:27:45.484 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:27:45.485 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:27:45.487 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:27:45.488 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:27:45.489 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:27:45.490 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:27:45.490 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:27:45.491 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.8379ms
2024-12-09 14:27:45.492 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:27:45.493 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.5416ms
2024-12-09 14:27:47.058 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:27:47.061 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:27:47.062 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:27:47.064 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:27:47.067 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:27:47.069 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:27:47.070 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:27:47.071 +05:30 [INF] Deserializing the notes
2024-12-09 14:27:47.072 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:27:47.075 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.9064ms
2024-12-09 14:27:47.078 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:27:47.079 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.04ms
2024-12-09 14:27:52.298 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:27:52.301 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:27:52.302 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 4.473ms
2024-12-09 14:27:52.304 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:27:52.306 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:27:52.307 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:27:52.308 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:27:52.309 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:27:52.310 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:27:52.313 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:27:52.321 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:27:52.324 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:27:52.326 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:27:52.327 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:27:52.327 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:27:52.328 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 18.4736ms
2024-12-09 14:27:52.332 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:27:52.333 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 29.0831ms
2024-12-09 14:27:53.573 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:27:53.574 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:27:53.575 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6899ms
2024-12-09 14:27:53.577 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:27:53.579 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:27:53.580 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:27:53.581 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:27:53.583 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:27:53.584 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:27:53.585 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:27:53.588 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:27:53.590 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:27:53.592 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:27:53.593 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:27:53.594 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:27:53.596 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:27:53.597 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:27:53.597 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:27:53.602 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:27:53.605 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.2266ms
2024-12-09 14:27:53.605 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:27:53.606 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.3542ms
2024-12-09 14:27:55.007 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:27:55.009 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:27:55.010 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:27:55.011 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:27:55.012 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:27:55.014 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:27:55.015 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:27:55.016 +05:30 [INF] Deserializing the notes
2024-12-09 14:27:55.017 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:27:55.018 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5307ms
2024-12-09 14:27:55.019 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:27:55.019 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.8182ms
2024-12-09 14:27:56.755 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:27:56.756 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:27:56.758 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:27:56.759 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:27:56.761 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:27:56.764 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:27:56.766 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:27:56.767 +05:30 [INF] Deserializing the notes
2024-12-09 14:27:56.768 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:27:56.770 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.3937ms
2024-12-09 14:27:56.771 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:27:56.772 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.0464ms
2024-12-09 14:27:59.150 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:27:59.152 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:27:59.153 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9607ms
2024-12-09 14:27:59.156 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:27:59.158 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:27:59.158 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:27:59.159 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:27:59.160 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:27:59.162 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:27:59.166 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:27:59.169 +05:30 [INF] Deserializing the notes
2024-12-09 14:27:59.170 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:27:59.171 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.3361ms
2024-12-09 14:27:59.171 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:27:59.172 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.21ms
2024-12-09 14:28:00.796 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:28:00.798 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:00.799 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:00.800 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:28:00.803 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:28:00.804 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:28:00.805 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:28:00.805 +05:30 [INF] Deserializing the notes
2024-12-09 14:28:00.806 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:28:00.807 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1994ms
2024-12-09 14:28:00.808 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:00.813 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.2637ms
2024-12-09 14:28:02.547 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:28:02.549 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:02.550 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:02.550 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:28:02.552 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:28:02.554 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:28:02.555 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:28:02.556 +05:30 [INF] Deserializing the notes
2024-12-09 14:28:02.556 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:28:02.557 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.3678ms
2024-12-09 14:28:02.558 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:02.563 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.3768ms
2024-12-09 14:28:03.770 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:28:03.772 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:03.772 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:03.774 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:28:03.776 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:28:03.777 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:28:03.778 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:28:03.779 +05:30 [INF] Deserializing the notes
2024-12-09 14:28:03.785 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:28:03.787 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.133ms
2024-12-09 14:28:03.788 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:03.789 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.3787ms
2024-12-09 14:28:07.411 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:28:07.413 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:07.413 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 2.233ms
2024-12-09 14:28:07.414 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:28:07.416 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:07.417 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:28:07.418 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:28:07.419 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:28:07.420 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:28:07.422 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:28:07.424 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:28:07.428 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:28:07.432 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:28:07.432 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:28:07.433 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:28:07.433 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 14.4112ms
2024-12-09 14:28:07.434 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:28:07.435 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 20.1884ms
2024-12-09 14:28:08.770 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:28:08.773 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:08.774 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6282ms
2024-12-09 14:28:08.776 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:28:08.778 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:08.779 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:08.780 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:28:08.781 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:28:08.782 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:28:08.783 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:28:08.783 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:28:08.784 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:28:08.785 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:28:08.787 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:28:08.788 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:28:08.789 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:28:08.790 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:28:08.791 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:28:08.797 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:28:08.798 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.7689ms
2024-12-09 14:28:08.798 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:08.799 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.307ms
2024-12-09 14:28:12.574 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:28:12.579 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:12.579 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 6.0456ms
2024-12-09 14:28:12.581 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 14:28:12.584 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:12.585 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:28:12.586 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:28:12.587 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 14:28:12.587 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:28:12.588 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:28:12.588 +05:30 [INF] Received isArchive value: True
2024-12-09 14:28:12.590 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:28:12.594 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:28:12.595 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 14:28:12.596 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:28:12.596 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:28:12.597 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 9.8475ms
2024-12-09 14:28:12.598 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:28:12.598 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 17.3284ms
2024-12-09 14:28:15.440 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 14:28:15.446 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:15.447 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 6.9868ms
2024-12-09 14:28:15.448 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 4
2024-12-09 14:28:15.449 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:15.450 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:28:15.450 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:28:15.451 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 14:28:15.451 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 14:28:15.453 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:28:15.455 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:28:15.466 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:28:15.466 +05:30 [INF] Note with ID: 1026 trash status updated to true
2024-12-09 14:28:15.467 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 14:28:15.468 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:28:15.468 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 17.2192ms
2024-12-09 14:28:15.469 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:28:15.469 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 20.8059ms
2024-12-09 14:28:16.430 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:28:16.432 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:16.433 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4001ms
2024-12-09 14:28:16.439 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:28:16.443 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:16.444 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:16.445 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:28:16.446 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:28:16.447 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:28:16.448 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:28:16.448 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:28:16.449 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:28:16.450 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:28:16.451 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:28:16.452 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:28:16.453 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:28:16.453 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:28:16.454 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:28:16.454 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:28:16.454 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.26ms
2024-12-09 14:28:16.461 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:16.462 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.8605ms
2024-12-09 14:28:18.965 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:28:18.967 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:18.968 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:18.969 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:28:18.970 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:28:18.970 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:28:18.972 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:28:18.972 +05:30 [INF] Deserializing the notes
2024-12-09 14:28:18.973 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:28:18.973 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7411ms
2024-12-09 14:28:18.974 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:18.975 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.2819ms
2024-12-09 14:28:20.114 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:28:20.117 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:20.118 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:20.119 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:28:20.119 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:28:20.121 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:28:20.122 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:28:20.122 +05:30 [INF] Deserializing the notes
2024-12-09 14:28:20.123 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:28:20.123 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7731ms
2024-12-09 14:28:20.124 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:20.125 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.0064ms
2024-12-09 14:28:21.796 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:28:21.797 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:21.798 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6952ms
2024-12-09 14:28:21.802 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:28:21.803 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:28:21.803 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:21.804 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:28:21.808 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:28:21.809 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:28:21.810 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:28:21.810 +05:30 [INF] Deserializing the notes
2024-12-09 14:28:21.810 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:28:21.811 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.1172ms
2024-12-09 14:28:21.812 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:28:21.812 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.4633ms
2024-12-09 14:31:18.623 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:31:18.626 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:18.627 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.9126ms
2024-12-09 14:31:18.631 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:31:18.633 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:18.633 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:18.634 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:31:18.635 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:31:18.636 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:31:18.637 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:31:18.638 +05:30 [INF] Deserializing the notes
2024-12-09 14:31:18.638 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:31:18.639 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0866ms
2024-12-09 14:31:18.640 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:18.642 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.6864ms
2024-12-09 14:31:20.119 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 14:31:20.122 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:20.122 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 3.4594ms
2024-12-09 14:31:20.124 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 5
2024-12-09 14:31:20.127 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:20.127 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:31:20.128 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:31:20.129 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 14:31:20.130 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 14:31:20.138 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:31:20.141 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:31:20.145 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:31:20.146 +05:30 [INF] Note with ID: 1026 trash status updated to false
2024-12-09 14:31:20.147 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 14:31:20.147 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:31:20.148 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 18.4557ms
2024-12-09 14:31:20.148 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:31:20.149 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 24.8115ms
2024-12-09 14:31:22.059 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:31:22.061 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:22.063 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:22.063 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:31:22.064 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:31:22.065 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:31:22.066 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:31:22.067 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:31:22.067 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:31:22.069 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:31:22.070 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:31:22.071 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:31:22.072 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:31:22.073 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:31:22.074 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:31:22.074 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:31:22.075 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.4856ms
2024-12-09 14:31:22.081 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:22.081 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.0802ms
2024-12-09 14:31:23.356 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:31:23.359 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:23.359 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:23.361 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:31:23.363 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:31:23.363 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:31:23.364 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:31:23.365 +05:30 [INF] Deserializing the notes
2024-12-09 14:31:23.365 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:31:23.365 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.3127ms
2024-12-09 14:31:23.368 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:23.368 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.115ms
2024-12-09 14:31:24.466 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:31:24.468 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:24.469 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9527ms
2024-12-09 14:31:24.472 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:31:24.474 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:24.474 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:24.475 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:31:24.477 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:31:24.479 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:31:24.480 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:31:24.480 +05:30 [INF] Deserializing the notes
2024-12-09 14:31:24.480 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:31:24.481 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2386ms
2024-12-09 14:31:24.485 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:24.485 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.3578ms
2024-12-09 14:31:27.843 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:31:27.848 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:27.848 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 5.2071ms
2024-12-09 14:31:27.849 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 14:31:27.850 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:27.851 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:31:27.851 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:31:27.853 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 14:31:27.853 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:31:27.853 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:31:27.854 +05:30 [INF] Received isArchive value: False
2024-12-09 14:31:27.856 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:31:27.861 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:31:27.865 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:31:27.866 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 14:31:27.867 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:31:27.867 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:31:27.871 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 18.9451ms
2024-12-09 14:31:27.872 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:31:27.873 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 23.9246ms
2024-12-09 14:31:29.148 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:31:29.151 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:29.152 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:29.154 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:31:29.155 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:31:29.158 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:31:29.160 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:31:29.160 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:31:29.161 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:31:29.163 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:31:29.167 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:31:29.168 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:31:29.169 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:31:29.170 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:31:29.170 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:31:29.171 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:31:29.171 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.1575ms
2024-12-09 14:31:29.172 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:29.172 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.2601ms
2024-12-09 14:31:30.563 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:31:30.565 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:30.565 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.1612ms
2024-12-09 14:31:30.567 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:31:30.570 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:30.571 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:30.572 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:31:30.574 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:31:30.575 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:31:30.576 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:31:30.577 +05:30 [INF] Deserializing the notes
2024-12-09 14:31:30.577 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:31:30.581 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.8842ms
2024-12-09 14:31:30.582 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:30.583 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.7146ms
2024-12-09 14:31:33.018 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:31:33.021 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:33.021 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:33.022 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:31:33.023 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:31:33.025 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:31:33.026 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:31:33.026 +05:30 [INF] Deserializing the notes
2024-12-09 14:31:33.027 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:31:33.027 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2723ms
2024-12-09 14:31:33.028 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:33.028 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.0277ms
2024-12-09 14:31:34.232 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:31:34.235 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:31:34.236 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:34.237 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:31:34.238 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:31:34.238 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:31:34.239 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:31:34.240 +05:30 [INF] Deserializing the notes
2024-12-09 14:31:34.241 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:31:34.242 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9094ms
2024-12-09 14:31:34.243 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:31:34.244 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.2795ms
2024-12-09 14:32:26.542 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:32:26.547 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:26.547 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 5.4934ms
2024-12-09 14:32:26.549 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 14:32:26.550 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:26.551 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:32:26.552 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:32:26.553 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 14:32:26.553 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:32:26.554 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:32:26.555 +05:30 [INF] Received isArchive value: True
2024-12-09 14:32:26.558 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:32:26.562 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:32:26.567 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:32:26.569 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 14:32:26.570 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:32:26.570 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:32:26.571 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 18.0692ms
2024-12-09 14:32:26.572 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:32:26.573 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 23.7801ms
2024-12-09 14:32:27.704 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:32:27.706 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:27.707 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9313ms
2024-12-09 14:32:27.709 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:32:27.711 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:27.712 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:27.713 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:32:27.715 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:32:27.715 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:32:27.717 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:32:27.717 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:32:27.717 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:32:27.719 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:32:27.723 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:32:27.725 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:32:27.726 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:32:27.726 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:32:27.727 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:32:27.727 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:32:27.728 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.369ms
2024-12-09 14:32:27.728 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:27.729 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.1294ms
2024-12-09 14:32:31.654 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:32:31.656 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:31.656 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 2.5368ms
2024-12-09 14:32:31.658 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:32:31.659 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:31.660 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:32:31.660 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:32:31.662 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:32:31.663 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:32:31.666 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:32:31.668 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:32:31.676 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:32:31.677 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:32:31.678 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:32:31.679 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:32:31.680 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 17.4693ms
2024-12-09 14:32:31.682 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:32:31.683 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 25.6214ms
2024-12-09 14:32:33.427 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:32:33.429 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:33.430 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.465ms
2024-12-09 14:32:33.431 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:32:33.433 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:33.433 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:33.434 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:32:33.435 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:32:33.436 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:32:33.440 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:32:33.441 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:32:33.441 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:32:33.442 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:32:33.443 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:32:33.444 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:32:33.445 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:32:33.445 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:32:33.446 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:32:33.446 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:32:33.447 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.3861ms
2024-12-09 14:32:33.447 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:33.448 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.8928ms
2024-12-09 14:32:34.298 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:32:34.301 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:34.302 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:34.304 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:32:34.306 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:32:34.307 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:32:34.308 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:32:34.308 +05:30 [INF] Deserializing the notes
2024-12-09 14:32:34.309 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:32:34.309 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.5647ms
2024-12-09 14:32:34.312 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:34.312 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7277ms
2024-12-09 14:32:35.447 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:32:35.450 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:35.451 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:35.452 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:32:35.453 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:32:35.454 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:32:35.455 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:32:35.455 +05:30 [INF] Deserializing the notes
2024-12-09 14:32:35.456 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:32:35.459 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.8441ms
2024-12-09 14:32:35.459 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:35.460 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.8207ms
2024-12-09 14:32:55.702 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:32:55.704 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:55.705 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2743ms
2024-12-09 14:32:55.707 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:32:55.709 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:55.709 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:55.710 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:32:55.713 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:32:55.715 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:32:55.722 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:32:55.723 +05:30 [INF] Deserializing the notes
2024-12-09 14:32:55.724 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:32:55.724 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.8065ms
2024-12-09 14:32:55.725 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:55.726 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.6219ms
2024-12-09 14:32:55.726 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:32:55.733 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:55.733 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:55.738 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:32:55.740 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:32:55.741 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:32:55.742 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:32:55.743 +05:30 [INF] Deserializing the notes
2024-12-09 14:32:55.743 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:32:55.746 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.5497ms
2024-12-09 14:32:55.748 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:32:55.752 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:55.753 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:32:55.753 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.1274ms
2024-12-09 14:32:55.754 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:55.756 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:32:55.757 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:32:55.758 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:32:55.759 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:32:55.759 +05:30 [INF] Deserializing the notes
2024-12-09 14:32:55.760 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:32:55.760 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.73ms
2024-12-09 14:32:55.763 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:32:55.764 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.6363ms
2024-12-09 14:33:33.118 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:33:33.120 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:33.121 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9401ms
2024-12-09 14:33:33.122 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:33:33.125 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:33.126 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:33.127 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:33.128 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:33:33.129 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:33:33.130 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:33:33.131 +05:30 [INF] Deserializing the notes
2024-12-09 14:33:33.131 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:33.133 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0985ms
2024-12-09 14:33:33.139 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:33.140 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.6109ms
2024-12-09 14:33:33.143 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:33:33.145 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:33.145 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:33.146 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:33.147 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:33:33.149 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:33:33.150 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:33:33.152 +05:30 [INF] Deserializing the notes
2024-12-09 14:33:33.153 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:33.155 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.6435ms
2024-12-09 14:33:33.156 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:33.156 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.4515ms
2024-12-09 14:33:36.928 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:33:36.930 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:36.930 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:36.931 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:36.932 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:33:36.933 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:33:36.935 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:33:36.936 +05:30 [INF] Deserializing the notes
2024-12-09 14:33:36.936 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:36.937 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7246ms
2024-12-09 14:33:36.938 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:36.939 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:33:36.943 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.3414ms
2024-12-09 14:33:36.966 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:36.968 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:36.968 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:36.969 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:33:36.970 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:33:36.971 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:33:36.971 +05:30 [INF] Deserializing the notes
2024-12-09 14:33:36.972 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:36.972 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.3404ms
2024-12-09 14:33:36.973 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:36.974 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.3011ms
2024-12-09 14:33:40.278 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:33:40.279 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:40.280 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.1202ms
2024-12-09 14:33:40.281 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:33:40.284 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:40.284 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:40.285 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:40.290 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:33:40.292 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:33:40.293 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:33:40.293 +05:30 [INF] Deserializing the notes
2024-12-09 14:33:40.294 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:40.295 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2482ms
2024-12-09 14:33:40.296 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:40.297 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.8175ms
2024-12-09 14:33:44.172 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:33:44.176 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:44.177 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:44.178 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:44.179 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:33:44.180 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:33:44.181 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:33:44.182 +05:30 [INF] Deserializing the notes
2024-12-09 14:33:44.182 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:44.183 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.437ms
2024-12-09 14:33:44.184 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:44.184 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.1484ms
2024-12-09 14:33:45.487 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:33:45.489 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:45.490 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8789ms
2024-12-09 14:33:45.491 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:33:45.493 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:45.494 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:45.494 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:45.496 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:33:45.497 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:33:45.498 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:33:45.498 +05:30 [INF] Deserializing the notes
2024-12-09 14:33:45.499 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:45.500 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0157ms
2024-12-09 14:33:45.501 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:45.501 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.27ms
2024-12-09 14:33:46.270 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:33:46.274 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:46.275 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:46.275 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:46.276 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:33:46.277 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:33:46.278 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:33:46.278 +05:30 [INF] Deserializing the notes
2024-12-09 14:33:46.279 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:46.280 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0751ms
2024-12-09 14:33:46.281 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:46.281 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.2071ms
2024-12-09 14:33:47.801 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:33:47.805 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:47.806 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 5.1973ms
2024-12-09 14:33:47.807 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:33:47.811 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:47.812 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:33:47.813 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:47.814 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:33:47.814 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:33:47.823 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:33:47.826 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:33:47.831 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:33:47.832 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:33:47.833 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:33:47.834 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:47.834 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 20.8876ms
2024-12-09 14:33:47.835 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:33:47.836 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 28.3758ms
2024-12-09 14:33:49.005 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:33:49.007 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:49.008 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:49.008 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:49.009 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:33:49.011 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:33:49.012 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:33:49.012 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:33:49.013 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:33:49.015 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:33:49.016 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:33:49.018 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:33:49.021 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:33:49.022 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:33:49.022 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:33:49.022 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:49.023 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.7145ms
2024-12-09 14:33:49.024 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:49.024 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.4363ms
2024-12-09 14:33:51.127 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:33:51.130 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:51.130 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 3.969ms
2024-12-09 14:33:51.132 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 14:33:51.133 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:51.134 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:33:51.135 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:51.136 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 14:33:51.137 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:33:51.138 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:33:51.139 +05:30 [INF] Received isArchive value: True
2024-12-09 14:33:51.142 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:33:51.146 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:33:51.147 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 14:33:51.147 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:33:51.148 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:51.148 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 11.8863ms
2024-12-09 14:33:51.149 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:33:51.150 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 18.118ms
2024-12-09 14:33:52.267 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:33:52.271 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:52.272 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.0563ms
2024-12-09 14:33:52.275 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:33:52.276 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:52.277 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:52.278 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:52.279 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:33:52.279 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:33:52.280 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:33:52.281 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:33:52.281 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:33:52.282 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:33:52.283 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:33:52.284 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:33:52.285 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:33:52.285 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:33:52.286 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:33:52.286 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:52.287 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.1332ms
2024-12-09 14:33:52.292 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:52.293 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.203ms
2024-12-09 14:33:54.263 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:33:54.265 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:54.266 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 2.5298ms
2024-12-09 14:33:54.267 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:33:54.268 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:54.269 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:33:54.269 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:54.270 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:33:54.270 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:33:54.272 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:33:54.278 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:33:54.279 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:33:54.280 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:33:54.281 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:33:54.281 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:54.282 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 12.0701ms
2024-12-09 14:33:54.282 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:33:54.283 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 16.1868ms
2024-12-09 14:33:56.318 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:33:56.322 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:56.322 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:56.323 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:56.324 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:33:56.326 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:33:56.327 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:33:56.327 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:33:56.328 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:33:56.330 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:33:56.331 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:33:56.332 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:33:56.335 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:33:56.336 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:33:56.336 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:33:56.337 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:56.337 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.9713ms
2024-12-09 14:33:56.338 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:56.338 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.2733ms
2024-12-09 14:33:57.550 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:33:57.552 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:57.552 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9009ms
2024-12-09 14:33:57.554 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:33:57.556 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:57.556 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:57.557 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:57.558 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:33:57.560 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:33:57.561 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:33:57.561 +05:30 [INF] Deserializing the notes
2024-12-09 14:33:57.561 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:57.562 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0638ms
2024-12-09 14:33:57.563 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:57.566 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.9392ms
2024-12-09 14:33:58.516 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:33:58.518 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:33:58.519 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:58.520 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:33:58.521 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:33:58.522 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:33:58.523 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:33:58.523 +05:30 [INF] Deserializing the notes
2024-12-09 14:33:58.524 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:33:58.524 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.597ms
2024-12-09 14:33:58.525 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:33:58.528 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.0735ms
2024-12-09 14:34:07.463 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:34:07.465 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:34:07.467 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4488ms
2024-12-09 14:34:07.469 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:34:07.472 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:34:07.473 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:34:07.473 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:34:07.474 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:34:07.475 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:34:07.476 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:34:07.476 +05:30 [INF] Deserializing the notes
2024-12-09 14:34:07.476 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:34:07.479 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0232ms
2024-12-09 14:34:07.480 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:34:07.480 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.6125ms
2024-12-09 14:34:08.533 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:34:08.535 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:34:08.537 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:34:08.538 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:34:08.540 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:34:08.541 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:34:08.542 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:34:08.542 +05:30 [INF] Deserializing the notes
2024-12-09 14:34:08.543 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:34:08.543 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.1928ms
2024-12-09 14:34:08.544 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:34:08.544 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.3816ms
2024-12-09 14:34:09.501 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:34:09.503 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:34:09.504 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:34:09.504 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:34:09.505 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:34:09.507 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:34:09.507 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:34:09.508 +05:30 [INF] Deserializing the notes
2024-12-09 14:34:09.508 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:34:09.509 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8141ms
2024-12-09 14:34:09.510 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:34:09.510 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.7305ms
2024-12-09 14:34:10.709 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:34:10.711 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:34:10.712 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 2.7182ms
2024-12-09 14:34:10.713 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:34:10.715 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:34:10.716 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:34:10.717 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:34:10.718 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:34:10.718 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:34:10.721 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:34:10.723 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:34:10.726 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:34:10.727 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:34:10.728 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:34:10.728 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:34:10.729 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 11.3524ms
2024-12-09 14:34:10.729 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:34:10.730 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 16.9702ms
2024-12-09 14:34:11.746 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:34:11.749 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:34:11.749 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:34:11.750 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:34:11.751 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:34:11.752 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:34:11.754 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:34:11.754 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:34:11.755 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:34:11.763 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:34:11.765 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:34:11.767 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:34:11.768 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:34:11.768 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:34:11.774 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:34:11.775 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:34:11.775 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 24.1432ms
2024-12-09 14:34:11.776 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:34:11.777 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.8599ms
2024-12-09 14:34:12.728 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:34:12.732 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:34:12.733 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8734ms
2024-12-09 14:34:12.735 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:34:12.736 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:34:12.737 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:34:12.738 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:34:12.739 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:34:12.739 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:34:12.740 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:34:12.741 +05:30 [INF] Deserializing the notes
2024-12-09 14:34:12.741 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:34:12.742 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 2.9901ms
2024-12-09 14:34:12.742 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:34:12.745 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.7117ms
2024-12-09 14:34:13.742 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:34:13.744 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:34:13.744 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:34:13.745 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:34:13.747 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:34:13.748 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:34:13.749 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:34:13.749 +05:30 [INF] Deserializing the notes
2024-12-09 14:34:13.750 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:34:13.750 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0968ms
2024-12-09 14:34:13.756 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:34:13.756 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7437ms
2024-12-09 14:35:23.104 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:35:23.106 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:23.106 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8311ms
2024-12-09 14:35:23.107 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:35:23.109 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:35:23.115 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:23.117 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:23.117 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.6617ms
2024-12-09 14:35:23.118 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:23.123 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:35:23.125 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:35:23.126 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:35:23.128 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:35:23.128 +05:30 [INF] Deserializing the notes
2024-12-09 14:35:23.130 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:35:23.131 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.9131ms
2024-12-09 14:35:23.134 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:35:23.138 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:23.139 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:23.140 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.5935ms
2024-12-09 14:35:23.140 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:23.142 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:35:23.143 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:35:23.145 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:35:23.146 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:35:23.147 +05:30 [INF] Deserializing the notes
2024-12-09 14:35:23.151 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:35:23.151 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.4221ms
2024-12-09 14:35:23.152 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:23.153 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:35:23.153 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.7116ms
2024-12-09 14:35:23.155 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:23.156 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:23.157 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:35:23.158 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:35:23.159 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:35:23.160 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:35:23.167 +05:30 [INF] Deserializing the notes
2024-12-09 14:35:23.168 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:35:23.169 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.0463ms
2024-12-09 14:35:23.170 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:23.170 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.4344ms
2024-12-09 14:35:47.656 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:35:47.664 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:47.665 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.7985ms
2024-12-09 14:35:47.669 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:35:47.674 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:47.675 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:47.675 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:35:47.677 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:35:47.678 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:35:47.679 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:35:47.679 +05:30 [INF] Deserializing the notes
2024-12-09 14:35:47.680 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:35:47.680 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7565ms
2024-12-09 14:35:47.681 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:47.681 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.9234ms
2024-12-09 14:35:50.004 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:35:50.006 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:50.007 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 3.4859ms
2024-12-09 14:35:50.009 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:35:50.011 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:50.012 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:35:50.013 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:35:50.014 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:35:50.015 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:35:50.023 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:35:50.026 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:35:50.029 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:35:50.030 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:35:50.031 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:35:50.031 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:35:50.032 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 17.8251ms
2024-12-09 14:35:50.032 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:35:50.033 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 23.3942ms
2024-12-09 14:35:51.210 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:35:51.213 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:51.214 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:51.214 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:35:51.216 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:35:51.217 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:35:51.218 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:35:51.218 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:35:51.219 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:35:51.221 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:35:51.222 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:35:51.223 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:35:51.224 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:35:51.224 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:35:51.225 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:35:51.225 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:35:51.226 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.292ms
2024-12-09 14:35:51.231 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:51.231 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.0193ms
2024-12-09 14:35:53.433 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:35:53.434 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:53.434 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:35:53.435 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:35:53.436 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:35:53.437 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:35:53.439 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:35:53.444 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:35:53.447 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:35:53.450 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:35:53.451 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:35:53.451 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:35:53.452 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 15.928ms
2024-12-09 14:35:53.453 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:35:53.454 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 21.0569ms
2024-12-09 14:35:54.466 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:35:54.469 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:54.470 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.2162ms
2024-12-09 14:35:54.472 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:35:54.474 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:54.475 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:54.475 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:35:54.476 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:35:54.477 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:35:54.480 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:35:54.481 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:35:54.481 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:35:54.482 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:35:54.483 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:35:54.485 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:35:54.486 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:35:54.487 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:35:54.487 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:35:54.488 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:35:54.488 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.1035ms
2024-12-09 14:35:54.493 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:54.494 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.5589ms
2024-12-09 14:35:55.843 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:35:55.845 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:35:55.847 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:55.847 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:35:55.848 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:35:55.849 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:35:55.850 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:35:55.851 +05:30 [INF] Deserializing the notes
2024-12-09 14:35:55.851 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:35:55.852 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0748ms
2024-12-09 14:35:55.853 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:35:55.854 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.5401ms
2024-12-09 14:36:00.621 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:36:00.623 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:00.624 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2575ms
2024-12-09 14:36:00.625 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:00.627 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:00.628 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:00.628 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:00.630 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:00.630 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:00.631 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:36:00.632 +05:30 [INF] Deserializing the notes
2024-12-09 14:36:00.632 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:00.633 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.0885ms
2024-12-09 14:36:00.633 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:00.634 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.4463ms
2024-12-09 14:36:01.552 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:01.554 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:01.555 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:01.555 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:01.557 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:01.557 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:01.559 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:36:01.559 +05:30 [INF] Deserializing the notes
2024-12-09 14:36:01.559 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:01.560 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.2885ms
2024-12-09 14:36:01.561 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:01.561 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.972ms
2024-12-09 14:36:02.424 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:02.426 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:02.427 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:02.427 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:02.429 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:02.430 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:02.432 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:36:02.432 +05:30 [INF] Deserializing the notes
2024-12-09 14:36:02.433 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:02.434 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7513ms
2024-12-09 14:36:02.435 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:02.437 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.1996ms
2024-12-09 14:36:07.261 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 14:36:07.266 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:07.266 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 5.0086ms
2024-12-09 14:36:07.268 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 4
2024-12-09 14:36:07.269 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:07.270 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:36:07.270 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:07.271 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 14:36:07.271 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 14:36:07.273 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:36:07.275 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:36:07.278 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:36:07.283 +05:30 [INF] Note with ID: 1026 trash status updated to true
2024-12-09 14:36:07.283 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 14:36:07.284 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:07.284 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 13.0853ms
2024-12-09 14:36:07.285 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:36:07.285 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 17.4744ms
2024-12-09 14:36:08.718 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:36:08.720 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:08.720 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.3911ms
2024-12-09 14:36:08.722 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:08.723 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:08.724 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:08.725 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:08.726 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:08.727 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:08.728 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:36:08.728 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:36:08.729 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:36:08.730 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:36:08.732 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:36:08.733 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:36:08.734 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:36:08.734 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:36:08.735 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:36:08.735 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:08.736 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.0247ms
2024-12-09 14:36:08.742 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:08.742 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.46ms
2024-12-09 14:36:10.723 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:10.725 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:10.725 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:10.726 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:10.727 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:10.727 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:10.729 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:36:10.729 +05:30 [INF] Deserializing the notes
2024-12-09 14:36:10.730 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:10.730 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9102ms
2024-12-09 14:36:10.731 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:10.732 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.2016ms
2024-12-09 14:36:36.017 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:36:36.023 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:36.024 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.3618ms
2024-12-09 14:36:36.026 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:36.028 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:36.028 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:36.029 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:36.030 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:36.031 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:36.033 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:36:36.036 +05:30 [INF] Deserializing the notes
2024-12-09 14:36:36.037 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:36.038 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.1117ms
2024-12-09 14:36:36.039 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:36.040 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.2751ms
2024-12-09 14:36:37.246 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 14:36:37.248 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:37.248 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 3.1995ms
2024-12-09 14:36:37.250 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 5
2024-12-09 14:36:37.252 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:37.253 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:36:37.254 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:37.256 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 14:36:37.256 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 14:36:37.262 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:36:37.267 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:36:37.271 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:36:37.272 +05:30 [INF] Note with ID: 1026 trash status updated to false
2024-12-09 14:36:37.273 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 14:36:37.274 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:37.274 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 18.5527ms
2024-12-09 14:36:37.275 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:36:37.275 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 25.1052ms
2024-12-09 14:36:38.271 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:38.273 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:38.274 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:38.275 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:38.276 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:38.277 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:38.278 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:36:38.278 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:36:38.278 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:36:38.280 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:36:38.281 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:36:38.282 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:36:38.283 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:36:38.284 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:36:38.284 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:36:38.285 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:38.285 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5368ms
2024-12-09 14:36:38.286 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:38.292 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.8396ms
2024-12-09 14:36:39.435 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:36:39.440 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:39.441 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 6.519ms
2024-12-09 14:36:39.443 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 14:36:39.445 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:39.446 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:36:39.450 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:39.450 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 14:36:39.451 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:36:39.451 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:36:39.451 +05:30 [INF] Received isArchive value: False
2024-12-09 14:36:39.454 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:36:39.456 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:36:39.460 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:36:39.461 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 14:36:39.462 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:36:39.462 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:39.463 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 12.5175ms
2024-12-09 14:36:39.463 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:36:39.464 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 21.1632ms
2024-12-09 14:36:41.616 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:36:41.619 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:41.621 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.769ms
2024-12-09 14:36:41.623 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:41.625 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:41.626 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:41.627 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:41.628 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:41.630 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:41.633 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:36:41.633 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:36:41.634 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:36:41.636 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:36:41.637 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:36:41.638 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:36:41.639 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:36:41.640 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:36:41.640 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:36:41.641 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:41.641 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.8866ms
2024-12-09 14:36:41.646 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:41.646 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.4179ms
2024-12-09 14:36:42.518 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:42.520 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:42.521 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:42.522 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:42.524 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:42.526 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:42.527 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:36:42.527 +05:30 [INF] Deserializing the notes
2024-12-09 14:36:42.527 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:42.528 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5352ms
2024-12-09 14:36:42.529 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:42.529 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.941ms
2024-12-09 14:36:43.699 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:43.701 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:43.702 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:43.703 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:43.704 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:43.705 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:43.706 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:36:43.706 +05:30 [INF] Deserializing the notes
2024-12-09 14:36:43.706 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:43.707 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.0427ms
2024-12-09 14:36:43.708 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:43.708 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.914ms
2024-12-09 14:36:44.412 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:44.414 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:44.415 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:44.415 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:44.416 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:44.417 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:44.418 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:36:44.418 +05:30 [INF] Deserializing the notes
2024-12-09 14:36:44.419 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:44.419 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.5204ms
2024-12-09 14:36:44.420 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:44.420 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.0915ms
2024-12-09 14:36:45.867 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:36:45.871 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:45.871 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 4.9874ms
2024-12-09 14:36:45.873 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 14:36:45.875 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:45.875 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:36:45.875 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:45.876 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 14:36:45.877 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:36:45.877 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:36:45.877 +05:30 [INF] Received isArchive value: True
2024-12-09 14:36:45.879 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:36:45.883 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:36:45.886 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:36:45.887 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 14:36:45.888 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:36:45.888 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:45.889 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 13.0355ms
2024-12-09 14:36:45.890 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:36:45.891 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 17.3689ms
2024-12-09 14:36:48.332 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:36:48.334 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:48.335 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.3758ms
2024-12-09 14:36:48.337 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:48.339 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:48.339 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:48.340 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:48.341 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:48.342 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:48.344 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:36:48.345 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:36:48.345 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:36:48.346 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:36:48.347 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:36:48.348 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:36:48.349 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:36:48.350 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:36:48.351 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:36:48.351 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:48.352 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.31ms
2024-12-09 14:36:48.353 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:48.353 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.5789ms
2024-12-09 14:36:51.974 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:51.977 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:51.977 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:51.978 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:51.979 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:51.980 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:51.981 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:36:51.981 +05:30 [INF] Deserializing the notes
2024-12-09 14:36:51.981 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:51.982 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.5935ms
2024-12-09 14:36:51.983 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:51.986 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.7237ms
2024-12-09 14:36:53.805 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:36:53.806 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:53.807 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.209ms
2024-12-09 14:36:53.808 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:53.809 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:53.810 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:53.811 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:53.812 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:53.813 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:53.814 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:36:53.814 +05:30 [INF] Deserializing the notes
2024-12-09 14:36:53.815 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:53.820 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.2463ms
2024-12-09 14:36:53.821 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:53.821 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.3988ms
2024-12-09 14:36:55.606 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:36:55.608 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:36:55.609 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:55.610 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:36:55.612 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:36:55.612 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:36:55.613 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:36:55.614 +05:30 [INF] Deserializing the notes
2024-12-09 14:36:55.614 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:36:55.618 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.6825ms
2024-12-09 14:36:55.619 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:36:55.619 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.2704ms
2024-12-09 14:37:02.708 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 14:37:02.709 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:02.709 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 1.6596ms
2024-12-09 14:37:02.711 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 4
2024-12-09 14:37:02.712 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:02.713 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:37:02.713 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:02.714 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 14:37:02.714 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 14:37:02.716 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:37:02.719 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:37:02.722 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:37:02.723 +05:30 [INF] Note with ID: 1026 trash status updated to true
2024-12-09 14:37:02.724 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 14:37:02.724 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:02.725 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 10.7962ms
2024-12-09 14:37:02.730 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:37:02.730 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 19.7262ms
2024-12-09 14:37:03.920 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:37:03.922 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:03.923 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9172ms
2024-12-09 14:37:03.926 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:03.929 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:03.929 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:03.930 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:03.932 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:03.933 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:03.934 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:37:03.934 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:37:03.935 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:37:03.937 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:37:03.941 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:37:03.942 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:37:03.944 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:37:03.944 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:37:03.945 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:37:03.945 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:03.946 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.9213ms
2024-12-09 14:37:03.947 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:03.947 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.3315ms
2024-12-09 14:37:06.751 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:06.753 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:06.754 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:06.754 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:06.755 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:06.756 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:06.757 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:37:06.758 +05:30 [INF] Deserializing the notes
2024-12-09 14:37:06.758 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:06.760 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6206ms
2024-12-09 14:37:06.761 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:06.762 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.4232ms
2024-12-09 14:37:08.697 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:08.699 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:08.700 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:08.701 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:08.701 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:08.702 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:08.703 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:37:08.704 +05:30 [INF] Deserializing the notes
2024-12-09 14:37:08.704 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:08.705 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.4136ms
2024-12-09 14:37:08.706 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:08.706 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.2381ms
2024-12-09 14:37:09.845 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:37:09.847 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:09.847 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9698ms
2024-12-09 14:37:09.850 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:09.852 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:09.852 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:09.853 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:09.854 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:09.855 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:09.856 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:37:09.859 +05:30 [INF] Deserializing the notes
2024-12-09 14:37:09.860 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:09.861 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.5438ms
2024-12-09 14:37:09.862 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:09.863 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.4181ms
2024-12-09 14:37:10.854 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:10.858 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:10.858 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:10.859 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:10.860 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:10.861 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:10.862 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:37:10.862 +05:30 [INF] Deserializing the notes
2024-12-09 14:37:10.863 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:10.866 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.3773ms
2024-12-09 14:37:10.867 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:10.867 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.9456ms
2024-12-09 14:37:11.700 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:11.702 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:11.703 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:11.704 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:11.705 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:11.706 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:11.706 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:37:11.707 +05:30 [INF] Deserializing the notes
2024-12-09 14:37:11.707 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:11.708 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.125ms
2024-12-09 14:37:11.709 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:11.711 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.7181ms
2024-12-09 14:37:15.750 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:37:15.753 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:15.754 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1808ms
2024-12-09 14:37:15.755 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:15.759 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:15.759 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:15.760 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:15.760 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:15.761 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:15.762 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:37:15.762 +05:30 [INF] Deserializing the notes
2024-12-09 14:37:15.763 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:15.763 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 2.941ms
2024-12-09 14:37:15.766 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:15.767 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.3023ms
2024-12-09 14:37:18.622 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:18.624 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:18.625 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:18.625 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:18.626 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:18.629 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:18.629 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:37:18.630 +05:30 [INF] Deserializing the notes
2024-12-09 14:37:18.630 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:18.631 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8528ms
2024-12-09 14:37:18.632 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:18.632 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.6708ms
2024-12-09 14:37:22.602 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:37:22.603 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:22.604 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 2.0943ms
2024-12-09 14:37:22.606 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:37:22.607 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:22.608 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:37:22.608 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:22.609 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:37:22.609 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:37:22.611 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:37:22.613 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:37:22.617 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:37:22.620 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:37:22.621 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:37:22.621 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:22.622 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 13.2411ms
2024-12-09 14:37:22.623 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:37:22.623 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 17.6777ms
2024-12-09 14:37:23.746 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:37:23.748 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:23.748 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.3299ms
2024-12-09 14:37:23.750 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:23.752 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:23.752 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:23.753 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:23.754 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:23.755 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:23.756 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:37:23.756 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:37:23.757 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:37:23.758 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:37:23.759 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:37:23.760 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:37:23.761 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:37:23.761 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:37:23.762 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:37:23.762 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:23.763 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.0079ms
2024-12-09 14:37:23.768 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:23.769 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.911ms
2024-12-09 14:37:25.046 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:25.048 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:25.050 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:25.051 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:25.052 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:25.054 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:25.056 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:37:25.056 +05:30 [INF] Deserializing the notes
2024-12-09 14:37:25.057 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:25.058 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.9479ms
2024-12-09 14:37:25.059 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:25.060 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.8031ms
2024-12-09 14:37:27.047 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:27.049 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:27.049 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:27.050 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:27.052 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:27.053 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:27.054 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:37:27.054 +05:30 [INF] Deserializing the notes
2024-12-09 14:37:27.055 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:27.056 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9277ms
2024-12-09 14:37:27.056 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:27.057 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.7079ms
2024-12-09 14:37:29.080 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:37:29.081 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:29.082 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 2.4278ms
2024-12-09 14:37:29.083 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 5
2024-12-09 14:37:29.085 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:29.086 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:37:29.086 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:29.088 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:37:29.088 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:37:29.092 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:37:29.095 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:37:29.099 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:37:29.103 +05:30 [INF] Note with ID: 1025 trash status updated to false
2024-12-09 14:37:29.104 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:37:29.105 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:29.105 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 17.9771ms
2024-12-09 14:37:29.106 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:37:29.107 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 23.8359ms
2024-12-09 14:37:31.097 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 14:37:31.098 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:31.098 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 1.7662ms
2024-12-09 14:37:31.100 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 5
2024-12-09 14:37:31.101 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:31.102 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:37:31.103 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:31.104 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 14:37:31.104 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 14:37:31.107 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:37:31.110 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:37:31.114 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:37:31.119 +05:30 [INF] Note with ID: 1026 trash status updated to false
2024-12-09 14:37:31.120 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 14:37:31.120 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:31.121 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 17.5053ms
2024-12-09 14:37:31.121 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:37:31.122 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 22.2147ms
2024-12-09 14:37:32.022 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:37:32.024 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:32.025 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6099ms
2024-12-09 14:37:32.027 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:32.029 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:32.029 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:32.030 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:32.031 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:32.032 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:32.033 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:37:32.037 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:37:32.038 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:37:32.041 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:37:32.042 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:37:32.044 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:37:32.045 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:37:32.046 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:37:32.047 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:37:32.047 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:32.048 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.8659ms
2024-12-09 14:37:32.054 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:32.054 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.5988ms
2024-12-09 14:37:33.189 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:33.191 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:33.192 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:33.193 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:33.195 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:33.196 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:33.197 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:37:33.197 +05:30 [INF] Deserializing the notes
2024-12-09 14:37:33.198 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:33.199 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.1207ms
2024-12-09 14:37:33.200 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:33.201 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.4621ms
2024-12-09 14:37:35.756 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 4
2024-12-09 14:37:35.758 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:35.759 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:37:35.759 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:35.760 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 14:37:35.760 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 14:37:35.764 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:37:35.768 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:37:35.774 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:37:35.775 +05:30 [INF] Note with ID: 1026 trash status updated to true
2024-12-09 14:37:35.775 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 14:37:35.776 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:35.776 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 16.1237ms
2024-12-09 14:37:35.777 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:37:35.778 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 22.3306ms
2024-12-09 14:37:37.277 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:37:37.280 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:37.281 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.0021ms
2024-12-09 14:37:37.282 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:37.284 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:37.285 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:37.286 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:37.287 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:37.287 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:37.288 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:37:37.289 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:37:37.289 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:37:37.290 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:37:37.291 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:37:37.292 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:37:37.294 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:37:37.294 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:37:37.294 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:37:37.295 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:37.295 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.908ms
2024-12-09 14:37:37.301 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:37.302 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.3566ms
2024-12-09 14:37:38.524 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:37:38.527 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:37:38.528 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:38.528 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:37:38.529 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:37:38.531 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:37:38.532 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:37:38.532 +05:30 [INF] Deserializing the notes
2024-12-09 14:37:38.533 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:37:38.534 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5467ms
2024-12-09 14:37:38.535 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:37:38.535 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.9976ms
2024-12-09 14:39:09.144 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:39:09.146 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:39:09.146 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9907ms
2024-12-09 14:39:09.148 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:39:09.150 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:39:09.151 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 09:03:06', Current time (UTC): '09-12-2024 09:09:09'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 14:39:09.154 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 14:39:09.181 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 14:39:09.207 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 14:39:09.208 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 14:39:09.209 +05:30 [ERR] Connection id "0HN8O4NFVH90Q", Request id "0HN8O4NFVH90Q:0000041F": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 14:39:09.211 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 62.8613ms
2024-12-09 14:39:10.425 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:39:10.427 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:39:10.428 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 09:03:06', Current time (UTC): '09-12-2024 09:09:10'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 14:39:10.429 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 14:39:10.444 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 14:39:10.470 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 14:39:10.472 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 14:39:10.473 +05:30 [ERR] Connection id "0HN8O4NFVH90Q", Request id "0HN8O4NFVH90Q:00000421": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 14:39:10.476 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 51.4697ms
2024-12-09 14:39:28.511 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-09 14:39:28.513 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:39:28.514 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 3.1214ms
2024-12-09 14:39:28.515 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-09 14:39:28.517 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:39:28.517 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 14:39:28.518 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-09 14:39:28.538 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-09 14:39:28.538 +05:30 [INF] Checking if the user present
2024-12-09 14:39:28.539 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-09 14:39:28.548 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-09 14:39:28.549 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-09 14:39:28.549 +05:30 [INF] Verifying the password
2024-12-09 14:39:28.727 +05:30 [INF] Password is valid and token is generated
2024-12-09 14:39:28.728 +05:30 [INF] Login successful
2024-12-09 14:39:28.728 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 14:39:28.729 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 210.3682ms
2024-12-09 14:39:28.732 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 14:39:28.735 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 219.4944ms
2024-12-09 14:39:28.749 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:39:28.750 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:39:28.750 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.7462ms
2024-12-09 14:39:28.752 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:39:28.753 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:39:28.754 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:39:28.754 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:39:28.755 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:39:28.757 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:39:28.760 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:39:28.760 +05:30 [INF] Deserializing the notes
2024-12-09 14:39:28.761 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:39:28.762 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.6525ms
2024-12-09 14:39:28.763 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:39:28.763 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.6145ms
2024-12-09 14:39:31.218 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:39:31.222 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:39:31.223 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:39:31.225 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:39:31.227 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:39:31.229 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:39:31.230 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:39:31.230 +05:30 [INF] Deserializing the notes
2024-12-09 14:39:31.231 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:39:31.233 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.303ms
2024-12-09 14:39:31.236 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:39:31.237 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.9606ms
2024-12-09 14:39:32.188 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:39:32.198 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:39:32.200 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:39:32.201 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:39:32.202 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:39:32.203 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:39:32.205 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:39:32.205 +05:30 [INF] Deserializing the notes
2024-12-09 14:39:32.205 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:39:32.206 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8793ms
2024-12-09 14:39:32.207 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:39:32.207 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.5286ms
2024-12-09 14:39:33.688 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:39:33.690 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:39:33.691 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:39:33.691 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:39:33.692 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:39:33.693 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:39:33.694 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:39:33.694 +05:30 [INF] Deserializing the notes
2024-12-09 14:39:33.695 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:39:33.695 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.3976ms
2024-12-09 14:39:33.696 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:39:33.696 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.2675ms
2024-12-09 14:40:06.988 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:40:06.991 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:40:06.992 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1353ms
2024-12-09 14:40:06.994 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:40:06.996 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:40:06.997 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:40:06.997 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:40:06.998 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:40:06.999 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:40:07.000 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:40:07.001 +05:30 [INF] Deserializing the notes
2024-12-09 14:40:07.001 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:40:07.002 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7785ms
2024-12-09 14:40:07.003 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:40:07.006 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.8195ms
2024-12-09 14:40:08.280 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:40:08.283 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:40:08.284 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:40:08.285 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:40:08.286 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:40:08.287 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:40:08.289 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:40:08.289 +05:30 [INF] Deserializing the notes
2024-12-09 14:40:08.289 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:40:08.290 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3502ms
2024-12-09 14:40:08.291 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:40:08.291 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.2577ms
2024-12-09 14:41:01.696 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:41:01.701 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:01.701 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6677ms
2024-12-09 14:41:01.704 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:41:01.705 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:01.706 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:01.707 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:01.708 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:41:01.712 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:41:01.713 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:41:01.714 +05:30 [INF] Deserializing the notes
2024-12-09 14:41:01.715 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:01.717 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.9937ms
2024-12-09 14:41:01.723 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:01.727 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.4218ms
2024-12-09 14:41:01.760 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:41:01.779 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:01.788 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:01.790 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:01.794 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:41:01.800 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:41:01.801 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:41:01.802 +05:30 [INF] Deserializing the notes
2024-12-09 14:41:01.804 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:01.805 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.5818ms
2024-12-09 14:41:01.806 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:01.811 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.1548ms
2024-12-09 14:41:03.943 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:41:03.947 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:03.947 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:03.949 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:03.950 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:41:03.952 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:41:03.954 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:41:03.954 +05:30 [INF] Deserializing the notes
2024-12-09 14:41:03.955 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:03.955 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5478ms
2024-12-09 14:41:03.956 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:03.957 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.3829ms
2024-12-09 14:41:06.619 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:41:06.622 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:06.623 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:06.623 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:06.625 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:41:06.626 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:41:06.627 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:41:06.628 +05:30 [INF] Deserializing the notes
2024-12-09 14:41:06.629 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:06.630 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7641ms
2024-12-09 14:41:06.630 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:06.631 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.1718ms
2024-12-09 14:41:07.902 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:41:07.906 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:07.908 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 6.2268ms
2024-12-09 14:41:07.910 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 14:41:07.913 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:07.914 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:41:07.915 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:07.916 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 14:41:07.917 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:41:07.918 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:41:07.918 +05:30 [INF] Received isArchive value: False
2024-12-09 14:41:07.929 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:41:07.933 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:41:07.936 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:41:07.937 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 14:41:07.938 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:41:07.938 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:07.939 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 22.3736ms
2024-12-09 14:41:07.939 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:41:07.940 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 29.8992ms
2024-12-09 14:41:08.921 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:41:08.923 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:08.924 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.5234ms
2024-12-09 14:41:08.925 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:41:08.926 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:08.927 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:08.927 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:08.929 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:41:08.930 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:41:08.931 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:41:08.931 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:41:08.931 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:41:08.933 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:41:08.933 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:41:08.936 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:41:08.937 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:41:08.938 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:41:08.938 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:41:08.939 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:08.939 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.286ms
2024-12-09 14:41:08.944 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:08.945 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.8022ms
2024-12-09 14:41:09.978 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 14:41:09.982 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:09.982 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 4.9617ms
2024-12-09 14:41:09.984 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 5
2024-12-09 14:41:09.987 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:09.987 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:41:09.987 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:09.988 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 14:41:09.989 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 14:41:09.991 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:41:10.000 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:41:10.004 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:41:10.005 +05:30 [INF] Note with ID: 1026 trash status updated to false
2024-12-09 14:41:10.006 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 14:41:10.006 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:10.007 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 18.4173ms
2024-12-09 14:41:10.007 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:41:10.008 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 24.3662ms
2024-12-09 14:41:10.936 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:41:10.940 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:10.940 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:10.941 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:10.942 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:41:10.943 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:41:10.944 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:41:10.944 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:41:10.945 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:41:10.946 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:41:10.951 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:41:10.952 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:41:10.953 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:41:10.953 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:41:10.953 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:41:10.954 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:10.954 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.3925ms
2024-12-09 14:41:10.955 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:10.955 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.2814ms
2024-12-09 14:41:12.560 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 14:41:12.565 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:12.565 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:41:12.566 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:12.567 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 14:41:12.567 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:41:12.568 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:41:12.568 +05:30 [INF] Received isArchive value: True
2024-12-09 14:41:12.570 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:41:12.572 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:41:12.579 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:41:12.581 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 14:41:12.582 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:41:12.582 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:12.583 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 16.0466ms
2024-12-09 14:41:12.584 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:41:12.584 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 24.1245ms
2024-12-09 14:41:13.801 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:41:13.802 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:13.803 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:13.803 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:13.805 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:41:13.807 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:41:13.808 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:41:13.808 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:41:13.808 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:41:13.810 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:41:13.811 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:41:13.813 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:41:13.814 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:41:13.814 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:41:13.815 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:41:13.815 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:13.816 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.8915ms
2024-12-09 14:41:13.821 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:13.822 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.0613ms
2024-12-09 14:41:14.784 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:41:14.788 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:14.789 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.5079ms
2024-12-09 14:41:14.791 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:41:14.792 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:14.793 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:14.793 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:14.797 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:41:14.798 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:41:14.799 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:41:14.799 +05:30 [INF] Deserializing the notes
2024-12-09 14:41:14.799 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:14.800 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.2176ms
2024-12-09 14:41:14.800 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:14.801 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.2778ms
2024-12-09 14:41:57.031 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:41:57.033 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:57.033 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.0021ms
2024-12-09 14:41:57.035 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:41:57.037 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:57.038 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:57.039 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:57.041 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:41:57.042 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:41:57.043 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:41:57.044 +05:30 [INF] Deserializing the notes
2024-12-09 14:41:57.044 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:57.050 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.0635ms
2024-12-09 14:41:57.051 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:57.052 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.8771ms
2024-12-09 14:41:57.105 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:41:57.107 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:57.107 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:57.107 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:57.108 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:41:57.109 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:41:57.110 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:41:57.110 +05:30 [INF] Deserializing the notes
2024-12-09 14:41:57.111 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:57.112 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7361ms
2024-12-09 14:41:57.112 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:57.113 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.5381ms
2024-12-09 14:41:59.984 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:41:59.987 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:41:59.989 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:59.989 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:41:59.990 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:41:59.991 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:41:59.993 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:41:59.993 +05:30 [INF] Deserializing the notes
2024-12-09 14:41:59.994 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:41:59.995 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8412ms
2024-12-09 14:41:59.996 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:41:59.996 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:41:59.997 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.2908ms
2024-12-09 14:42:00.005 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:42:00.008 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:00.009 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:42:00.010 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:42:00.014 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:42:00.015 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:42:00.016 +05:30 [INF] Deserializing the notes
2024-12-09 14:42:00.017 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:42:00.018 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.6903ms
2024-12-09 14:42:00.019 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:00.021 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.483ms
2024-12-09 14:42:06.134 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:42:06.137 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:42:06.137 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6728ms
2024-12-09 14:42:06.139 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:42:06.142 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:42:06.143 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:06.144 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:42:06.147 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:42:06.148 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:42:06.149 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:42:06.150 +05:30 [INF] Deserializing the notes
2024-12-09 14:42:06.150 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:42:06.150 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.027ms
2024-12-09 14:42:06.151 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:06.152 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.6224ms
2024-12-09 14:42:07.245 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:42:07.248 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:42:07.250 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:07.251 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:42:07.252 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:42:07.253 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:42:07.255 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:42:07.256 +05:30 [INF] Deserializing the notes
2024-12-09 14:42:07.257 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:42:07.258 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.9754ms
2024-12-09 14:42:07.263 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:07.264 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.0611ms
2024-12-09 14:42:11.150 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:42:11.154 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:42:11.154 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8577ms
2024-12-09 14:42:11.155 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:42:11.157 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:42:11.158 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:11.159 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:42:11.160 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:42:11.161 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:42:11.162 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:42:11.162 +05:30 [INF] Deserializing the notes
2024-12-09 14:42:11.162 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:42:11.163 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 2.8163ms
2024-12-09 14:42:11.166 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:11.166 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.7387ms
2024-12-09 14:42:12.556 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - null null
2024-12-09 14:42:12.558 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:42:12.559 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1025 - 204 null null 2.4644ms
2024-12-09 14:42:12.560 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 5
2024-12-09 14:42:12.561 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:42:12.561 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:42:12.562 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:42:12.563 +05:30 [INF] Received noteId: 1025, isArchive: False
2024-12-09 14:42:12.563 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:42:12.563 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:42:12.564 +05:30 [INF] Received isArchive value: False
2024-12-09 14:42:12.574 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:42:12.580 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:42:12.584 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:42:12.587 +05:30 [INF] Note with ID: 1025 archive status updated to false
2024-12-09 14:42:12.588 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:42:12.588 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:42:12.588 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 26.0365ms
2024-12-09 14:42:12.589 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:42:12.590 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 30.007ms
2024-12-09 14:42:13.566 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:42:13.569 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:42:13.570 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:13.572 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:42:13.574 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:42:13.575 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:42:13.577 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:42:13.577 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:42:13.577 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:42:13.579 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:42:13.580 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:42:13.583 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:42:13.584 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:42:13.585 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:42:13.585 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:42:13.586 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:42:13.586 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.0366ms
2024-12-09 14:42:13.587 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:13.587 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.3189ms
2024-12-09 14:42:14.756 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - application/json 4
2024-12-09 14:42:14.760 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:42:14.761 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:42:14.761 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:42:14.762 +05:30 [INF] Received noteId: 1025, isArchive: True
2024-12-09 14:42:14.763 +05:30 [INF] Received request to toggle archive status for note with ID: 1025
2024-12-09 14:42:14.763 +05:30 [INF] Initiating toggle of archive status for note with ID: 1025 for user ID: 1
2024-12-09 14:42:14.763 +05:30 [INF] Received isArchive value: True
2024-12-09 14:42:14.765 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:42:14.767 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:42:14.770 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:42:14.776 +05:30 [INF] Note with ID: 1025 archive status updated to true
2024-12-09 14:42:14.776 +05:30 [INF] Successfully toggled archive status for note with ID: 1025
2024-12-09 14:42:14.776 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:42:14.777 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 14.4996ms
2024-12-09 14:42:14.777 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:42:14.778 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1025 - 200 null application/json; charset=utf-8 22.3161ms
2024-12-09 14:42:16.046 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:42:16.049 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:42:16.050 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:16.050 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:42:16.052 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:42:16.053 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:42:16.054 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:42:16.054 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:42:16.055 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:42:16.058 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:42:16.060 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:42:16.061 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:42:16.062 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:42:16.063 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:42:16.063 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:42:16.063 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:42:16.064 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.755ms
2024-12-09 14:42:16.065 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:16.065 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.0974ms
2024-12-09 14:42:17.863 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:42:17.867 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:42:17.868 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.675ms
2024-12-09 14:42:17.870 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:42:17.872 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:42:17.873 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:17.873 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:42:17.874 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:42:17.875 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:42:17.876 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:42:17.877 +05:30 [INF] Deserializing the notes
2024-12-09 14:42:17.877 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:42:17.877 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.3025ms
2024-12-09 14:42:17.880 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:42:17.881 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.2135ms
2024-12-09 14:44:59.842 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:44:59.853 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:44:59.854 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.1661ms
2024-12-09 14:44:59.858 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:44:59.862 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:44:59.863 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:44:59.865 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:44:59.868 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:44:59.872 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:44:59.873 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:44:59.874 +05:30 [INF] Deserializing the notes
2024-12-09 14:44:59.875 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:44:59.876 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.8139ms
2024-12-09 14:44:59.877 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:44:59.878 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:44:59.878 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.3331ms
2024-12-09 14:44:59.880 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:44:59.891 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:44:59.892 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:44:59.893 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:44:59.894 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:44:59.895 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:44:59.896 +05:30 [INF] Deserializing the notes
2024-12-09 14:44:59.896 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:44:59.897 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2973ms
2024-12-09 14:44:59.898 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:44:59.899 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.0583ms
2024-12-09 14:45:53.740 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:45:53.744 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:45:53.745 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4746ms
2024-12-09 14:45:53.747 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:45:53.749 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:45:53.750 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:45:53.750 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:45:53.751 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:45:53.753 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:45:53.754 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:45:53.754 +05:30 [INF] Deserializing the notes
2024-12-09 14:45:53.755 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:45:53.756 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3485ms
2024-12-09 14:45:53.759 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:45:53.760 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.3372ms
2024-12-09 14:45:53.964 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:45:53.969 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:45:53.970 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:45:53.971 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:45:53.972 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:45:53.973 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:45:53.974 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:45:53.974 +05:30 [INF] Deserializing the notes
2024-12-09 14:45:53.975 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:45:53.975 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8305ms
2024-12-09 14:45:53.976 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:45:53.977 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.7431ms
2024-12-09 14:46:01.801 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:46:01.802 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:46:01.813 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:01.816 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:01.818 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.4388ms
2024-12-09 14:46:01.820 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:01.818 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.6282ms
2024-12-09 14:46:01.826 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:01.828 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:01.829 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:01.830 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:01.831 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:01.832 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:01.833 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:01.833 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:01.833 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.6418ms
2024-12-09 14:46:01.834 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:01.835 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:01.835 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.6349ms
2024-12-09 14:46:01.836 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:01.840 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:01.841 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:01.843 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:01.844 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:01.850 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:01.851 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:01.851 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:01.852 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4991ms
2024-12-09 14:46:01.853 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:01.853 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.6522ms
2024-12-09 14:46:02.750 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:02.751 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:02.752 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:02.752 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:02.753 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:02.754 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:02.755 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:02.755 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:02.756 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:02.757 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0311ms
2024-12-09 14:46:02.758 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:02.758 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:02.759 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.0244ms
2024-12-09 14:46:02.760 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:02.762 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:02.762 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:02.763 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:02.764 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:02.765 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:02.765 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:02.766 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:02.767 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.593ms
2024-12-09 14:46:02.768 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:02.774 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.3175ms
2024-12-09 14:46:07.637 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:46:07.638 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:46:07.641 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:07.645 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:07.646 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.8182ms
2024-12-09 14:46:07.647 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.9934ms
2024-12-09 14:46:07.649 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:07.654 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:07.658 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:07.659 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:07.660 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:07.662 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:07.663 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:07.664 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:07.665 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:07.666 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.9552ms
2024-12-09 14:46:07.667 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:07.667 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:07.668 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.9797ms
2024-12-09 14:46:07.669 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:07.672 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:07.672 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:07.674 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:07.675 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:07.681 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:07.681 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:07.682 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:07.682 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.76ms
2024-12-09 14:46:07.683 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:07.684 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.684ms
2024-12-09 14:46:13.245 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:46:13.248 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:13.249 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9985ms
2024-12-09 14:46:13.252 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:13.255 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:13.256 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:13.257 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:13.258 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:13.263 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:13.265 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:13.265 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:13.266 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:13.267 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.6137ms
2024-12-09 14:46:13.268 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:13.268 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:13.272 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:13.273 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.881ms
2024-12-09 14:46:13.274 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:13.276 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:13.277 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:13.279 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:13.280 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:13.280 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:13.281 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:13.282 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0342ms
2024-12-09 14:46:13.283 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:13.284 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.3948ms
2024-12-09 14:46:31.733 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:46:31.734 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:46:31.735 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:31.736 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:31.737 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7865ms
2024-12-09 14:46:31.737 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0778ms
2024-12-09 14:46:31.739 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:31.741 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:31.742 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:31.743 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:31.744 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:31.745 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:31.746 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:31.746 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:31.747 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:31.748 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.302ms
2024-12-09 14:46:31.749 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:31.754 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:31.755 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:31.755 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.5943ms
2024-12-09 14:46:31.756 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:31.758 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:31.760 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:31.761 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:31.762 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:31.762 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:31.763 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:31.764 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9424ms
2024-12-09 14:46:31.768 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:31.768 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.6566ms
2024-12-09 14:46:37.860 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:46:37.862 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:37.863 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6068ms
2024-12-09 14:46:37.865 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:37.868 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:37.869 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:37.870 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:37.871 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:37.872 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:37.873 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:37.873 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:37.874 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:37.875 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0086ms
2024-12-09 14:46:37.876 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:37.883 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:37.886 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:37.886 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.9525ms
2024-12-09 14:46:37.887 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:37.890 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:37.891 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:37.892 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:37.896 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:37.896 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:37.896 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:37.897 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.2999ms
2024-12-09 14:46:37.898 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:37.899 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.3981ms
2024-12-09 14:46:47.600 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:46:47.602 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:47.603 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.1476ms
2024-12-09 14:46:47.604 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:47.606 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:47.607 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:47.607 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:47.608 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:47.609 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:47.610 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:47.611 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:47.611 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:47.612 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0166ms
2024-12-09 14:46:47.614 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:47.615 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.4678ms
2024-12-09 14:46:47.652 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:46:47.654 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:46:47.655 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:47.656 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:46:47.658 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:46:47.659 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:46:47.660 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:46:47.660 +05:30 [INF] Deserializing the notes
2024-12-09 14:46:47.661 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:46:47.662 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3699ms
2024-12-09 14:46:47.662 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:46:47.664 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.6718ms
2024-12-09 14:46:58.125 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/9 - null null
2024-12-09 14:46:58.126 +05:30 [INF] CORS policy execution failed.
2024-12-09 14:46:58.127 +05:30 [INF] Request origin https://localhost:5000 does not have permission to access the resource.
2024-12-09 14:46:58.128 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 14:46:58.130 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2024-12-09 14:46:58.131 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/9 - 401 null application/json 6.4559ms
2024-12-09 14:47:08.878 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:47:08.881 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:08.882 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.5102ms
2024-12-09 14:47:08.884 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:08.886 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:08.887 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:08.888 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:08.889 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:08.892 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:08.893 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:08.894 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:08.896 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:08.897 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.46ms
2024-12-09 14:47:08.897 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:08.898 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.1287ms
2024-12-09 14:47:08.903 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:08.909 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:08.911 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:08.912 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:08.913 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:08.914 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:08.915 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:08.915 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:08.916 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:08.917 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9843ms
2024-12-09 14:47:08.921 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:08.922 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.0024ms
2024-12-09 14:47:09.677 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:09.679 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:09.680 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:09.681 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:09.683 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:09.684 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:09.685 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:09.686 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:09.686 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:09.687 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3091ms
2024-12-09 14:47:09.688 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:09.688 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:09.693 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:09.693 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.5932ms
2024-12-09 14:47:09.694 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:09.696 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:09.697 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:09.699 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:09.700 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:09.700 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:09.701 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:09.701 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2447ms
2024-12-09 14:47:09.702 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:09.703 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.0894ms
2024-12-09 14:47:11.202 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:11.205 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:11.206 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:11.207 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:11.210 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:11.211 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:11.213 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:11.213 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:11.214 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:11.218 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.5766ms
2024-12-09 14:47:11.219 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:11.220 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:11.221 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.3104ms
2024-12-09 14:47:11.222 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:11.224 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:11.225 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:11.227 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:11.228 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:11.229 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:11.230 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:11.230 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:11.235 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.1103ms
2024-12-09 14:47:11.235 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:11.236 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.6467ms
2024-12-09 14:47:12.361 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:12.365 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:12.366 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:12.368 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:12.370 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:12.376 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:12.378 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:12.379 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:12.380 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:12.382 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.4034ms
2024-12-09 14:47:12.383 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:12.384 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:12.384 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.3869ms
2024-12-09 14:47:12.387 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:12.394 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:12.395 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:12.396 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:12.401 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:12.402 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:12.402 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:12.403 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:12.404 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.7512ms
2024-12-09 14:47:12.405 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:12.406 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.2719ms
2024-12-09 14:47:16.080 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:47:16.084 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:16.084 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7182ms
2024-12-09 14:47:16.085 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:16.088 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:16.088 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:16.089 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:16.090 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:16.092 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:16.093 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:47:16.093 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:47:16.094 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:47:16.101 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:47:16.102 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:47:16.106 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:47:16.108 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:47:16.109 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:47:16.110 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:47:16.111 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:16.112 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.3184ms
2024-12-09 14:47:16.113 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:16.113 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:16.121 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:16.121 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.6586ms
2024-12-09 14:47:16.122 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:16.124 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:16.126 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:16.127 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:16.128 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:16.128 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:16.129 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:16.129 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.6981ms
2024-12-09 14:47:16.134 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:16.134 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.1225ms
2024-12-09 14:47:28.359 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:47:28.359 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:47:28.361 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:28.362 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:28.363 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6667ms
2024-12-09 14:47:28.363 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8368ms
2024-12-09 14:47:28.365 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:28.370 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:28.371 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:28.371 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:28.372 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:28.375 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:28.376 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:28.377 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:28.377 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:28.378 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.6482ms
2024-12-09 14:47:28.379 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:28.379 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:28.380 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7091ms
2024-12-09 14:47:28.381 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:28.390 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:28.390 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:28.391 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:28.393 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:28.395 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:28.395 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:28.396 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:28.396 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1088ms
2024-12-09 14:47:28.397 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:28.398 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.0848ms
2024-12-09 14:47:30.041 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:30.045 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:30.046 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:30.047 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:30.048 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:30.048 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:30.050 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:30.050 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:30.051 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:30.052 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7159ms
2024-12-09 14:47:30.053 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:30.054 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.3463ms
2024-12-09 14:47:30.056 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:30.058 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:30.058 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:30.058 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:30.059 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:30.066 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:30.068 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:30.069 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:30.070 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:30.071 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.5275ms
2024-12-09 14:47:30.072 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:30.073 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.4109ms
2024-12-09 14:47:53.693 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:47:53.703 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:53.704 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.4138ms
2024-12-09 14:47:53.706 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:47:53.711 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:53.715 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:53.717 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:53.718 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.3835ms
2024-12-09 14:47:53.719 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:53.722 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:53.723 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:53.724 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:53.725 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:53.726 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:53.726 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:53.727 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.6857ms
2024-12-09 14:47:53.729 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:47:53.733 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:53.734 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:47:53.735 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.8334ms
2024-12-09 14:47:53.735 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:53.737 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:47:53.738 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:47:53.739 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:47:53.740 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:47:53.740 +05:30 [INF] Deserializing the notes
2024-12-09 14:47:53.741 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:47:53.742 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0015ms
2024-12-09 14:47:53.743 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:47:53.744 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.0574ms
2024-12-09 14:50:33.814 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:50:33.822 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:50:33.823 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.5336ms
2024-12-09 14:50:33.825 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:50:33.826 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:50:33.827 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:33.828 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:50:33.829 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:50:33.830 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:50:33.835 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:50:33.835 +05:30 [INF] Deserializing the notes
2024-12-09 14:50:33.836 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:50:33.837 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.5886ms
2024-12-09 14:50:33.840 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:33.840 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:50:33.840 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.1449ms
2024-12-09 14:50:33.842 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:50:33.844 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:33.845 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:50:33.847 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:50:33.847 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:50:33.849 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:50:33.849 +05:30 [INF] Deserializing the notes
2024-12-09 14:50:33.850 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:50:33.851 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2897ms
2024-12-09 14:50:33.852 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:33.852 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.6231ms
2024-12-09 14:50:37.909 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:50:37.911 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:50:37.912 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:37.913 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:50:37.915 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:50:37.916 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:50:37.918 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:50:37.919 +05:30 [INF] Deserializing the notes
2024-12-09 14:50:37.919 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:50:37.920 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0574ms
2024-12-09 14:50:37.921 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:37.921 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.2601ms
2024-12-09 14:50:37.949 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:50:37.950 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:50:37.950 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:37.951 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:50:37.952 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:50:37.954 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:50:37.954 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:50:37.955 +05:30 [INF] Deserializing the notes
2024-12-09 14:50:37.955 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:50:37.956 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9025ms
2024-12-09 14:50:37.957 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:37.957 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.273ms
2024-12-09 14:50:40.605 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:50:40.607 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:50:40.608 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8454ms
2024-12-09 14:50:40.611 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:50:40.616 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:50:40.620 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:40.623 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:50:40.624 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:50:40.626 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:50:40.628 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:50:40.629 +05:30 [INF] Deserializing the notes
2024-12-09 14:50:40.630 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:50:40.631 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.0622ms
2024-12-09 14:50:40.632 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:50:40.636 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:40.637 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:50:40.638 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.3781ms
2024-12-09 14:50:40.639 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:40.645 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:50:40.646 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:50:40.647 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:50:40.648 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:50:40.648 +05:30 [INF] Deserializing the notes
2024-12-09 14:50:40.649 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:50:40.649 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.5757ms
2024-12-09 14:50:40.650 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:40.651 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.7651ms
2024-12-09 14:50:55.693 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:50:55.695 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:50:55.696 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.3ms
2024-12-09 14:50:55.701 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:50:55.702 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:50:55.703 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:55.704 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:50:55.705 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:50:55.707 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:50:55.710 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:50:55.711 +05:30 [INF] Deserializing the notes
2024-12-09 14:50:55.711 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:50:55.713 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.441ms
2024-12-09 14:50:55.716 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:50:55.716 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:55.718 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:50:55.719 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.0848ms
2024-12-09 14:50:55.719 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:55.721 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:50:55.723 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:50:55.728 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:50:55.730 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:50:55.731 +05:30 [INF] Deserializing the notes
2024-12-09 14:50:55.732 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:50:55.733 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.4894ms
2024-12-09 14:50:55.734 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:55.735 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.5295ms
2024-12-09 14:50:57.273 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:50:57.274 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:50:57.275 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:57.275 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:50:57.276 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:50:57.277 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:50:57.278 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:50:57.279 +05:30 [INF] Deserializing the notes
2024-12-09 14:50:57.280 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:50:57.281 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.44ms
2024-12-09 14:50:57.281 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:57.282 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.7512ms
2024-12-09 14:50:57.282 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:50:57.286 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:50:57.286 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:57.287 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:50:57.294 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:50:57.295 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:50:57.296 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:50:57.296 +05:30 [INF] Deserializing the notes
2024-12-09 14:50:57.297 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:50:57.298 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4719ms
2024-12-09 14:50:57.299 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:50:57.299 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.1591ms
2024-12-09 14:51:47.106 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:51:47.114 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:51:47.115 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.9725ms
2024-12-09 14:51:47.118 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:51:47.119 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:51:47.122 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:51:47.123 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:51:47.125 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:51:47.125 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:51:47.126 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:51:47.127 +05:30 [INF] Deserializing the notes
2024-12-09 14:51:47.127 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:51:47.128 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.5132ms
2024-12-09 14:51:47.129 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:51:47.130 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.2859ms
2024-12-09 14:51:47.135 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:51:47.141 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:51:47.142 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:51:47.143 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:51:47.144 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:51:47.147 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:51:47.148 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:51:47.151 +05:30 [INF] Deserializing the notes
2024-12-09 14:51:47.151 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:51:47.153 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.0766ms
2024-12-09 14:51:47.153 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:51:47.154 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.8124ms
2024-12-09 14:52:01.531 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:52:01.534 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:01.536 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2937ms
2024-12-09 14:52:01.539 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:01.544 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:01.545 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:01.547 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:01.550 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:01.552 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:01.559 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:01.561 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:01.562 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:01.564 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.7153ms
2024-12-09 14:52:01.566 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:01.567 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.6317ms
2024-12-09 14:52:01.668 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:01.669 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:01.669 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:01.670 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:01.671 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:01.672 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:01.673 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:01.674 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:01.674 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:01.675 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3319ms
2024-12-09 14:52:01.676 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:01.677 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.3801ms
2024-12-09 14:52:06.260 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:06.263 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:06.263 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:06.264 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:06.265 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:06.266 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:06.267 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:06.268 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:06.268 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:06.269 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3884ms
2024-12-09 14:52:06.270 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:06.270 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:06.271 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.7457ms
2024-12-09 14:52:06.273 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:06.275 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:06.275 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:06.277 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:06.278 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:06.279 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:06.279 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:06.280 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:06.281 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2915ms
2024-12-09 14:52:06.282 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:06.282 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.9378ms
2024-12-09 14:52:10.550 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:52:10.554 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:10.555 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.0055ms
2024-12-09 14:52:10.559 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:10.563 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:10.564 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:10.565 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:10.567 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:10.569 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:10.572 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:10.573 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:10.574 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:10.575 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.1759ms
2024-12-09 14:52:10.576 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:10.576 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:10.577 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.347ms
2024-12-09 14:52:10.578 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:10.580 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:10.585 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:10.586 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:10.588 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:10.589 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:10.590 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:10.590 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:10.592 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.4299ms
2024-12-09 14:52:10.593 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:10.594 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.9122ms
2024-12-09 14:52:11.833 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:11.835 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:11.835 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:11.836 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:11.838 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:11.839 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:11.840 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:11.840 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:11.842 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:11.843 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.564ms
2024-12-09 14:52:11.845 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:11.845 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:11.847 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:11.847 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.6448ms
2024-12-09 14:52:11.848 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:11.850 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:11.857 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:11.859 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:11.860 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:11.860 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:11.861 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:11.862 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2092ms
2024-12-09 14:52:11.863 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:11.864 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.3508ms
2024-12-09 14:52:14.688 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:14.692 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:14.693 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:14.694 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:14.695 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:14.696 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:14.697 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:14.698 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:14.698 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:14.699 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6046ms
2024-12-09 14:52:14.701 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:14.706 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:14.707 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:14.708 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.0318ms
2024-12-09 14:52:14.708 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:14.711 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:14.713 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:14.713 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:14.714 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:14.715 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:14.718 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:14.719 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.9217ms
2024-12-09 14:52:14.720 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:14.721 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.1299ms
2024-12-09 14:52:16.225 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:52:16.226 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:52:16.227 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:16.230 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:16.231 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.3257ms
2024-12-09 14:52:16.235 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:16.232 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.1542ms
2024-12-09 14:52:16.237 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:16.239 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:16.240 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:16.243 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:16.251 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:16.253 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:52:16.254 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:52:16.254 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:52:16.263 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:52:16.265 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:52:16.268 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:52:16.270 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:52:16.271 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:52:16.271 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:52:16.272 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:16.273 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 30.8823ms
2024-12-09 14:52:16.275 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:16.275 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:16.276 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:16.277 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.1253ms
2024-12-09 14:52:16.277 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:16.279 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:16.281 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:16.282 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:16.283 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:16.289 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:16.290 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:16.291 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.1729ms
2024-12-09 14:52:16.292 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:16.293 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.7828ms
2024-12-09 14:52:28.745 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:52:28.747 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:28.748 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4943ms
2024-12-09 14:52:28.751 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:28.753 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:28.754 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:28.754 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:28.756 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:28.757 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:28.761 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:28.761 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:28.762 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:28.763 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.6652ms
2024-12-09 14:52:28.764 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:28.766 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.2285ms
2024-12-09 14:52:28.780 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:28.783 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:28.784 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:28.785 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:28.786 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:28.788 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:28.789 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:28.789 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:28.790 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:28.793 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.1961ms
2024-12-09 14:52:28.794 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:28.795 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.4129ms
2024-12-09 14:52:33.374 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:33.379 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:33.380 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:33.380 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:33.381 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:33.382 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:33.384 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:33.385 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:33.386 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:33.387 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.1156ms
2024-12-09 14:52:33.392 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:33.393 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.3601ms
2024-12-09 14:52:33.404 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:33.408 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:33.410 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:33.411 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:33.414 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:33.417 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:33.418 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:33.419 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:33.423 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:33.424 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6846ms
2024-12-09 14:52:33.425 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:33.426 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.2193ms
2024-12-09 14:52:46.544 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:52:46.546 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:52:46.548 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:46.550 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:46.551 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.4339ms
2024-12-09 14:52:46.552 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.2011ms
2024-12-09 14:52:46.556 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:46.568 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:46.570 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:46.571 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:46.573 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:46.574 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:46.578 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:46.579 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:46.579 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:46.580 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.4871ms
2024-12-09 14:52:46.581 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:46.581 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:46.583 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:46.584 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.2016ms
2024-12-09 14:52:46.584 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:46.587 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:46.588 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:46.589 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:46.590 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:46.591 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:46.592 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:46.593 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.3854ms
2024-12-09 14:52:46.595 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:46.596 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.8761ms
2024-12-09 14:52:51.752 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:52:51.754 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:51.754 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2246ms
2024-12-09 14:52:51.757 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:51.759 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:51.759 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:51.760 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:51.762 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:51.763 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:51.764 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:51.765 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:51.765 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:51.766 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5943ms
2024-12-09 14:52:51.767 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:51.768 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.6546ms
2024-12-09 14:52:51.795 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:51.797 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:51.797 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:51.798 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:51.799 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:51.800 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:51.802 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:51.802 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:51.802 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:51.803 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9737ms
2024-12-09 14:52:51.804 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:51.805 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.7726ms
2024-12-09 14:52:55.870 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:55.873 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:55.874 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:55.874 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:55.875 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:55.876 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:55.877 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:55.878 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:55.878 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:55.879 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5074ms
2024-12-09 14:52:55.880 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:55.881 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.3846ms
2024-12-09 14:52:55.884 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:55.886 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:55.887 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:55.888 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:55.895 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:55.896 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:55.897 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:55.898 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:55.898 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:55.899 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0643ms
2024-12-09 14:52:55.900 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:55.900 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.5309ms
2024-12-09 14:52:59.760 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:52:59.762 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:59.763 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.7424ms
2024-12-09 14:52:59.765 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:59.767 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:59.768 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:59.769 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:59.771 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:59.772 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:59.773 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:59.774 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:59.774 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:59.775 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4632ms
2024-12-09 14:52:59.776 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:59.777 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.4602ms
2024-12-09 14:52:59.778 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:52:59.784 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:52:59.784 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:59.785 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:52:59.786 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:52:59.789 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:52:59.790 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:52:59.791 +05:30 [INF] Deserializing the notes
2024-12-09 14:52:59.791 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:52:59.792 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.0857ms
2024-12-09 14:52:59.793 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:52:59.794 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.4119ms
2024-12-09 14:53:06.851 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:53:06.854 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:53:06.854 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:06.857 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:06.857 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.0511ms
2024-12-09 14:53:06.858 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.0765ms
2024-12-09 14:53:06.860 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:06.867 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:06.868 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:06.869 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:06.871 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:06.873 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:06.874 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:06.874 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:06.875 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:06.877 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.7516ms
2024-12-09 14:53:06.878 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:06.878 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:06.885 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:06.885 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.7954ms
2024-12-09 14:53:06.886 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:06.888 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:06.889 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:06.890 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:06.891 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:06.892 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:06.892 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:06.893 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.6393ms
2024-12-09 14:53:06.893 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:06.894 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.108ms
2024-12-09 14:53:11.808 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:11.810 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:11.811 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:11.812 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:11.813 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:11.814 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:11.815 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:11.816 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:11.816 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:11.817 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.144ms
2024-12-09 14:53:11.818 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:11.818 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:11.819 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.6529ms
2024-12-09 14:53:11.821 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:11.823 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:11.824 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:11.825 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:11.826 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:11.827 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:11.828 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:11.828 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:11.829 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2441ms
2024-12-09 14:53:11.836 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:11.837 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.3799ms
2024-12-09 14:53:23.945 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:53:23.948 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:23.949 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.068ms
2024-12-09 14:53:23.950 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:23.952 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:23.952 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:23.953 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:23.953 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:23.954 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:23.958 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:23.959 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:23.959 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:23.960 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.4161ms
2024-12-09 14:53:23.961 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:23.962 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:23.963 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.8579ms
2024-12-09 14:53:23.964 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:23.967 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:23.972 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:23.974 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:23.975 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:23.976 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:23.977 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:23.977 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:23.979 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.7592ms
2024-12-09 14:53:23.980 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:23.986 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.6787ms
2024-12-09 14:53:32.652 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:53:32.654 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:32.655 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.3482ms
2024-12-09 14:53:32.658 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:32.661 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:32.662 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:32.663 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:32.665 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:32.667 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:32.668 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:32.668 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:32.672 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:32.673 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.4936ms
2024-12-09 14:53:32.674 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:32.674 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:32.675 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.0584ms
2024-12-09 14:53:32.676 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:32.680 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:32.681 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:32.682 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:32.683 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:32.684 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:32.684 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:32.685 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:32.686 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3511ms
2024-12-09 14:53:32.687 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:32.687 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.4286ms
2024-12-09 14:53:35.313 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:35.315 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:35.316 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:35.316 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:35.317 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:35.318 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:35.319 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:35.320 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:35.320 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:35.321 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.1143ms
2024-12-09 14:53:35.322 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:35.323 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.0924ms
2024-12-09 14:53:35.339 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:35.342 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:35.343 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:35.343 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:35.345 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:35.346 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:35.347 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:35.348 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:35.348 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:35.349 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8019ms
2024-12-09 14:53:35.350 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:35.354 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.3811ms
2024-12-09 14:53:40.558 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:53:40.560 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:53:40.561 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:40.563 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:40.564 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.0497ms
2024-12-09 14:53:40.565 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.5677ms
2024-12-09 14:53:40.567 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:40.572 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:40.573 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:40.576 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:40.578 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:40.579 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:40.580 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:40.581 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:40.581 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:40.583 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8892ms
2024-12-09 14:53:40.583 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:40.583 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:40.584 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.1758ms
2024-12-09 14:53:40.585 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:40.587 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:40.588 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:40.594 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:40.596 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:40.597 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:40.598 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:40.598 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:40.599 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6277ms
2024-12-09 14:53:40.599 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:40.600 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.666ms
2024-12-09 14:53:41.290 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:41.294 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:41.294 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:41.295 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:41.296 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:41.297 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:41.298 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:41.299 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:41.299 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:41.300 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8667ms
2024-12-09 14:53:41.301 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:41.302 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:41.302 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.1898ms
2024-12-09 14:53:41.304 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:41.312 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:41.313 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:41.316 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:41.319 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:41.320 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:41.321 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:41.321 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:41.322 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.4812ms
2024-12-09 14:53:41.323 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:41.324 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.06ms
2024-12-09 14:53:44.958 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - null null
2024-12-09 14:53:44.963 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:44.964 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1025 - 204 null null 5.6014ms
2024-12-09 14:53:44.966 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - application/json 4
2024-12-09 14:53:44.967 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:44.968 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:53:44.968 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:44.969 +05:30 [INF] Received request to toggle trash status for note with ID: 1025
2024-12-09 14:53:44.970 +05:30 [INF] Initiating toggle of trash status for note with ID: 1025 for user ID: 1
2024-12-09 14:53:44.975 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:53:44.978 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:53:44.982 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:53:44.983 +05:30 [INF] Note with ID: 1025 trash status updated to true
2024-12-09 14:53:44.984 +05:30 [INF] Successfully toggled trash status for note with ID: 1025
2024-12-09 14:53:44.987 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:44.988 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 19.2527ms
2024-12-09 14:53:44.989 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:53:44.990 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1025 - 200 null application/json; charset=utf-8 24.903ms
2024-12-09 14:53:47.146 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:53:47.147 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:47.148 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.5025ms
2024-12-09 14:53:47.150 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:47.152 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:47.153 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:47.154 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:47.155 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:47.157 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:47.157 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:53:47.158 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:53:47.158 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:53:47.160 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:53:47.161 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:53:47.162 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:53:47.163 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:53:47.163 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:53:47.164 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:53:47.164 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:47.165 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.9981ms
2024-12-09 14:53:47.166 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:47.166 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.6584ms
2024-12-09 14:53:49.094 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1025 - null null
2024-12-09 14:53:49.098 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:49.099 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1025 - 204 null null 5.0748ms
2024-12-09 14:53:49.101 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1025 - null null
2024-12-09 14:53:49.103 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:49.104 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 14:53:49.108 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:49.110 +05:30 [INF] Received request to delete note with ID: 1025
2024-12-09 14:53:49.112 +05:30 [INF] Initiating deletion of note with ID: 1025 for user ID: 1
2024-12-09 14:53:49.115 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:53:49.119 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:53:49.147 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-09 14:53:49.151 +05:30 [INF] Deleted note with 1025 successfully
2024-12-09 14:53:49.152 +05:30 [INF] Successfully deleted note with ID: 1025
2024-12-09 14:53:49.152 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:49.152 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 43.5474ms
2024-12-09 14:53:49.153 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 14:53:49.155 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1025 - 200 null application/json; charset=utf-8 54.2981ms
2024-12-09 14:53:51.085 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1025 - null null
2024-12-09 14:53:51.089 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:51.089 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 14:53:51.089 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:51.090 +05:30 [INF] Received request to delete note with ID: 1025
2024-12-09 14:53:51.090 +05:30 [INF] Initiating deletion of note with ID: 1025 for user ID: 1
2024-12-09 14:53:51.092 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:53:51.095 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:53:51.096 +05:30 [WRN] Note with ID: 1025 not found
2024-12-09 14:53:51.096 +05:30 [ERR] Failed to delete note with ID: 1025
2024-12-09 14:53:51.099 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:51.102 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 12.4968ms
2024-12-09 14:53:51.103 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 14:53:51.104 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1025 - 400 null application/json; charset=utf-8 18.8312ms
2024-12-09 14:53:53.567 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:53:53.571 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:53.572 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8219ms
2024-12-09 14:53:53.574 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:53.576 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:53.577 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:53.577 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:53.578 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:53.579 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:53.582 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:53:53.582 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:53:53.582 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:53:53.584 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:53:53.585 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:53:53.586 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:53:53.587 +05:30 [INF] 1 notes retrieved for user with ID: 1
2024-12-09 14:53:53.587 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:53:53.588 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:53:53.589 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:53.589 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.5921ms
2024-12-09 14:53:53.590 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:53.590 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.5473ms
2024-12-09 14:53:54.583 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:54.585 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:54.586 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:54.587 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:54.588 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:54.590 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:54.591 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:54.592 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:54.592 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:54.593 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1314ms
2024-12-09 14:53:54.597 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:54.598 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.2163ms
2024-12-09 14:53:56.044 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:56.046 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:56.046 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:56.047 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:56.048 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:56.049 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:56.050 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:56.050 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:56.051 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:56.052 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8622ms
2024-12-09 14:53:56.052 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:56.053 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.9296ms
2024-12-09 14:53:57.574 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:57.575 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:57.576 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:57.577 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:57.579 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:57.580 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:57.581 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:57.581 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:57.582 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:57.583 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.849ms
2024-12-09 14:53:57.583 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:57.584 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.1897ms
2024-12-09 14:53:58.676 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:53:58.677 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:58.678 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2874ms
2024-12-09 14:53:58.679 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:53:58.681 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:53:58.682 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:58.682 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:53:58.683 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:53:58.685 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:53:58.686 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:53:58.686 +05:30 [INF] Deserializing the notes
2024-12-09 14:53:58.687 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:53:58.687 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3929ms
2024-12-09 14:53:58.688 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:53:58.689 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.6276ms
2024-12-09 14:54:06.369 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:54:06.371 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:06.371 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.1474ms
2024-12-09 14:54:06.372 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 38
2024-12-09 14:54:06.374 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:06.375 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 14:54:06.379 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:06.385 +05:30 [INF] Attempt to create a note
2024-12-09 14:54:06.392 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:06.433 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-09 14:54:06.448 +05:30 [INF] Created notes successfully
2024-12-09 14:54:06.449 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 14:54:06.450 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 70.27ms
2024-12-09 14:54:06.451 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 14:54:06.453 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 80.2759ms
2024-12-09 14:54:06.455 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:06.456 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:06.456 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:06.456 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:06.457 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:06.458 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:06.458 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:54:06.459 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:54:06.459 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:54:06.460 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:06.461 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:54:06.463 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:54:06.467 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:54:06.467 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:54:06.467 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:54:06.468 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:06.468 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.4263ms
2024-12-09 14:54:06.469 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:06.469 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.7338ms
2024-12-09 14:54:08.756 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:08.759 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:08.760 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:08.761 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:08.762 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:08.763 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:08.764 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:54:08.764 +05:30 [INF] Deserializing the notes
2024-12-09 14:54:08.764 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:08.769 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.1759ms
2024-12-09 14:54:08.770 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:08.770 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.3167ms
2024-12-09 14:54:09.669 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:09.671 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:09.672 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:09.672 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:09.673 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:09.674 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:09.675 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:54:09.676 +05:30 [INF] Deserializing the notes
2024-12-09 14:54:09.676 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:09.677 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.5908ms
2024-12-09 14:54:09.678 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:09.678 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.5664ms
2024-12-09 14:54:10.536 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:10.539 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:10.540 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:10.541 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:10.542 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:10.544 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:10.545 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:54:10.546 +05:30 [INF] Deserializing the notes
2024-12-09 14:54:10.546 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:10.547 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0391ms
2024-12-09 14:54:10.548 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:10.548 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.7025ms
2024-12-09 14:54:11.678 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - null null
2024-12-09 14:54:11.679 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:11.680 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - 204 null null 1.9405ms
2024-12-09 14:54:11.683 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - application/json 4
2024-12-09 14:54:11.684 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:11.685 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:54:11.686 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:11.687 +05:30 [INF] Received noteId: 1026, isArchive: True
2024-12-09 14:54:11.687 +05:30 [INF] Received request to toggle archive status for note with ID: 1026
2024-12-09 14:54:11.688 +05:30 [INF] Initiating toggle of archive status for note with ID: 1026 for user ID: 1
2024-12-09 14:54:11.688 +05:30 [INF] Received isArchive value: True
2024-12-09 14:54:11.690 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:11.693 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:54:11.698 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:54:11.701 +05:30 [INF] Note with ID: 1026 archive status updated to true
2024-12-09 14:54:11.702 +05:30 [INF] Successfully toggled archive status for note with ID: 1026
2024-12-09 14:54:11.702 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:11.702 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 15.936ms
2024-12-09 14:54:11.703 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:54:11.704 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - 200 null application/json; charset=utf-8 20.4891ms
2024-12-09 14:54:13.712 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1027 - null null
2024-12-09 14:54:13.713 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:13.714 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1027 - 204 null null 2.3218ms
2024-12-09 14:54:13.715 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1027 - application/json 4
2024-12-09 14:54:13.717 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:13.717 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:54:13.718 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:13.719 +05:30 [INF] Received request to toggle trash status for note with ID: 1027
2024-12-09 14:54:13.720 +05:30 [INF] Initiating toggle of trash status for note with ID: 1027 for user ID: 1
2024-12-09 14:54:13.722 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:13.724 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:54:13.728 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:54:13.729 +05:30 [INF] Note with ID: 1027 trash status updated to true
2024-12-09 14:54:13.730 +05:30 [INF] Successfully toggled trash status for note with ID: 1027
2024-12-09 14:54:13.730 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:13.731 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 11.99ms
2024-12-09 14:54:13.731 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:54:13.732 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1027 - 200 null application/json; charset=utf-8 16.5336ms
2024-12-09 14:54:14.787 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:54:14.788 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:14.789 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.1664ms
2024-12-09 14:54:14.791 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:14.792 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:14.793 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:14.794 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:14.795 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:14.796 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:14.797 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:54:14.797 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:54:14.797 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:54:14.801 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:14.804 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:54:14.805 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:54:14.806 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:54:14.806 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:54:14.807 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:54:14.807 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:14.808 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.1342ms
2024-12-09 14:54:14.808 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:14.809 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.3272ms
2024-12-09 14:54:16.234 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:16.236 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:16.236 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:16.237 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:16.238 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:16.239 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:16.240 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:54:16.241 +05:30 [INF] Deserializing the notes
2024-12-09 14:54:16.241 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:16.242 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.6813ms
2024-12-09 14:54:16.242 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:16.243 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.0651ms
2024-12-09 14:54:17.353 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:17.355 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:17.356 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:17.358 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:17.359 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:17.360 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:17.361 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:54:17.362 +05:30 [INF] Deserializing the notes
2024-12-09 14:54:17.363 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:17.363 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6354ms
2024-12-09 14:54:17.364 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:17.365 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.1164ms
2024-12-09 14:54:19.278 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:19.279 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:19.280 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:19.281 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:19.283 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:19.284 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:19.285 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:54:19.286 +05:30 [INF] Deserializing the notes
2024-12-09 14:54:19.286 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:19.288 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.4453ms
2024-12-09 14:54:19.292 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:19.293 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.3078ms
2024-12-09 14:54:20.286 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:54:20.288 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:20.289 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.4425ms
2024-12-09 14:54:20.291 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:20.292 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:20.293 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:20.293 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:20.294 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:20.295 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:20.296 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:54:20.299 +05:30 [INF] Deserializing the notes
2024-12-09 14:54:20.299 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:20.300 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.6409ms
2024-12-09 14:54:20.300 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:20.301 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.0605ms
2024-12-09 14:54:21.152 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:21.154 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:21.155 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:21.156 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:21.157 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:21.158 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:21.158 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:54:21.159 +05:30 [INF] Deserializing the notes
2024-12-09 14:54:21.159 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:21.160 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.32ms
2024-12-09 14:54:21.161 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:21.161 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.7992ms
2024-12-09 14:54:22.949 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1027 - null null
2024-12-09 14:54:22.953 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:22.954 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1027 - 204 null null 4.7566ms
2024-12-09 14:54:22.956 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1027 - application/json 5
2024-12-09 14:54:22.958 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:22.958 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:54:22.959 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:22.962 +05:30 [INF] Received request to toggle trash status for note with ID: 1027
2024-12-09 14:54:22.962 +05:30 [INF] Initiating toggle of trash status for note with ID: 1027 for user ID: 1
2024-12-09 14:54:22.964 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:22.966 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:54:22.969 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:54:22.969 +05:30 [INF] Note with ID: 1027 trash status updated to false
2024-12-09 14:54:22.970 +05:30 [INF] Successfully toggled trash status for note with ID: 1027
2024-12-09 14:54:22.974 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:22.974 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 12.4653ms
2024-12-09 14:54:22.975 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:54:22.976 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1027 - 200 null application/json; charset=utf-8 20.1441ms
2024-12-09 14:54:23.985 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:23.988 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:23.989 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:23.989 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:23.990 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:23.991 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:23.992 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:54:23.992 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:54:23.993 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:54:23.996 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:23.997 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:54:23.998 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:54:23.999 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:54:23.999 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:54:24.000 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:54:24.000 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:24.001 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6303ms
2024-12-09 14:54:24.001 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:24.002 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.2562ms
2024-12-09 14:54:25.184 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:25.185 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:25.186 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:25.187 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:25.188 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:25.190 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:25.191 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:54:25.191 +05:30 [INF] Deserializing the notes
2024-12-09 14:54:25.192 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:25.192 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5419ms
2024-12-09 14:54:25.198 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:25.198 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.2211ms
2024-12-09 14:54:26.552 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:54:26.555 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:26.555 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.2749ms
2024-12-09 14:54:26.557 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:26.559 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:26.560 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:26.560 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:26.561 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:26.562 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:26.563 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:54:26.563 +05:30 [INF] Deserializing the notes
2024-12-09 14:54:26.563 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:26.564 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 2.8581ms
2024-12-09 14:54:26.564 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:26.565 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.0026ms
2024-12-09 14:54:27.814 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - null null
2024-12-09 14:54:27.818 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:27.819 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1026 - 204 null null 5.2431ms
2024-12-09 14:54:27.821 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - application/json 5
2024-12-09 14:54:27.823 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:27.824 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:54:27.827 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:27.828 +05:30 [INF] Received noteId: 1026, isArchive: False
2024-12-09 14:54:27.828 +05:30 [INF] Received request to toggle archive status for note with ID: 1026
2024-12-09 14:54:27.829 +05:30 [INF] Initiating toggle of archive status for note with ID: 1026 for user ID: 1
2024-12-09 14:54:27.829 +05:30 [INF] Received isArchive value: False
2024-12-09 14:54:27.830 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:27.832 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:54:27.835 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:54:27.836 +05:30 [INF] Note with ID: 1026 archive status updated to false
2024-12-09 14:54:27.841 +05:30 [INF] Successfully toggled archive status for note with ID: 1026
2024-12-09 14:54:27.841 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:27.842 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 14.082ms
2024-12-09 14:54:27.843 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 14:54:27.844 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1026 - 200 null application/json; charset=utf-8 22.9348ms
2024-12-09 14:54:29.241 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:29.243 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:29.244 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:29.245 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:29.246 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:29.247 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:29.248 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:54:29.248 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:54:29.248 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:54:29.251 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:29.254 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:54:29.255 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:54:29.256 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:54:29.256 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:54:29.257 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:54:29.257 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:29.258 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.3758ms
2024-12-09 14:54:29.260 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:29.261 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.4139ms
2024-12-09 14:54:31.772 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1027 - null null
2024-12-09 14:54:31.776 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:31.777 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1027 - 204 null null 4.996ms
2024-12-09 14:54:31.779 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1027 - application/json 4
2024-12-09 14:54:31.787 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:31.789 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:54:31.793 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:31.794 +05:30 [INF] Received request to toggle trash status for note with ID: 1027
2024-12-09 14:54:31.794 +05:30 [INF] Initiating toggle of trash status for note with ID: 1027 for user ID: 1
2024-12-09 14:54:31.796 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:31.798 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:54:31.801 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:54:31.802 +05:30 [INF] Note with ID: 1027 trash status updated to true
2024-12-09 14:54:31.803 +05:30 [INF] Successfully toggled trash status for note with ID: 1027
2024-12-09 14:54:31.803 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:31.803 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 9.8556ms
2024-12-09 14:54:31.804 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:54:31.805 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1027 - 200 null application/json; charset=utf-8 25.924ms
2024-12-09 14:54:32.900 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:54:32.902 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:32.903 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.3224ms
2024-12-09 14:54:32.904 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:32.905 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:32.906 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:32.906 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:32.910 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:32.911 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:32.912 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:54:32.912 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:54:32.912 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:54:32.914 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:32.917 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:54:32.918 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:54:32.919 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:54:32.920 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:54:32.921 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:54:32.921 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:32.922 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.6944ms
2024-12-09 14:54:32.922 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:32.923 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.2088ms
2024-12-09 14:54:34.405 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1027 - null null
2024-12-09 14:54:34.409 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:34.410 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1027 - 204 null null 4.8645ms
2024-12-09 14:54:34.411 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1027 - null null
2024-12-09 14:54:34.412 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:34.413 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 14:54:34.413 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:34.414 +05:30 [INF] Received request to delete note with ID: 1027
2024-12-09 14:54:34.415 +05:30 [INF] Initiating deletion of note with ID: 1027 for user ID: 1
2024-12-09 14:54:34.417 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:34.419 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:54:34.428 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-09 14:54:34.429 +05:30 [INF] Deleted note with 1027 successfully
2024-12-09 14:54:34.429 +05:30 [INF] Successfully deleted note with ID: 1027
2024-12-09 14:54:34.430 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:34.430 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 16.4169ms
2024-12-09 14:54:34.433 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 14:54:34.434 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1027 - 200 null application/json; charset=utf-8 23.1195ms
2024-12-09 14:54:37.551 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:37.553 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:37.554 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:37.554 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:37.556 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:37.556 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:37.557 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:54:37.558 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:54:37.559 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:54:37.560 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:37.564 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:54:37.565 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:54:37.566 +05:30 [INF] 1 notes retrieved for user with ID: 1
2024-12-09 14:54:37.566 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:54:37.566 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:54:37.567 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:37.567 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.9005ms
2024-12-09 14:54:37.568 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:37.569 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.1633ms
2024-12-09 14:54:38.408 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:54:38.410 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:38.410 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6743ms
2024-12-09 14:54:38.412 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:38.414 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:38.414 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:38.415 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:38.416 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:38.416 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:38.417 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:54:38.417 +05:30 [INF] Deserializing the notes
2024-12-09 14:54:38.418 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:38.418 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 2.9948ms
2024-12-09 14:54:38.419 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:38.419 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 7.133ms
2024-12-09 14:54:39.542 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:39.544 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:39.545 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:39.547 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:39.549 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:39.550 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:39.551 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:54:39.552 +05:30 [INF] Deserializing the notes
2024-12-09 14:54:39.552 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:39.553 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6291ms
2024-12-09 14:54:39.554 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:39.561 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.3472ms
2024-12-09 14:54:50.001 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:54:50.003 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:50.004 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0266ms
2024-12-09 14:54:50.005 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 40
2024-12-09 14:54:50.007 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:50.007 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 14:54:50.008 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:50.009 +05:30 [INF] Attempt to create a note
2024-12-09 14:54:50.011 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:50.016 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-09 14:54:50.017 +05:30 [INF] Created notes successfully
2024-12-09 14:54:50.018 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 14:54:50.018 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 9.5762ms
2024-12-09 14:54:50.019 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 14:54:50.019 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.4472ms
2024-12-09 14:54:50.021 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:54:50.022 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:54:50.022 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:50.027 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:54:50.027 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:54:50.028 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:54:50.029 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:54:50.030 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:54:50.030 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:54:50.031 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:54:50.032 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:54:50.034 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:54:50.035 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:54:50.035 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:54:50.036 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:54:50.036 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:54:50.037 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.6844ms
2024-12-09 14:54:50.038 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:54:50.038 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.6295ms
2024-12-09 14:55:27.955 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:55:27.957 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:55:27.957 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4712ms
2024-12-09 14:55:27.959 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:55:27.960 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:55:27.961 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:55:27.961 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:55:27.962 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:55:27.963 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:55:27.964 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:55:27.969 +05:30 [INF] Deserializing the notes
2024-12-09 14:55:27.969 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:55:27.971 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.3761ms
2024-12-09 14:55:27.972 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:55:27.972 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:55:27.973 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.6752ms
2024-12-09 14:55:27.975 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:55:27.977 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:55:27.977 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:55:27.978 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:55:27.979 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:55:27.980 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:55:27.984 +05:30 [INF] Deserializing the notes
2024-12-09 14:55:27.985 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:55:27.987 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.6132ms
2024-12-09 14:55:27.988 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:55:27.989 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.4119ms
2024-12-09 14:55:30.040 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:55:30.045 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:55:30.046 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:55:30.047 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:55:30.049 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:55:30.050 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:55:30.054 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:55:30.055 +05:30 [INF] Deserializing the notes
2024-12-09 14:55:30.056 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:55:30.057 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.927ms
2024-12-09 14:55:30.058 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:55:30.059 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.1751ms
2024-12-09 14:55:30.081 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:55:30.082 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:55:30.082 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:55:30.083 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:55:30.083 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:55:30.084 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:55:30.085 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:55:30.086 +05:30 [INF] Deserializing the notes
2024-12-09 14:55:30.086 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:55:30.087 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.6401ms
2024-12-09 14:55:30.088 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:55:30.088 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 7.8706ms
2024-12-09 14:55:56.763 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:55:56.768 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:55:56.769 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7985ms
2024-12-09 14:55:56.772 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:55:56.773 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:55:56.774 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:55:56.775 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:55:56.776 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:55:56.777 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:55:56.778 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:55:56.782 +05:30 [INF] Deserializing the notes
2024-12-09 14:55:56.783 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:55:56.784 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.5228ms
2024-12-09 14:55:56.784 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:55:56.785 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.5255ms
2024-12-09 14:55:56.786 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:55:56.792 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:55:56.793 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:55:56.793 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:55:56.795 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:55:56.796 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:55:56.798 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:55:56.798 +05:30 [INF] Deserializing the notes
2024-12-09 14:55:56.799 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:55:56.800 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2426ms
2024-12-09 14:55:56.801 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:55:56.802 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.9183ms
2024-12-09 14:56:51.044 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:56:51.046 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:56:51.047 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.4299ms
2024-12-09 14:56:51.050 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:56:51.052 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:56:51.053 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:56:51.054 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:56:51.056 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:56:51.057 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:56:51.058 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:56:51.059 +05:30 [INF] Deserializing the notes
2024-12-09 14:56:51.060 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:56:51.061 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.7146ms
2024-12-09 14:56:51.063 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:56:51.063 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:56:51.070 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:56:51.071 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.2565ms
2024-12-09 14:56:51.071 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:56:51.084 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:56:51.086 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:56:51.088 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:56:51.089 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:56:51.089 +05:30 [INF] Deserializing the notes
2024-12-09 14:56:51.090 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:56:51.091 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.3037ms
2024-12-09 14:56:51.092 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:56:51.093 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.198ms
2024-12-09 14:56:55.520 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:56:55.521 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:56:55.523 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:56:55.523 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:56:55.524 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:56:55.525 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:56:55.526 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:56:55.527 +05:30 [INF] Deserializing the notes
2024-12-09 14:56:55.528 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:56:55.529 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7415ms
2024-12-09 14:56:55.529 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:56:55.530 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:56:55.530 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.8423ms
2024-12-09 14:56:55.531 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:56:55.534 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:56:55.538 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:56:55.540 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:56:55.541 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:56:55.543 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:56:55.543 +05:30 [INF] Deserializing the notes
2024-12-09 14:56:55.544 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:56:55.545 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.3384ms
2024-12-09 14:56:55.546 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:56:55.546 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.8354ms
2024-12-09 14:57:00.711 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:57:00.717 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:57:00.718 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.3528ms
2024-12-09 14:57:00.720 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:57:00.723 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:57:00.724 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:00.725 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:57:00.726 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:57:00.727 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:57:00.731 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:57:00.732 +05:30 [INF] Deserializing the notes
2024-12-09 14:57:00.733 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:57:00.734 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.2319ms
2024-12-09 14:57:00.736 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:00.737 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.0356ms
2024-12-09 14:57:00.751 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:57:00.753 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:57:00.753 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:00.754 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:57:00.757 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:57:00.759 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:57:00.760 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:57:00.761 +05:30 [INF] Deserializing the notes
2024-12-09 14:57:00.761 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:57:00.761 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3748ms
2024-12-09 14:57:00.762 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:00.767 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.5802ms
2024-12-09 14:57:08.275 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:57:08.276 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:57:08.277 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.7991ms
2024-12-09 14:57:08.280 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:57:08.281 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:57:08.282 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:08.283 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:57:08.285 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:57:08.286 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:57:08.290 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:57:08.291 +05:30 [INF] Deserializing the notes
2024-12-09 14:57:08.292 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:57:08.292 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.8052ms
2024-12-09 14:57:08.293 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:08.294 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.079ms
2024-12-09 14:57:20.388 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:57:20.391 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:57:20.392 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1678ms
2024-12-09 14:57:20.395 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:57:20.397 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:57:20.398 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:20.398 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:57:20.400 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:57:20.405 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:57:20.407 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:57:20.408 +05:30 [INF] Deserializing the notes
2024-12-09 14:57:20.409 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:57:20.410 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.9117ms
2024-12-09 14:57:20.410 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:20.411 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.7762ms
2024-12-09 14:57:20.422 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:57:20.424 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:57:20.425 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:20.430 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:57:20.432 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:57:20.438 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:57:20.441 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:57:20.442 +05:30 [INF] Deserializing the notes
2024-12-09 14:57:20.443 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:57:20.443 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.3107ms
2024-12-09 14:57:20.444 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:20.445 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.8164ms
2024-12-09 14:57:20.467 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:57:20.469 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:57:20.470 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:20.471 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:57:20.473 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:57:20.474 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:57:20.475 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:57:20.475 +05:30 [INF] Deserializing the notes
2024-12-09 14:57:20.476 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:57:20.477 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0918ms
2024-12-09 14:57:20.478 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:20.481 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.0829ms
2024-12-09 14:57:56.683 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:57:56.695 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:57:56.700 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.2067ms
2024-12-09 14:57:56.703 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:57:56.707 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:57:56.709 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:56.710 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:57:56.713 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:57:56.719 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:57:56.721 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:57:56.721 +05:30 [INF] Deserializing the notes
2024-12-09 14:57:56.722 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:57:56.723 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.5648ms
2024-12-09 14:57:56.724 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:56.725 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.2977ms
2024-12-09 14:57:56.726 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:57:56.728 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:57:56.728 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:56.729 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:57:56.730 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:57:56.731 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:57:56.734 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:57:56.735 +05:30 [INF] Deserializing the notes
2024-12-09 14:57:56.735 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:57:56.736 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.8657ms
2024-12-09 14:57:56.738 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:57:56.739 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.7183ms
2024-12-09 14:58:42.496 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:58:42.505 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:58:42.506 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.5844ms
2024-12-09 14:58:42.506 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:58:42.509 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:58:42.511 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:58:42.512 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:58:42.512 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.4447ms
2024-12-09 14:58:42.548 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:58:42.550 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:58:42.551 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:58:42.552 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:58:42.552 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:58:42.553 +05:30 [INF] Deserializing the notes
2024-12-09 14:58:42.553 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:58:42.553 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 2.8208ms
2024-12-09 14:58:42.554 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:58:42.555 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:58:42.555 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.0552ms
2024-12-09 14:58:42.557 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:58:42.558 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:58:42.559 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:58:42.559 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:58:42.560 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:58:42.561 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:58:42.562 +05:30 [INF] Deserializing the notes
2024-12-09 14:58:42.562 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:58:42.563 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.367ms
2024-12-09 14:58:42.563 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:58:42.564 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.2726ms
2024-12-09 14:58:43.162 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:58:43.166 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:58:43.167 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:58:43.168 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:58:43.171 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:58:43.172 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:58:43.173 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:58:43.173 +05:30 [INF] Deserializing the notes
2024-12-09 14:58:43.174 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:58:43.175 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9722ms
2024-12-09 14:58:43.176 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:58:43.178 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:58:43.179 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:58:43.180 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.5565ms
2024-12-09 14:58:43.180 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:58:43.182 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:58:43.184 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:58:43.185 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:58:43.186 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:58:43.186 +05:30 [INF] Deserializing the notes
2024-12-09 14:58:43.187 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:58:43.193 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.7742ms
2024-12-09 14:58:43.193 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:58:43.194 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.5826ms
2024-12-09 14:59:14.139 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:59:14.140 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:14.141 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.7314ms
2024-12-09 14:59:14.142 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:59:14.146 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:14.147 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:14.148 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:59:14.150 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:59:14.152 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:59:14.153 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:59:14.154 +05:30 [INF] Deserializing the notes
2024-12-09 14:59:14.158 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:59:14.159 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.8102ms
2024-12-09 14:59:14.161 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:14.162 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.0946ms
2024-12-09 14:59:14.199 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:59:14.202 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:14.202 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:14.203 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:59:14.203 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:59:14.204 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:59:14.205 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:59:14.205 +05:30 [INF] Deserializing the notes
2024-12-09 14:59:14.206 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:59:14.206 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 2.9641ms
2024-12-09 14:59:14.207 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:14.208 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.5311ms
2024-12-09 14:59:41.330 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:59:41.333 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:41.333 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9127ms
2024-12-09 14:59:41.335 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:59:41.337 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:41.337 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:41.338 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:59:41.339 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:59:41.340 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:59:41.341 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:59:41.341 +05:30 [INF] Deserializing the notes
2024-12-09 14:59:41.341 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:59:41.342 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 2.8934ms
2024-12-09 14:59:41.345 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:41.345 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.032ms
2024-12-09 14:59:42.593 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:59:42.595 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:42.596 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:42.597 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:59:42.597 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:59:42.599 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:59:42.600 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:59:42.600 +05:30 [INF] Deserializing the notes
2024-12-09 14:59:42.600 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:59:42.601 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7948ms
2024-12-09 14:59:42.602 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:42.606 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.4367ms
2024-12-09 14:59:44.985 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1028 - null null
2024-12-09 14:59:44.988 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:44.989 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1028 - 204 null null 4.4078ms
2024-12-09 14:59:44.990 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1028 - application/json 4
2024-12-09 14:59:44.992 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:44.993 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:59:44.994 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:59:44.995 +05:30 [INF] Received request to toggle trash status for note with ID: 1028
2024-12-09 14:59:44.996 +05:30 [INF] Initiating toggle of trash status for note with ID: 1028 for user ID: 1
2024-12-09 14:59:45.005 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:59:45.009 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:59:45.013 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:59:45.014 +05:30 [INF] Note with ID: 1028 trash status updated to true
2024-12-09 14:59:45.014 +05:30 [INF] Successfully toggled trash status for note with ID: 1028
2024-12-09 14:59:45.018 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:59:45.018 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 23.5835ms
2024-12-09 14:59:45.019 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:59:45.019 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1028 - 200 null application/json; charset=utf-8 29.0763ms
2024-12-09 14:59:46.260 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:59:46.263 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:46.264 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:46.264 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:59:46.265 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:59:46.266 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:59:46.267 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:59:46.268 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:59:46.268 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:59:46.270 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:59:46.271 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:59:46.272 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:59:46.273 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:59:46.274 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:59:46.278 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:59:46.279 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:59:46.279 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.2279ms
2024-12-09 14:59:46.280 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:46.280 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.1124ms
2024-12-09 14:59:48.997 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1028 - application/json 5
2024-12-09 14:59:49.000 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:49.001 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:59:49.001 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:59:49.002 +05:30 [INF] Received request to toggle trash status for note with ID: 1028
2024-12-09 14:59:49.002 +05:30 [INF] Initiating toggle of trash status for note with ID: 1028 for user ID: 1
2024-12-09 14:59:49.004 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:59:49.006 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:59:49.007 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:59:49.008 +05:30 [INF] Note with ID: 1028 trash status updated to false
2024-12-09 14:59:49.009 +05:30 [INF] Successfully toggled trash status for note with ID: 1028
2024-12-09 14:59:49.010 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:59:49.010 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 8.1126ms
2024-12-09 14:59:49.011 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:59:49.016 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1028 - 200 null application/json; charset=utf-8 18.7457ms
2024-12-09 14:59:50.103 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:59:50.106 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:50.107 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7875ms
2024-12-09 14:59:50.109 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:59:50.111 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:50.111 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:50.112 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:59:50.113 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:59:50.114 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:59:50.115 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:59:50.115 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:59:50.121 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:59:50.123 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:59:50.123 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:59:50.124 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:59:50.125 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:59:50.126 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:59:50.126 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:59:50.126 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:59:50.127 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.3226ms
2024-12-09 14:59:50.128 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:50.128 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.2226ms
2024-12-09 14:59:52.566 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1028 - null null
2024-12-09 14:59:52.571 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:52.572 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1028 - 204 null null 6.002ms
2024-12-09 14:59:52.574 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1028 - application/json 4
2024-12-09 14:59:52.576 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:52.576 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:59:52.577 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:59:52.579 +05:30 [INF] Received request to toggle trash status for note with ID: 1028
2024-12-09 14:59:52.580 +05:30 [INF] Initiating toggle of trash status for note with ID: 1028 for user ID: 1
2024-12-09 14:59:52.582 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:59:52.586 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:59:52.589 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 14:59:52.590 +05:30 [INF] Note with ID: 1028 trash status updated to true
2024-12-09 14:59:52.591 +05:30 [INF] Successfully toggled trash status for note with ID: 1028
2024-12-09 14:59:52.591 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:59:52.591 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 12.5775ms
2024-12-09 14:59:52.592 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 14:59:52.593 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1028 - 200 null application/json; charset=utf-8 19.1141ms
2024-12-09 14:59:53.784 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:59:53.785 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:53.786 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:53.787 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:59:53.788 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:59:53.789 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:59:53.790 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:59:53.790 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:59:53.790 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:59:53.791 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:59:53.792 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:59:53.794 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:59:53.794 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 14:59:53.795 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:59:53.795 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:59:53.796 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:59:53.796 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.707ms
2024-12-09 14:59:53.803 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:53.803 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.1843ms
2024-12-09 14:59:55.920 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1028 - null null
2024-12-09 14:59:55.922 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:55.922 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1028 - 204 null null 2.9595ms
2024-12-09 14:59:55.923 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1028 - null null
2024-12-09 14:59:55.925 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:55.925 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 14:59:55.926 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:59:55.926 +05:30 [INF] Received request to delete note with ID: 1028
2024-12-09 14:59:55.927 +05:30 [INF] Initiating deletion of note with ID: 1028 for user ID: 1
2024-12-09 14:59:55.928 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:59:55.931 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 14:59:55.941 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-09 14:59:55.945 +05:30 [INF] Deleted note with 1028 successfully
2024-12-09 14:59:55.946 +05:30 [INF] Successfully deleted note with ID: 1028
2024-12-09 14:59:55.947 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:59:55.947 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 20.9944ms
2024-12-09 14:59:55.948 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 14:59:55.949 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1028 - 200 null application/json; charset=utf-8 25.1029ms
2024-12-09 14:59:57.837 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 14:59:57.839 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:57.840 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.3685ms
2024-12-09 14:59:57.841 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:59:57.842 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:57.843 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:57.843 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:59:57.845 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:59:57.846 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:59:57.847 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 14:59:57.847 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 14:59:57.847 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 14:59:57.849 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 14:59:57.850 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 14:59:57.851 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 14:59:57.852 +05:30 [INF] 1 notes retrieved for user with ID: 1
2024-12-09 14:59:57.852 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 14:59:57.853 +05:30 [INF] Notes retrieved successfully
2024-12-09 14:59:57.853 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:59:57.854 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.1392ms
2024-12-09 14:59:57.859 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:57.860 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.4825ms
2024-12-09 14:59:58.736 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 14:59:58.738 +05:30 [INF] CORS policy execution successful.
2024-12-09 14:59:58.739 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:58.740 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 14:59:58.741 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 14:59:58.742 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 14:59:58.743 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 14:59:58.743 +05:30 [INF] Deserializing the notes
2024-12-09 14:59:58.744 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 14:59:58.744 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 2.9814ms
2024-12-09 14:59:58.745 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 14:59:58.745 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.2146ms
2024-12-09 15:00:00.355 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:00:00.358 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:00.359 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:00.360 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:00.361 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:00:00.362 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:00:00.363 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:00:00.364 +05:30 [INF] Deserializing the notes
2024-12-09 15:00:00.364 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:00:00.365 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2346ms
2024-12-09 15:00:00.366 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:00.367 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.0204ms
2024-12-09 15:00:01.268 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:00:01.271 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:01.272 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:01.273 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:01.274 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:00:01.275 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:00:01.277 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:00:01.281 +05:30 [INF] Deserializing the notes
2024-12-09 15:00:01.282 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:00:01.283 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.7173ms
2024-12-09 15:00:01.284 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:01.284 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.9081ms
2024-12-09 15:00:02.158 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:00:02.161 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:02.161 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:02.162 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:02.163 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:00:02.165 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:00:02.166 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:00:02.167 +05:30 [INF] Deserializing the notes
2024-12-09 15:00:02.167 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:00:02.168 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7966ms
2024-12-09 15:00:02.169 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:02.169 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.3799ms
2024-12-09 15:00:08.909 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:00:08.912 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:08.913 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.2373ms
2024-12-09 15:00:08.914 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 40
2024-12-09 15:00:08.915 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:08.915 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 15:00:08.916 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:08.917 +05:30 [INF] Attempt to create a note
2024-12-09 15:00:08.919 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:00:08.925 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-09 15:00:08.927 +05:30 [INF] Created notes successfully
2024-12-09 15:00:08.927 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 15:00:08.928 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 11.2288ms
2024-12-09 15:00:08.929 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 15:00:08.929 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.852ms
2024-12-09 15:00:08.931 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:00:08.938 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:08.938 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:08.939 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:08.940 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:00:08.941 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:00:08.942 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:00:08.943 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:00:08.943 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:00:08.945 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:00:08.947 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:00:08.948 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:00:08.949 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 15:00:08.950 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:00:08.951 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:00:08.951 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:00:08.952 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.0195ms
2024-12-09 15:00:08.953 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:08.954 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.5786ms
2024-12-09 15:00:11.598 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1029 - null null
2024-12-09 15:00:11.600 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:11.600 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1029 - 204 null null 2.1072ms
2024-12-09 15:00:11.601 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1029 - application/json 4
2024-12-09 15:00:11.602 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:11.603 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:00:11.603 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:11.604 +05:30 [INF] Received request to toggle trash status for note with ID: 1029
2024-12-09 15:00:11.604 +05:30 [INF] Initiating toggle of trash status for note with ID: 1029 for user ID: 1
2024-12-09 15:00:11.607 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:00:11.613 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 15:00:11.616 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 15:00:11.616 +05:30 [INF] Note with ID: 1029 trash status updated to true
2024-12-09 15:00:11.617 +05:30 [INF] Successfully toggled trash status for note with ID: 1029
2024-12-09 15:00:11.618 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:00:11.618 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 14.3268ms
2024-12-09 15:00:11.619 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:00:11.619 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1029 - 200 null application/json; charset=utf-8 18.367ms
2024-12-09 15:00:12.767 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:00:12.769 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:12.770 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:12.770 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:12.771 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:00:12.772 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:00:12.773 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:00:12.773 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:00:12.774 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:00:12.776 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:00:12.777 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:00:12.779 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:00:12.780 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 15:00:12.781 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:00:12.781 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:00:12.782 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:00:12.782 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.2255ms
2024-12-09 15:00:12.787 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:12.788 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.6196ms
2024-12-09 15:00:15.067 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:00:15.071 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:15.071 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.309ms
2024-12-09 15:00:15.073 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:00:15.079 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:15.080 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:15.080 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:15.081 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:00:15.082 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:00:15.083 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:00:15.083 +05:30 [INF] Deserializing the notes
2024-12-09 15:00:15.084 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:00:15.085 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7564ms
2024-12-09 15:00:15.088 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:15.089 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.0057ms
2024-12-09 15:00:16.280 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:00:16.282 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:16.283 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:16.283 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:16.285 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:00:16.286 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:00:16.287 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:00:16.287 +05:30 [INF] Deserializing the notes
2024-12-09 15:00:16.287 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:00:16.288 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.6546ms
2024-12-09 15:00:16.289 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:16.289 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.5338ms
2024-12-09 15:00:17.555 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1029 - null null
2024-12-09 15:00:17.557 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:17.557 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1029 - 204 null null 2.6857ms
2024-12-09 15:00:17.559 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1029 - null null
2024-12-09 15:00:17.560 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:17.560 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 15:00:17.561 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:17.562 +05:30 [INF] Received request to delete note with ID: 1029
2024-12-09 15:00:17.562 +05:30 [INF] Initiating deletion of note with ID: 1029 for user ID: 1
2024-12-09 15:00:17.564 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:00:17.567 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 15:00:17.570 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-09 15:00:17.573 +05:30 [INF] Deleted note with 1029 successfully
2024-12-09 15:00:17.574 +05:30 [INF] Successfully deleted note with ID: 1029
2024-12-09 15:00:17.574 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:00:17.575 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 12.9791ms
2024-12-09 15:00:17.575 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 15:00:17.576 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1029 - 200 null application/json; charset=utf-8 16.9279ms
2024-12-09 15:00:19.211 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:00:19.213 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:19.214 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:19.214 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:19.215 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:00:19.217 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:00:19.218 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:00:19.218 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:00:19.218 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:00:19.220 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:00:19.221 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:00:19.222 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:00:19.227 +05:30 [INF] 1 notes retrieved for user with ID: 1
2024-12-09 15:00:19.228 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:00:19.228 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:00:19.229 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:00:19.229 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.7349ms
2024-12-09 15:00:19.230 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:19.230 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.2988ms
2024-12-09 15:00:20.251 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:00:20.254 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:20.255 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7411ms
2024-12-09 15:00:20.257 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:00:20.258 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:20.259 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:20.260 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:20.263 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:00:20.264 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:00:20.265 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:00:20.265 +05:30 [INF] Deserializing the notes
2024-12-09 15:00:20.265 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:00:20.266 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 2.9994ms
2024-12-09 15:00:20.266 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:20.267 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.1743ms
2024-12-09 15:00:21.889 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:00:21.893 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:21.893 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:21.895 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:21.896 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:00:21.897 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:00:21.899 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:00:21.899 +05:30 [INF] Deserializing the notes
2024-12-09 15:00:21.900 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:00:21.903 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.6524ms
2024-12-09 15:00:21.903 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:21.904 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.8383ms
2024-12-09 15:00:31.718 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:00:31.720 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:31.720 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.653ms
2024-12-09 15:00:31.721 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 38
2024-12-09 15:00:31.723 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:31.724 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 15:00:31.725 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:31.726 +05:30 [INF] Attempt to create a note
2024-12-09 15:00:31.735 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:00:31.742 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-09 15:00:31.743 +05:30 [INF] Created notes successfully
2024-12-09 15:00:31.744 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 15:00:31.744 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 18.4938ms
2024-12-09 15:00:31.745 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 15:00:31.746 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.6448ms
2024-12-09 15:00:31.748 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:00:31.749 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:00:31.750 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:31.754 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:00:31.755 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:00:31.756 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:00:31.757 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:00:31.758 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:00:31.758 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:00:31.760 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:00:31.761 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:00:31.762 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:00:31.764 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 15:00:31.764 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:00:31.765 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:00:31.770 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:00:31.771 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.6102ms
2024-12-09 15:00:31.772 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:00:31.772 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.3833ms
2024-12-09 15:02:12.039 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:02:12.044 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:12.045 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.4325ms
2024-12-09 15:02:12.047 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:12.049 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:12.054 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:12.054 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:12.056 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:12.057 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:12.059 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:12.059 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:12.060 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:12.060 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.1094ms
2024-12-09 15:02:12.061 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:12.062 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.0279ms
2024-12-09 15:02:12.262 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:12.265 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:12.266 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:12.267 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:12.269 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:12.270 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:12.273 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:12.274 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:12.274 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:12.274 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.9041ms
2024-12-09 15:02:12.275 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:12.276 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.716ms
2024-12-09 15:02:15.013 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:15.017 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:15.019 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:15.021 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:15.026 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:15.028 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:15.031 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:15.032 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:15.033 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:15.035 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.9513ms
2024-12-09 15:02:15.036 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:15.038 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:15.039 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.4602ms
2024-12-09 15:02:15.045 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:15.048 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:15.048 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:15.049 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:15.050 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:15.051 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:15.051 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:15.052 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:15.052 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7734ms
2024-12-09 15:02:15.053 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:15.053 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.1034ms
2024-12-09 15:02:17.890 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:02:17.892 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:17.893 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.019ms
2024-12-09 15:02:17.895 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:17.899 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:17.900 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:17.901 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:17.903 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:17.904 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:17.905 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:17.906 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:17.911 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:17.912 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.8328ms
2024-12-09 15:02:17.913 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:17.914 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:17.914 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.8571ms
2024-12-09 15:02:17.916 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:17.918 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:17.919 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:17.920 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:17.922 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:17.928 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:17.929 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:17.930 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:17.932 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.9159ms
2024-12-09 15:02:17.934 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:17.939 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.6783ms
2024-12-09 15:02:23.450 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:02:23.454 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:23.454 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9426ms
2024-12-09 15:02:23.456 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:23.458 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:23.459 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:23.459 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:23.461 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:23.462 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:23.463 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:23.464 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:23.464 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:23.465 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5734ms
2024-12-09 15:02:23.466 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:23.466 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:23.468 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.719ms
2024-12-09 15:02:23.477 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:23.480 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:23.481 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:23.483 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:23.484 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:23.485 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:23.485 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:23.486 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:23.489 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.8536ms
2024-12-09 15:02:23.490 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:23.491 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.5636ms
2024-12-09 15:02:24.485 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:24.487 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:24.488 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:24.488 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:24.490 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:24.491 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:24.492 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:24.492 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:24.493 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:24.494 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4044ms
2024-12-09 15:02:24.495 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:24.495 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:24.503 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:24.504 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.1442ms
2024-12-09 15:02:24.504 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:24.506 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:24.508 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:24.509 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:24.517 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:24.518 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:24.519 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:24.519 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.8838ms
2024-12-09 15:02:24.520 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:24.521 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.1087ms
2024-12-09 15:02:27.918 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:27.921 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:27.922 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:27.922 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:27.924 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:27.925 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:27.926 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:27.927 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:27.927 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:27.932 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.4579ms
2024-12-09 15:02:27.934 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:27.934 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:27.935 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.93ms
2024-12-09 15:02:27.936 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:27.938 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:27.938 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:27.939 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:27.940 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:27.941 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:27.942 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:27.943 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:27.950 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.4152ms
2024-12-09 15:02:27.952 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:27.952 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.1208ms
2024-12-09 15:02:30.016 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:02:30.018 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:30.019 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9379ms
2024-12-09 15:02:30.021 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:30.022 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:30.023 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:30.024 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:30.025 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:30.026 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:30.027 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:30.032 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:30.033 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:30.034 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7692ms
2024-12-09 15:02:30.036 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:30.036 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:30.037 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:30.038 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.3517ms
2024-12-09 15:02:30.039 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:30.041 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:30.042 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:30.043 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:30.049 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:30.049 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:30.050 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:30.051 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5335ms
2024-12-09 15:02:30.052 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:30.053 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.4008ms
2024-12-09 15:02:36.823 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:02:36.826 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:02:36.826 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:36.827 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:36.827 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1113ms
2024-12-09 15:02:36.828 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.5813ms
2024-12-09 15:02:36.829 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:36.836 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:36.837 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:36.838 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:36.839 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:36.840 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:36.841 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:36.842 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:36.843 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:36.845 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.2345ms
2024-12-09 15:02:36.846 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:02:36.846 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:36.848 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:02:36.849 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.4742ms
2024-12-09 15:02:36.849 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:36.851 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:02:36.859 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:02:36.864 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:02:36.865 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:02:36.866 +05:30 [INF] Deserializing the notes
2024-12-09 15:02:36.866 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:02:36.867 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.0862ms
2024-12-09 15:02:36.868 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:02:36.869 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.6692ms
2024-12-09 15:03:01.946 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:03:01.950 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:01.951 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1086ms
2024-12-09 15:03:01.954 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:03:01.956 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:01.957 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:01.958 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:01.960 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:03:01.962 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:03:01.963 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:03:01.967 +05:30 [INF] Deserializing the notes
2024-12-09 15:03:01.967 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:01.968 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.5425ms
2024-12-09 15:03:01.969 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:01.970 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:03:01.970 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.4238ms
2024-12-09 15:03:01.976 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:01.978 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:01.979 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:01.980 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:03:01.981 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:03:01.982 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:03:01.982 +05:30 [INF] Deserializing the notes
2024-12-09 15:03:01.987 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:01.988 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.3651ms
2024-12-09 15:03:01.989 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:01.989 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.8167ms
2024-12-09 15:03:08.337 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:03:08.339 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:08.340 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.2545ms
2024-12-09 15:03:08.343 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:03:08.344 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:08.345 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:08.345 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:08.352 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:03:08.353 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:03:08.354 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:03:08.355 +05:30 [INF] Deserializing the notes
2024-12-09 15:03:08.355 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:08.356 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4309ms
2024-12-09 15:03:08.357 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:08.358 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:03:08.358 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.8159ms
2024-12-09 15:03:08.360 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:08.362 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:08.369 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:08.371 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:03:08.372 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:03:08.373 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:03:08.374 +05:30 [INF] Deserializing the notes
2024-12-09 15:03:08.374 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:08.375 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.159ms
2024-12-09 15:03:08.376 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:08.376 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.6797ms
2024-12-09 15:03:08.822 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:03:08.827 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:08.828 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:08.829 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:08.832 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:03:08.835 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:03:08.839 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:03:08.839 +05:30 [INF] Deserializing the notes
2024-12-09 15:03:08.840 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:08.841 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.3266ms
2024-12-09 15:03:08.842 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:08.842 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:03:08.843 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.8644ms
2024-12-09 15:03:08.844 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:08.847 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:08.848 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:08.849 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:03:08.850 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:03:08.851 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:03:08.851 +05:30 [INF] Deserializing the notes
2024-12-09 15:03:08.852 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:08.853 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4746ms
2024-12-09 15:03:08.854 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:08.854 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.1594ms
2024-12-09 15:03:22.714 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - null null
2024-12-09 15:03:22.717 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:22.718 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1026 - 204 null null 4.0217ms
2024-12-09 15:03:22.721 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - application/json 4
2024-12-09 15:03:22.728 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:22.729 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:03:22.729 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:22.730 +05:30 [INF] Received request to toggle trash status for note with ID: 1026
2024-12-09 15:03:22.731 +05:30 [INF] Initiating toggle of trash status for note with ID: 1026 for user ID: 1
2024-12-09 15:03:22.740 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:03:22.744 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 15:03:22.751 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 15:03:22.752 +05:30 [INF] Note with ID: 1026 trash status updated to true
2024-12-09 15:03:22.753 +05:30 [INF] Successfully toggled trash status for note with ID: 1026
2024-12-09 15:03:22.753 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:22.754 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 23.373ms
2024-12-09 15:03:22.754 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:03:22.755 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1026 - 200 null application/json; charset=utf-8 33.4665ms
2024-12-09 15:03:25.825 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:03:25.828 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:25.828 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.797ms
2024-12-09 15:03:25.831 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:03:25.833 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:25.833 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:25.834 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:25.835 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:03:25.836 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:03:25.836 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:03:25.837 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:03:25.837 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:03:25.838 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:03:25.841 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:03:25.845 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:03:25.846 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 15:03:25.846 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:03:25.847 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:03:25.847 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:25.848 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.1732ms
2024-12-09 15:03:25.851 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:25.852 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.3263ms
2024-12-09 15:03:27.542 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1026 - null null
2024-12-09 15:03:27.547 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:27.547 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1026 - 204 null null 5.5718ms
2024-12-09 15:03:27.548 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1026 - null null
2024-12-09 15:03:27.549 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:27.550 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 15:03:27.550 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:27.551 +05:30 [INF] Received request to delete note with ID: 1026
2024-12-09 15:03:27.551 +05:30 [INF] Initiating deletion of note with ID: 1026 for user ID: 1
2024-12-09 15:03:27.553 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:03:27.558 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 15:03:27.566 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-09 15:03:27.567 +05:30 [INF] Deleted note with 1026 successfully
2024-12-09 15:03:27.568 +05:30 [INF] Successfully deleted note with ID: 1026
2024-12-09 15:03:27.568 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:27.569 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 17.7563ms
2024-12-09 15:03:27.569 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 15:03:27.570 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1026 - 200 null application/json; charset=utf-8 21.3407ms
2024-12-09 15:03:29.344 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:03:29.346 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:29.347 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:29.347 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:29.348 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:03:29.350 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:03:29.351 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:03:29.351 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:03:29.351 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:03:29.353 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:03:29.353 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:03:29.355 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:03:29.355 +05:30 [INF] 1 notes retrieved for user with ID: 1
2024-12-09 15:03:29.361 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:03:29.362 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:03:29.362 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:29.362 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.1973ms
2024-12-09 15:03:29.363 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:29.364 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.5973ms
2024-12-09 15:03:30.549 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:03:30.552 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:30.554 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:30.555 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:30.555 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:03:30.556 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:03:30.557 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:03:30.558 +05:30 [INF] Deserializing the notes
2024-12-09 15:03:30.558 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:30.558 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.0718ms
2024-12-09 15:03:30.559 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:30.560 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.7427ms
2024-12-09 15:03:32.084 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:03:32.087 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:32.088 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.6035ms
2024-12-09 15:03:32.091 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:03:32.094 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:32.095 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:32.096 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:32.097 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:03:32.098 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:03:32.099 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:03:32.099 +05:30 [INF] Deserializing the notes
2024-12-09 15:03:32.099 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:32.100 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.2328ms
2024-12-09 15:03:32.104 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:32.104 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.8462ms
2024-12-09 15:03:41.605 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:03:41.608 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:41.609 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4576ms
2024-12-09 15:03:41.610 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 38
2024-12-09 15:03:41.613 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:41.613 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 15:03:41.614 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:41.615 +05:30 [INF] Attempt to create a note
2024-12-09 15:03:41.618 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:03:41.623 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-09 15:03:41.625 +05:30 [INF] Created notes successfully
2024-12-09 15:03:41.625 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 15:03:41.626 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 11.4245ms
2024-12-09 15:03:41.626 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 15:03:41.627 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.7678ms
2024-12-09 15:03:41.629 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:03:41.634 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:41.634 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:41.635 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:41.636 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:03:41.637 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:03:41.638 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:03:41.638 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:03:41.638 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:03:41.639 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:03:41.640 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:03:41.641 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:03:41.642 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 15:03:41.643 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:03:41.643 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:03:41.644 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:41.644 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.5911ms
2024-12-09 15:03:41.645 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:41.645 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.4368ms
2024-12-09 15:03:42.662 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:03:42.665 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:42.665 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:42.667 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:42.668 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:03:42.669 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:03:42.670 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:03:42.671 +05:30 [INF] Deserializing the notes
2024-12-09 15:03:42.671 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:42.672 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2255ms
2024-12-09 15:03:42.673 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:42.673 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.9052ms
2024-12-09 15:03:44.193 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:03:44.195 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:03:44.196 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:44.197 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:03:44.197 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:03:44.199 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:03:44.200 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:03:44.200 +05:30 [INF] Deserializing the notes
2024-12-09 15:03:44.201 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:03:44.201 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.932ms
2024-12-09 15:03:44.202 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:03:44.203 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.0039ms
2024-12-09 15:04:05.802 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1030 - null null
2024-12-09 15:04:05.807 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:05.808 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1030 - 204 null null 5.2817ms
2024-12-09 15:04:05.809 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1030 - application/json 4
2024-12-09 15:04:05.811 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:05.811 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:04:05.812 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:04:05.814 +05:30 [INF] Received request to toggle trash status for note with ID: 1030
2024-12-09 15:04:05.815 +05:30 [INF] Initiating toggle of trash status for note with ID: 1030 for user ID: 1
2024-12-09 15:04:05.825 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:04:05.827 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 15:04:05.831 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 15:04:05.831 +05:30 [INF] Note with ID: 1030 trash status updated to true
2024-12-09 15:04:05.832 +05:30 [INF] Successfully toggled trash status for note with ID: 1030
2024-12-09 15:04:05.835 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:04:05.836 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 21.6146ms
2024-12-09 15:04:05.837 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:04:05.837 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1030 - 200 null application/json; charset=utf-8 27.7674ms
2024-12-09 15:04:06.962 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:04:06.965 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:06.966 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8319ms
2024-12-09 15:04:06.969 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:04:06.971 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:06.971 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:06.972 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:04:06.974 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:04:06.975 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:04:06.978 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:04:06.979 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:04:06.979 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:04:06.981 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:04:06.983 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:04:06.985 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:04:06.986 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 15:04:06.987 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:04:06.987 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:04:06.988 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:04:06.989 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.9566ms
2024-12-09 15:04:06.990 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:06.995 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.8993ms
2024-12-09 15:04:08.127 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1030 - application/json 5
2024-12-09 15:04:08.129 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:08.129 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:04:08.130 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:04:08.131 +05:30 [INF] Received request to toggle trash status for note with ID: 1030
2024-12-09 15:04:08.131 +05:30 [INF] Initiating toggle of trash status for note with ID: 1030 for user ID: 1
2024-12-09 15:04:08.133 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:04:08.137 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 15:04:08.141 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 15:04:08.143 +05:30 [INF] Note with ID: 1030 trash status updated to false
2024-12-09 15:04:08.144 +05:30 [INF] Successfully toggled trash status for note with ID: 1030
2024-12-09 15:04:08.144 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:04:08.145 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 14.6494ms
2024-12-09 15:04:08.146 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:04:08.146 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1030 - 200 null application/json; charset=utf-8 19.3083ms
2024-12-09 15:04:09.566 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:04:09.567 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:09.568 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:09.569 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:04:09.570 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:04:09.572 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:04:09.573 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:04:09.573 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:04:09.574 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:04:09.575 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:04:09.576 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:04:09.582 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:04:09.583 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 15:04:09.584 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:04:09.585 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:04:09.585 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:04:09.586 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.6263ms
2024-12-09 15:04:09.587 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:09.587 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.049ms
2024-12-09 15:04:10.432 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:04:10.434 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:10.435 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:10.436 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:04:10.437 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:04:10.438 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:04:10.439 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:04:10.442 +05:30 [INF] Deserializing the notes
2024-12-09 15:04:10.443 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:04:10.444 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.4218ms
2024-12-09 15:04:10.444 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:10.445 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.7325ms
2024-12-09 15:04:13.508 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1030 - null null
2024-12-09 15:04:13.511 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:13.511 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1030 - 204 null null 3.36ms
2024-12-09 15:04:13.513 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1030 - application/json 4
2024-12-09 15:04:13.514 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:13.514 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:04:13.515 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:04:13.516 +05:30 [INF] Received request to toggle trash status for note with ID: 1030
2024-12-09 15:04:13.517 +05:30 [INF] Initiating toggle of trash status for note with ID: 1030 for user ID: 1
2024-12-09 15:04:13.519 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:04:13.523 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 15:04:13.525 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 15:04:13.526 +05:30 [INF] Note with ID: 1030 trash status updated to true
2024-12-09 15:04:13.527 +05:30 [INF] Successfully toggled trash status for note with ID: 1030
2024-12-09 15:04:13.528 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:04:13.528 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 11.8027ms
2024-12-09 15:04:13.529 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:04:13.529 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1030 - 200 null application/json; charset=utf-8 16.316ms
2024-12-09 15:04:14.703 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:04:14.704 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:14.705 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.745ms
2024-12-09 15:04:14.707 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:04:14.708 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:14.709 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:14.710 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:04:14.712 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:04:14.713 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:04:14.718 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:04:14.718 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:04:14.718 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:04:14.720 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:04:14.721 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:04:14.723 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:04:14.724 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 15:04:14.725 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:04:14.726 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:04:14.732 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:04:14.732 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.8463ms
2024-12-09 15:04:14.733 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:14.733 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.268ms
2024-12-09 15:04:15.902 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:04:15.905 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:15.905 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:15.906 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:04:15.907 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:04:15.908 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:04:15.910 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:04:15.910 +05:30 [INF] Deserializing the notes
2024-12-09 15:04:15.911 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:04:15.912 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2561ms
2024-12-09 15:04:15.913 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:15.914 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.7818ms
2024-12-09 15:04:17.453 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:04:17.456 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:17.457 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:17.458 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:04:17.459 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:04:17.460 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:04:17.461 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:04:17.461 +05:30 [INF] Deserializing the notes
2024-12-09 15:04:17.462 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:04:17.462 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.5635ms
2024-12-09 15:04:17.463 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:17.464 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.0385ms
2024-12-09 15:04:53.814 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:04:53.825 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:53.826 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.4242ms
2024-12-09 15:04:53.828 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:04:53.830 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:53.831 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:53.832 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:04:53.834 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:04:53.834 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:04:53.836 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:04:53.836 +05:30 [INF] Deserializing the notes
2024-12-09 15:04:53.836 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:04:53.837 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8226ms
2024-12-09 15:04:53.838 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:53.839 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:04:53.843 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.0092ms
2024-12-09 15:04:53.844 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:53.847 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:53.848 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:04:53.849 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:04:53.850 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:04:53.851 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:04:53.851 +05:30 [INF] Deserializing the notes
2024-12-09 15:04:53.852 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:04:53.853 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4195ms
2024-12-09 15:04:53.855 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:04:53.859 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:53.861 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:04:53.862 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.138ms
2024-12-09 15:04:53.863 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:53.865 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:04:53.867 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:04:53.868 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:04:53.869 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:04:53.869 +05:30 [INF] Deserializing the notes
2024-12-09 15:04:53.873 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:04:53.874 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.3579ms
2024-12-09 15:04:53.875 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:04:53.875 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.4062ms
2024-12-09 15:05:20.025 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:05:20.032 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:05:20.033 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.4628ms
2024-12-09 15:05:20.035 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:05:20.037 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:05:20.037 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:20.038 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:05:20.039 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:05:20.040 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:05:20.041 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:05:20.042 +05:30 [INF] Deserializing the notes
2024-12-09 15:05:20.043 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:05:20.044 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9034ms
2024-12-09 15:05:20.045 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:20.050 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.2594ms
2024-12-09 15:05:20.079 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:05:20.080 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:05:20.081 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:20.081 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:05:20.082 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:05:20.083 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:05:20.085 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:05:20.085 +05:30 [INF] Deserializing the notes
2024-12-09 15:05:20.085 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:05:20.086 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9126ms
2024-12-09 15:05:20.086 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:20.087 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.8176ms
2024-12-09 15:05:20.715 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:05:20.718 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:05:20.719 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:20.720 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:05:20.723 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:05:20.724 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:05:20.728 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:05:20.729 +05:30 [INF] Deserializing the notes
2024-12-09 15:05:20.730 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:05:20.731 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.9563ms
2024-12-09 15:05:20.733 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:20.733 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.082ms
2024-12-09 15:05:20.752 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:05:20.754 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:05:20.755 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:20.756 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:05:20.758 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:05:20.759 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:05:20.761 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:05:20.761 +05:30 [INF] Deserializing the notes
2024-12-09 15:05:20.761 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:05:20.762 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4369ms
2024-12-09 15:05:20.763 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:20.763 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.3323ms
2024-12-09 15:05:41.855 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:05:41.862 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:05:41.863 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.8983ms
2024-12-09 15:05:41.865 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:05:41.867 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:05:41.868 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:41.869 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:05:41.870 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:05:41.871 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:05:41.872 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:05:41.873 +05:30 [INF] Deserializing the notes
2024-12-09 15:05:41.876 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:05:41.877 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.5599ms
2024-12-09 15:05:41.878 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:41.879 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.6653ms
2024-12-09 15:05:41.879 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:05:41.886 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:05:41.887 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:41.887 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:05:41.888 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:05:41.893 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:05:41.894 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:05:41.894 +05:30 [INF] Deserializing the notes
2024-12-09 15:05:41.895 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:05:41.895 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.9305ms
2024-12-09 15:05:41.896 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:41.897 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.9272ms
2024-12-09 15:05:46.467 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:05:46.470 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:05:46.470 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:46.471 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:05:46.473 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:05:46.475 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:05:46.476 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:05:46.476 +05:30 [INF] Deserializing the notes
2024-12-09 15:05:46.477 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:05:46.478 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5301ms
2024-12-09 15:05:46.478 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:46.479 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:05:46.483 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.1607ms
2024-12-09 15:05:46.485 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:05:46.486 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:46.487 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:05:46.488 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:05:46.489 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:05:46.490 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:05:46.491 +05:30 [INF] Deserializing the notes
2024-12-09 15:05:46.491 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:05:46.492 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9666ms
2024-12-09 15:05:46.493 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:05:46.493 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.4517ms
2024-12-09 15:06:07.120 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:06:07.124 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:07.126 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.1762ms
2024-12-09 15:06:07.128 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:06:07.130 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:07.131 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:07.133 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:06:07.135 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:06:07.141 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:06:07.142 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:06:07.147 +05:30 [INF] Deserializing the notes
2024-12-09 15:06:07.148 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:06:07.149 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.4626ms
2024-12-09 15:06:07.150 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:07.150 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:06:07.150 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.5451ms
2024-12-09 15:06:07.152 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:07.153 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:07.154 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:06:07.155 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:06:07.160 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:06:07.161 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:06:07.162 +05:30 [INF] Deserializing the notes
2024-12-09 15:06:07.162 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:06:07.163 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.3042ms
2024-12-09 15:06:07.164 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:07.165 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.9713ms
2024-12-09 15:06:12.601 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1030 - null null
2024-12-09 15:06:12.605 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:12.607 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1030 - 204 null null 6.0708ms
2024-12-09 15:06:12.608 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1030 - application/json 4
2024-12-09 15:06:12.609 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:12.610 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:06:12.610 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:06:12.611 +05:30 [INF] Received request to toggle trash status for note with ID: 1030
2024-12-09 15:06:12.611 +05:30 [INF] Initiating toggle of trash status for note with ID: 1030 for user ID: 1
2024-12-09 15:06:12.621 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:06:12.624 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 15:06:12.625 +05:30 [INF] Note with ID: 1030 trash status updated to true
2024-12-09 15:06:12.626 +05:30 [INF] Successfully toggled trash status for note with ID: 1030
2024-12-09 15:06:12.626 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:06:12.627 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 15.9487ms
2024-12-09 15:06:12.628 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:06:12.628 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1030 - 200 null application/json; charset=utf-8 20.2804ms
2024-12-09 15:06:16.114 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:06:16.118 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:16.119 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.42ms
2024-12-09 15:06:16.122 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:06:16.125 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:16.126 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:16.126 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:06:16.127 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:06:16.128 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:06:16.130 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:06:16.131 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:06:16.131 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:06:16.132 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:06:16.133 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:06:16.134 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:06:16.135 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 15:06:16.135 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:06:16.136 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:06:16.137 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:06:16.137 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.079ms
2024-12-09 15:06:16.138 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:16.138 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.7586ms
2024-12-09 15:06:17.751 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1030 - null null
2024-12-09 15:06:17.755 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:17.756 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1030 - 204 null null 5.203ms
2024-12-09 15:06:17.757 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1030 - null null
2024-12-09 15:06:17.758 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:17.758 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 15:06:17.758 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:06:17.759 +05:30 [INF] Received request to delete note with ID: 1030
2024-12-09 15:06:17.759 +05:30 [INF] Initiating deletion of note with ID: 1030 for user ID: 1
2024-12-09 15:06:17.761 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:06:17.763 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 15:06:17.773 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-09 15:06:17.774 +05:30 [INF] Deleted note with 1030 successfully
2024-12-09 15:06:17.774 +05:30 [INF] Successfully deleted note with ID: 1030
2024-12-09 15:06:17.775 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:06:17.775 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 16.0918ms
2024-12-09 15:06:17.776 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 15:06:17.776 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1030 - 200 null application/json; charset=utf-8 19.5527ms
2024-12-09 15:06:19.732 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1030 - null null
2024-12-09 15:06:19.734 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:19.735 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1030 - 204 null null 3.4054ms
2024-12-09 15:06:19.736 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1030 - application/json 5
2024-12-09 15:06:19.738 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:19.738 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:06:19.739 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:06:19.740 +05:30 [INF] Received request to toggle trash status for note with ID: 1030
2024-12-09 15:06:19.740 +05:30 [INF] Initiating toggle of trash status for note with ID: 1030 for user ID: 1
2024-12-09 15:06:19.742 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:06:19.744 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 15:06:19.749 +05:30 [WRN] Note with ID: 1030 not found
2024-12-09 15:06:19.749 +05:30 [ERR] Failed to toggle trash status for note with ID: 1030. Reason: Note not found
2024-12-09 15:06:19.750 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:06:19.751 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 10.9438ms
2024-12-09 15:06:19.751 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:06:19.752 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1030 - 400 null application/json; charset=utf-8 15.6113ms
2024-12-09 15:06:20.963 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:06:20.967 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:20.967 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:20.969 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:06:20.970 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:06:20.971 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:06:20.972 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:06:20.973 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:06:20.973 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:06:20.975 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:06:20.976 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:06:20.978 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:06:20.979 +05:30 [INF] 1 notes retrieved for user with ID: 1
2024-12-09 15:06:20.980 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:06:20.980 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:06:20.981 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:06:20.982 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.3244ms
2024-12-09 15:06:20.988 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:20.988 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.4651ms
2024-12-09 15:06:21.980 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:06:21.983 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:21.984 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8375ms
2024-12-09 15:06:21.985 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:06:21.987 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:21.988 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:21.988 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:06:21.989 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:06:21.990 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:06:21.991 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:06:21.993 +05:30 [INF] Deserializing the notes
2024-12-09 15:06:21.994 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:06:21.994 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1358ms
2024-12-09 15:06:21.995 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:21.995 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.7917ms
2024-12-09 15:06:24.126 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:06:24.130 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:24.130 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:24.131 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:06:24.132 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:06:24.133 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:06:24.134 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:06:24.134 +05:30 [INF] Deserializing the notes
2024-12-09 15:06:24.135 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:06:24.135 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7872ms
2024-12-09 15:06:24.136 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:24.137 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.7473ms
2024-12-09 15:06:24.908 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:06:24.912 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:24.912 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:24.913 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:06:24.914 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:06:24.915 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:06:24.916 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:06:24.917 +05:30 [INF] Deserializing the notes
2024-12-09 15:06:24.917 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:06:24.918 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5386ms
2024-12-09 15:06:24.919 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:24.920 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.6959ms
2024-12-09 15:06:31.463 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:06:31.465 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:31.467 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.806ms
2024-12-09 15:06:31.469 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 37
2024-12-09 15:06:31.470 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:31.470 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 15:06:31.471 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:06:31.472 +05:30 [INF] Attempt to create a note
2024-12-09 15:06:31.474 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:06:31.479 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-09 15:06:31.481 +05:30 [INF] Created notes successfully
2024-12-09 15:06:31.481 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 15:06:31.481 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 9.995ms
2024-12-09 15:06:31.482 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 15:06:31.483 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.0585ms
2024-12-09 15:06:31.484 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:06:31.489 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:06:31.490 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:31.490 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:06:31.491 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:06:31.491 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:06:31.492 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:06:31.492 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:06:31.493 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:06:31.494 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:06:31.495 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:06:31.496 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:06:31.497 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 15:06:31.497 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:06:31.498 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:06:31.498 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:06:31.499 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.2366ms
2024-12-09 15:06:31.499 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:06:31.500 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.618ms
2024-12-09 15:13:05.109 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:13:05.116 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:13:05.116 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.626ms
2024-12-09 15:13:05.118 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:13:05.121 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:13:05.121 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:13:05.122 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:13:05.123 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:13:05.124 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:13:05.125 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:13:05.125 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:13:05.125 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:13:05.152 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:13:05.153 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:13:05.154 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:13:05.155 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 15:13:05.155 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:13:05.156 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:13:05.156 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:13:05.157 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 34.3217ms
2024-12-09 15:13:05.158 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:13:05.158 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.558ms
2024-12-09 15:13:06.428 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:13:06.434 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:13:06.435 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:13:06.435 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:13:06.437 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:13:06.438 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:13:06.439 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:13:06.439 +05:30 [INF] Deserializing the notes
2024-12-09 15:13:06.439 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:13:06.440 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.5202ms
2024-12-09 15:13:06.441 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:13:06.441 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.1484ms
2024-12-09 15:13:09.261 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1031 - null null
2024-12-09 15:13:09.262 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:13:09.263 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1031 - 204 null null 2.1675ms
2024-12-09 15:13:09.264 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1031 - application/json 4
2024-12-09 15:13:09.266 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:13:09.268 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 15:13:09.269 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:13:09.270 +05:30 [INF] Received noteId: 1031, isArchive: True
2024-12-09 15:13:09.270 +05:30 [INF] Received request to toggle archive status for note with ID: 1031
2024-12-09 15:13:09.271 +05:30 [INF] Initiating toggle of archive status for note with ID: 1031 for user ID: 1
2024-12-09 15:13:09.271 +05:30 [INF] Received isArchive value: True
2024-12-09 15:13:09.273 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:13:09.275 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 15:13:09.281 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 15:13:09.282 +05:30 [INF] Note with ID: 1031 archive status updated to true
2024-12-09 15:13:09.282 +05:30 [INF] Successfully toggled archive status for note with ID: 1031
2024-12-09 15:13:09.283 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:13:09.288 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 18.2125ms
2024-12-09 15:13:09.289 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 15:13:09.289 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1031 - 200 null application/json; charset=utf-8 25.2865ms
2024-12-09 15:13:11.676 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1032 - null null
2024-12-09 15:13:11.681 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:13:11.682 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1032 - 204 null null 5.7126ms
2024-12-09 15:13:11.683 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1032 - application/json 4
2024-12-09 15:13:11.684 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:13:11.685 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:13:11.685 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:13:11.686 +05:30 [INF] Received request to toggle trash status for note with ID: 1032
2024-12-09 15:13:11.686 +05:30 [INF] Initiating toggle of trash status for note with ID: 1032 for user ID: 1
2024-12-09 15:13:11.688 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:13:11.690 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 15:13:11.694 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 15:13:11.699 +05:30 [INF] Note with ID: 1032 trash status updated to true
2024-12-09 15:13:11.700 +05:30 [INF] Successfully toggled trash status for note with ID: 1032
2024-12-09 15:13:11.700 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:13:11.700 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 14.6418ms
2024-12-09 15:13:11.701 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 15:13:11.702 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1032 - 200 null application/json; charset=utf-8 18.846ms
2024-12-09 15:13:13.087 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 15:13:13.090 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:13:13.091 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.797ms
2024-12-09 15:13:13.092 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:13:13.094 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:13:13.095 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:13:13.096 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:13:13.097 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:13:13.098 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:13:13.099 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 15:13:13.099 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 15:13:13.099 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 15:13:13.101 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 15:13:13.104 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 15:13:13.105 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 15:13:13.106 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 15:13:13.106 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 15:13:13.106 +05:30 [INF] Notes retrieved successfully
2024-12-09 15:13:13.107 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:13:13.107 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7679ms
2024-12-09 15:13:13.108 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:13:13.108 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.1991ms
2024-12-09 15:13:13.977 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:13:13.979 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:13:13.980 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:13:13.981 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:13:13.982 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:13:13.983 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:13:13.985 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:13:13.985 +05:30 [INF] Deserializing the notes
2024-12-09 15:13:13.986 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:13:13.988 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.5491ms
2024-12-09 15:13:13.989 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:13:13.989 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.229ms
2024-12-09 15:13:15.220 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 15:13:15.224 +05:30 [INF] CORS policy execution successful.
2024-12-09 15:13:15.224 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:13:15.225 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 15:13:15.226 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 15:13:15.227 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 15:13:15.228 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 15:13:15.228 +05:30 [INF] Deserializing the notes
2024-12-09 15:13:15.229 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 15:13:15.229 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.941ms
2024-12-09 15:13:15.230 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 15:13:15.231 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.6489ms
2024-12-09 16:12:18.102 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-09 16:12:18.109 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:12:18.111 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 10.1461ms
2024-12-09 16:12:18.114 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-09 16:12:18.138 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:12:18.139 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 16:12:18.144 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-09 16:12:18.165 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-09 16:12:18.166 +05:30 [INF] Checking if the user present
2024-12-09 16:12:18.167 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-09 16:12:18.208 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-09 16:12:18.216 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-09 16:12:18.217 +05:30 [INF] Verifying the password
2024-12-09 16:12:18.562 +05:30 [INF] Password is valid and token is generated
2024-12-09 16:12:18.564 +05:30 [INF] Login successful
2024-12-09 16:12:18.566 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 16:12:18.569 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 423.8798ms
2024-12-09 16:12:18.575 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 16:12:18.576 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 462.1442ms
2024-12-09 16:12:18.605 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:12:18.614 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:12:18.619 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.9466ms
2024-12-09 16:12:18.622 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:12:18.633 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:12:18.636 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:12:18.638 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:12:18.647 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:12:18.650 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:12:18.651 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 16:12:18.652 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 16:12:18.653 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 16:12:18.658 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:12:18.666 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 16:12:18.670 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 16:12:18.673 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 16:12:18.680 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 16:12:18.682 +05:30 [INF] Notes retrieved successfully
2024-12-09 16:12:18.682 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:12:18.684 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 37.5192ms
2024-12-09 16:12:18.687 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:12:18.696 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 74.1906ms
2024-12-09 16:12:21.716 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:12:21.723 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:12:21.727 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:12:21.729 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:12:21.736 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:12:21.741 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:12:21.745 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:12:21.746 +05:30 [INF] Deserializing the notes
2024-12-09 16:12:21.749 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:12:21.753 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.1473ms
2024-12-09 16:12:21.755 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:12:21.764 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.8986ms
2024-12-09 16:12:23.063 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:12:23.069 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:12:23.074 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:12:23.077 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:12:23.083 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:12:23.088 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:12:23.095 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:12:23.098 +05:30 [INF] Deserializing the notes
2024-12-09 16:12:23.099 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:12:23.100 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.9382ms
2024-12-09 16:12:23.105 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:12:23.106 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.109ms
2024-12-09 16:12:26.087 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:12:26.092 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:12:26.095 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.1961ms
2024-12-09 16:12:26.101 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:12:26.116 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:12:26.119 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:12:26.121 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:12:26.123 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:12:26.126 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:12:26.131 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:12:26.132 +05:30 [INF] Deserializing the notes
2024-12-09 16:12:26.132 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:12:26.134 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.3654ms
2024-12-09 16:12:26.135 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:12:26.136 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.7818ms
2024-12-09 16:19:56.886 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:19:56.891 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:19:56.893 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.0746ms
2024-12-09 16:19:56.897 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:19:56.909 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:19:56.912 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:19:56.916 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:19:56.929 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:19:56.931 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:19:56.935 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 16:19:56.937 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 16:19:56.937 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 16:19:56.997 +05:30 [INF] Executed DbCommand (37ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:19:57.002 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 16:19:57.008 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 16:19:57.010 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 16:19:57.019 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 16:19:57.021 +05:30 [INF] Notes retrieved successfully
2024-12-09 16:19:57.022 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:19:57.025 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 95.9256ms
2024-12-09 16:19:57.026 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:19:57.032 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 135.5607ms
2024-12-09 16:19:58.242 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:19:58.247 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:19:58.248 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:19:58.253 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:19:58.265 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:19:58.273 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:19:58.275 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:19:58.276 +05:30 [INF] Deserializing the notes
2024-12-09 16:19:58.277 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:19:58.279 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.2843ms
2024-12-09 16:19:58.280 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:19:58.281 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 38.9047ms
2024-12-09 16:19:59.271 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:19:59.277 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:19:59.280 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:19:59.282 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:19:59.287 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:19:59.292 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:19:59.297 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:19:59.298 +05:30 [INF] Deserializing the notes
2024-12-09 16:19:59.299 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:19:59.301 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.6751ms
2024-12-09 16:19:59.305 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:19:59.308 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.9462ms
2024-12-09 16:20:00.335 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:20:00.344 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:20:00.348 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:20:00.349 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:20:00.358 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:20:00.361 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:20:00.364 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:20:00.364 +05:30 [INF] Deserializing the notes
2024-12-09 16:20:00.365 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:20:00.375 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.6252ms
2024-12-09 16:20:00.377 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:20:00.378 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.7195ms
2024-12-09 16:20:01.263 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:20:01.271 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:20:01.273 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:20:01.275 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:20:01.278 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:20:01.281 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:20:01.290 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:20:01.292 +05:30 [INF] Deserializing the notes
2024-12-09 16:20:01.293 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:20:01.294 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.7582ms
2024-12-09 16:20:01.296 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:20:01.297 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.4631ms
2024-12-09 16:20:02.334 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:20:02.340 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:20:02.342 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.4793ms
2024-12-09 16:20:02.345 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:20:02.357 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:20:02.360 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:20:02.362 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:20:02.364 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:20:02.365 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:20:02.368 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:20:02.369 +05:30 [INF] Deserializing the notes
2024-12-09 16:20:02.370 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:20:02.376 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.199ms
2024-12-09 16:20:02.378 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:20:02.379 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.1127ms
2024-12-09 16:21:32.902 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:21:32.909 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:21:32.915 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.1832ms
2024-12-09 16:21:32.919 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:21:32.938 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:21:32.939 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:21:32.942 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:21:32.947 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:21:32.949 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:21:32.951 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:21:32.953 +05:30 [INF] Deserializing the notes
2024-12-09 16:21:32.955 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:21:32.956 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.9341ms
2024-12-09 16:21:32.959 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:21:32.960 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.4077ms
2024-12-09 16:21:34.311 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:21:34.316 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:21:34.319 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:21:34.330 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:21:34.333 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:21:34.338 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:21:34.341 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:21:34.342 +05:30 [INF] Deserializing the notes
2024-12-09 16:21:34.342 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:21:34.344 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.513ms
2024-12-09 16:21:34.346 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:21:34.347 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.0857ms
2024-12-09 16:21:36.048 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:21:36.053 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:21:36.056 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:21:36.063 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:21:36.068 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:21:36.076 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:21:36.080 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:21:36.081 +05:30 [INF] Deserializing the notes
2024-12-09 16:21:36.082 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:21:36.083 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.7264ms
2024-12-09 16:21:36.087 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:21:36.092 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.9926ms
2024-12-09 16:21:42.135 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:21:42.139 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:21:42.141 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.9025ms
2024-12-09 16:21:42.145 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:21:42.162 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:21:42.163 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:21:42.164 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:21:42.168 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:21:42.176 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:21:42.179 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:21:42.180 +05:30 [INF] Deserializing the notes
2024-12-09 16:21:42.181 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:21:42.183 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.1902ms
2024-12-09 16:21:42.186 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:21:42.187 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.5088ms
2024-12-09 16:21:43.108 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:21:43.113 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:21:43.115 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:21:43.117 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:21:43.122 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:21:43.130 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:21:43.134 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:21:43.137 +05:30 [INF] Deserializing the notes
2024-12-09 16:21:43.138 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:21:43.139 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.1247ms
2024-12-09 16:21:43.141 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:21:43.142 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.9425ms
2024-12-09 16:21:44.190 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:21:44.194 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:21:44.196 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:21:44.198 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:21:44.203 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:21:44.206 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:21:44.212 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:21:44.212 +05:30 [INF] Deserializing the notes
2024-12-09 16:21:44.213 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:21:44.217 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.645ms
2024-12-09 16:21:44.221 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:21:44.226 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.7893ms
2024-12-09 16:23:12.082 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:23:12.087 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:12.089 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7581ms
2024-12-09 16:23:12.091 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 34
2024-12-09 16:23:12.105 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:12.106 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 16:23:12.107 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:23:12.121 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 16:23:12.163 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 53.7665ms
2024-12-09 16:23:12.169 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 16:23:12.174 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 400 null application/problem+json; charset=utf-8 83.3151ms
2024-12-09 16:23:19.434 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:23:19.442 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:19.444 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.5555ms
2024-12-09 16:23:19.446 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 37
2024-12-09 16:23:19.462 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:19.463 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 16:23:19.464 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:23:19.470 +05:30 [INF] Attempt to create a note
2024-12-09 16:23:19.483 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:23:19.494 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-09 16:23:19.506 +05:30 [INF] Created notes successfully
2024-12-09 16:23:19.508 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 16:23:19.511 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 41.6799ms
2024-12-09 16:23:19.517 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 16:23:19.520 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 74.2587ms
2024-12-09 16:23:19.525 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:23:19.531 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:19.531 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:19.534 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:23:19.536 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:23:19.539 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:23:19.540 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 16:23:19.541 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 16:23:19.542 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 16:23:19.545 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:23:19.556 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 16:23:19.565 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 16:23:19.571 +05:30 [INF] 3 notes retrieved for user with ID: 1
2024-12-09 16:23:19.572 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 16:23:19.573 +05:30 [INF] Notes retrieved successfully
2024-12-09 16:23:19.574 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:23:19.576 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 41.0056ms
2024-12-09 16:23:19.579 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:19.583 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 57.9035ms
2024-12-09 16:23:26.899 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:23:26.906 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:26.907 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.8772ms
2024-12-09 16:23:26.910 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 29
2024-12-09 16:23:26.924 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:26.925 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 16:23:26.926 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:23:26.929 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-12-09 16:23:26.939 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 11.5891ms
2024-12-09 16:23:26.944 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 16:23:26.946 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 400 null application/problem+json; charset=utf-8 36.2823ms
2024-12-09 16:23:29.709 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:23:29.717 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:29.720 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:29.725 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:23:29.732 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:23:29.736 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:23:29.739 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:23:29.740 +05:30 [INF] Deserializing the notes
2024-12-09 16:23:29.743 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:23:29.749 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.6352ms
2024-12-09 16:23:29.751 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:29.752 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.0001ms
2024-12-09 16:23:30.711 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:23:30.716 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:30.718 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:30.723 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:23:30.727 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:23:30.734 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:23:30.737 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:23:30.739 +05:30 [INF] Deserializing the notes
2024-12-09 16:23:30.742 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:23:30.746 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.1865ms
2024-12-09 16:23:30.751 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:30.752 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.2148ms
2024-12-09 16:23:31.480 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:23:31.487 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:31.491 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:31.496 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:23:31.501 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:23:31.507 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:23:31.510 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:23:31.511 +05:30 [INF] Deserializing the notes
2024-12-09 16:23:31.513 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:23:31.519 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.1436ms
2024-12-09 16:23:31.521 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:31.526 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.1003ms
2024-12-09 16:23:34.684 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:23:34.687 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:34.690 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6799ms
2024-12-09 16:23:34.694 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:23:34.702 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:34.703 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:34.704 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:23:34.705 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:23:34.708 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:23:34.718 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:23:34.719 +05:30 [INF] Deserializing the notes
2024-12-09 16:23:34.721 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:23:34.724 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.9234ms
2024-12-09 16:23:34.731 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:34.735 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.4732ms
2024-12-09 16:23:35.627 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:23:35.631 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:35.633 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:35.634 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:23:35.636 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:23:35.640 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:23:35.641 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:23:35.641 +05:30 [INF] Deserializing the notes
2024-12-09 16:23:35.652 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:23:35.657 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.0032ms
2024-12-09 16:23:35.659 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:35.661 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.0719ms
2024-12-09 16:23:36.428 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:23:36.434 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:36.435 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:36.436 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:23:36.440 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:23:36.453 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:23:36.455 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:23:36.456 +05:30 [INF] Deserializing the notes
2024-12-09 16:23:36.457 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:23:36.458 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.1648ms
2024-12-09 16:23:36.460 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:36.469 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.7562ms
2024-12-09 16:23:37.561 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:23:37.571 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:23:37.572 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:37.582 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:23:37.584 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:23:37.587 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:23:37.589 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:23:37.590 +05:30 [INF] Deserializing the notes
2024-12-09 16:23:37.590 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:23:37.592 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.7663ms
2024-12-09 16:23:37.601 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:23:37.602 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.3266ms
2024-12-09 16:24:04.078 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:24:04.082 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:04.084 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.6178ms
2024-12-09 16:24:04.087 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:24:04.103 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:04.104 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:04.105 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:24:04.110 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:24:04.113 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:24:04.116 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:24:04.117 +05:30 [INF] Deserializing the notes
2024-12-09 16:24:04.124 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:24:04.128 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.2257ms
2024-12-09 16:24:04.129 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:04.132 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.1332ms
2024-12-09 16:24:05.435 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:24:05.442 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:05.445 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:05.447 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:24:05.450 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:24:05.452 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:24:05.458 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:24:05.459 +05:30 [INF] Deserializing the notes
2024-12-09 16:24:05.460 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:24:05.461 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.5283ms
2024-12-09 16:24:05.464 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:05.471 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.1085ms
2024-12-09 16:24:06.631 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:24:06.637 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:06.640 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:06.641 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:24:06.652 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:24:06.660 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:24:06.662 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:24:06.663 +05:30 [INF] Deserializing the notes
2024-12-09 16:24:06.664 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:24:06.665 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.0814ms
2024-12-09 16:24:06.671 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:06.673 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.4035ms
2024-12-09 16:24:12.083 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:24:12.088 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:12.094 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.4266ms
2024-12-09 16:24:12.098 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:24:12.118 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:12.120 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:12.124 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:24:12.125 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:24:12.128 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:24:12.133 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:24:12.133 +05:30 [INF] Deserializing the notes
2024-12-09 16:24:12.135 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:24:12.137 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.1374ms
2024-12-09 16:24:12.139 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:12.140 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.2075ms
2024-12-09 16:24:43.862 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-09 16:24:43.877 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:43.880 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 18.8364ms
2024-12-09 16:24:43.883 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-09 16:24:43.896 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:43.897 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 16:24:43.901 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-09 16:24:43.925 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-09 16:24:43.932 +05:30 [INF] Checking if the user present
2024-12-09 16:24:43.936 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-09 16:24:43.947 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-09 16:24:43.953 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-09 16:24:43.957 +05:30 [INF] Verifying the password
2024-12-09 16:24:44.303 +05:30 [INF] Password is valid and token is generated
2024-12-09 16:24:44.304 +05:30 [INF] Login successful
2024-12-09 16:24:44.306 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 16:24:44.309 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 407.0316ms
2024-12-09 16:24:44.313 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 16:24:44.315 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 432.9101ms
2024-12-09 16:24:44.346 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:24:44.354 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:44.358 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.0837ms
2024-12-09 16:24:44.361 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:24:44.376 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:44.379 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:44.381 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:24:44.386 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:24:44.392 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:24:44.394 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:24:44.394 +05:30 [INF] Deserializing the notes
2024-12-09 16:24:44.396 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:24:44.398 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.4644ms
2024-12-09 16:24:44.399 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:44.401 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.7653ms
2024-12-09 16:24:48.757 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:24:48.766 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:48.767 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:48.774 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:24:48.781 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:24:48.785 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:24:48.790 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:24:48.796 +05:30 [INF] Deserializing the notes
2024-12-09 16:24:48.799 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:24:48.800 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.0068ms
2024-12-09 16:24:48.803 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:48.804 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.9459ms
2024-12-09 16:24:49.783 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:24:49.787 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:49.788 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.4174ms
2024-12-09 16:24:49.792 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:24:49.801 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:49.807 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:49.811 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:24:49.814 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:24:49.817 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:24:49.823 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:24:49.827 +05:30 [INF] Deserializing the notes
2024-12-09 16:24:49.828 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:24:49.830 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.0324ms
2024-12-09 16:24:49.831 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:49.832 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.9338ms
2024-12-09 16:24:51.167 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:24:51.172 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:24:51.174 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:51.177 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:24:51.183 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:24:51.185 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:24:51.191 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:24:51.192 +05:30 [INF] Deserializing the notes
2024-12-09 16:24:51.196 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:24:51.202 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.9867ms
2024-12-09 16:24:51.207 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:24:51.210 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.8165ms
2024-12-09 16:30:35.369 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:30:35.377 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:30:35.379 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.2353ms
2024-12-09 16:30:35.383 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:30:35.404 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:30:35.407 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:30:35.415 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:30:35.419 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:30:35.421 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:30:35.424 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 16:30:35.425 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 16:30:35.427 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 16:30:35.474 +05:30 [INF] Executed DbCommand (20ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:30:35.479 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 16:30:35.483 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 16:30:35.494 +05:30 [INF] 3 notes retrieved for user with ID: 1
2024-12-09 16:30:35.495 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 16:30:35.496 +05:30 [INF] Notes retrieved successfully
2024-12-09 16:30:35.498 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:30:35.503 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 84.1848ms
2024-12-09 16:30:35.505 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:30:35.509 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 126.7449ms
2024-12-09 16:30:57.410 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:30:57.413 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:30:57.415 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.9357ms
2024-12-09 16:30:57.418 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:30:57.424 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:30:57.427 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:30:57.433 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:30:57.436 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:30:57.439 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:30:57.442 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:30:57.444 +05:30 [INF] Deserializing the notes
2024-12-09 16:30:57.451 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:30:57.453 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.8326ms
2024-12-09 16:30:57.457 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:30:57.459 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.9096ms
2024-12-09 16:31:11.127 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:31:11.133 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:31:11.135 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.8297ms
2024-12-09 16:31:11.138 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:31:11.149 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:31:11.150 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:31:11.152 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:31:11.155 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:31:11.157 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:31:11.160 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:31:11.162 +05:30 [INF] Deserializing the notes
2024-12-09 16:31:11.163 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:31:11.173 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.9442ms
2024-12-09 16:31:11.176 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:31:11.179 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.235ms
2024-12-09 16:32:03.575 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:32:03.580 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:32:03.581 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6332ms
2024-12-09 16:32:03.596 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:32:03.598 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:32:03.599 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:03.606 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:32:03.635 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:32:03.637 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:32:03.639 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:32:03.640 +05:30 [INF] Deserializing the notes
2024-12-09 16:32:03.644 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:32:03.646 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.3227ms
2024-12-09 16:32:03.656 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:03.663 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:32:03.664 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 68.6487ms
2024-12-09 16:32:03.681 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:32:03.686 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:03.687 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:32:03.690 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:32:03.694 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:32:03.700 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:32:03.702 +05:30 [INF] Deserializing the notes
2024-12-09 16:32:03.704 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:32:03.706 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.0601ms
2024-12-09 16:32:03.708 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:03.710 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.323ms
2024-12-09 16:32:06.386 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:32:06.388 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:32:06.389 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:06.391 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:32:06.394 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:32:06.396 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:32:06.401 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:32:06.402 +05:30 [INF] Deserializing the notes
2024-12-09 16:32:06.402 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:32:06.404 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.2769ms
2024-12-09 16:32:06.405 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:06.417 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.4002ms
2024-12-09 16:32:11.469 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:32:11.473 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:32:11.473 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.0448ms
2024-12-09 16:32:11.477 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:32:11.482 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:32:11.483 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:11.484 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:32:11.486 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:32:11.487 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:32:11.490 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:32:11.491 +05:30 [INF] Deserializing the notes
2024-12-09 16:32:11.491 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:32:11.493 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.1913ms
2024-12-09 16:32:11.494 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:11.495 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.2606ms
2024-12-09 16:32:53.737 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:32:53.743 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:32:53.745 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.9312ms
2024-12-09 16:32:53.766 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:32:53.778 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:32:53.781 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:53.784 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:32:53.800 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:32:53.805 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:32:53.815 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:32:53.818 +05:30 [INF] Deserializing the notes
2024-12-09 16:32:53.819 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:32:53.829 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 29.1824ms
2024-12-09 16:32:53.831 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:32:53.832 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:53.847 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:32:53.849 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 83.6214ms
2024-12-09 16:32:53.852 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:53.856 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:32:53.863 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:32:53.866 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:32:53.868 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:32:53.870 +05:30 [INF] Deserializing the notes
2024-12-09 16:32:53.873 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:32:53.880 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.9723ms
2024-12-09 16:32:53.882 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:53.883 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.1977ms
2024-12-09 16:32:59.625 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:32:59.629 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:32:59.630 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1626ms
2024-12-09 16:32:59.633 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:32:59.637 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:32:59.638 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:59.644 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:32:59.647 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:32:59.649 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:32:59.652 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:32:59.653 +05:30 [INF] Deserializing the notes
2024-12-09 16:32:59.658 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:32:59.660 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.1542ms
2024-12-09 16:32:59.662 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:59.663 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.8292ms
2024-12-09 16:32:59.735 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:32:59.737 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:32:59.739 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:59.740 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:32:59.742 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:32:59.744 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:32:59.749 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:32:59.750 +05:30 [INF] Deserializing the notes
2024-12-09 16:32:59.751 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:32:59.753 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.8871ms
2024-12-09 16:32:59.755 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:32:59.758 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.8921ms
2024-12-09 16:33:03.234 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:33:03.237 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:33:03.240 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:33:03.242 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:33:03.244 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:33:03.247 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:33:03.251 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:33:03.252 +05:30 [INF] Deserializing the notes
2024-12-09 16:33:03.253 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:33:03.256 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.9136ms
2024-12-09 16:33:03.259 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:33:03.260 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.14ms
2024-12-09 16:33:49.605 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:33:49.608 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:33:49.609 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1643ms
2024-12-09 16:33:49.612 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:33:49.617 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:33:49.618 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:33:49.623 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:33:49.626 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:33:49.629 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:33:49.631 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:33:49.632 +05:30 [INF] Deserializing the notes
2024-12-09 16:33:49.633 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:33:49.635 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4432ms
2024-12-09 16:33:49.637 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:33:49.639 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.3936ms
2024-12-09 16:33:49.711 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:33:49.724 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:33:49.725 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:33:49.726 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:33:49.729 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:33:49.731 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:33:49.736 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:33:49.737 +05:30 [INF] Deserializing the notes
2024-12-09 16:33:49.738 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:33:49.740 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.606ms
2024-12-09 16:33:49.742 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:33:49.743 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.143ms
2024-12-09 16:34:01.209 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:34:01.211 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:01.212 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.5919ms
2024-12-09 16:34:01.215 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:34:01.222 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:01.223 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:01.225 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:01.228 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:34:01.230 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:34:01.232 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:34:01.233 +05:30 [INF] Deserializing the notes
2024-12-09 16:34:01.235 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:01.237 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7313ms
2024-12-09 16:34:01.247 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:01.248 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.4774ms
2024-12-09 16:34:01.437 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:34:01.440 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:01.441 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:01.442 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:01.443 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:34:01.445 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:34:01.448 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:34:01.449 +05:30 [INF] Deserializing the notes
2024-12-09 16:34:01.450 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:01.452 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.9104ms
2024-12-09 16:34:01.454 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:01.462 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.4772ms
2024-12-09 16:34:07.317 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:34:07.320 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:07.321 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3842ms
2024-12-09 16:34:07.324 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:34:07.327 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:07.329 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:07.330 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:07.333 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:34:07.340 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:34:07.343 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:34:07.344 +05:30 [INF] Deserializing the notes
2024-12-09 16:34:07.345 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:07.347 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.9483ms
2024-12-09 16:34:07.355 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:07.357 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.8213ms
2024-12-09 16:34:07.424 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:34:07.428 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:07.429 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:07.431 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:07.434 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:34:07.436 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:34:07.441 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:34:07.443 +05:30 [INF] Deserializing the notes
2024-12-09 16:34:07.445 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:07.448 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.9991ms
2024-12-09 16:34:07.450 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:07.452 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.9598ms
2024-12-09 16:34:10.377 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:34:10.381 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:10.383 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:10.385 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:10.387 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:34:10.389 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:34:10.391 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:34:10.392 +05:30 [INF] Deserializing the notes
2024-12-09 16:34:10.403 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:10.405 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.9911ms
2024-12-09 16:34:10.407 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:10.413 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.3213ms
2024-12-09 16:34:10.496 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:34:10.500 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:10.502 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:10.503 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:10.505 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:34:10.506 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:34:10.512 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:34:10.513 +05:30 [INF] Deserializing the notes
2024-12-09 16:34:10.514 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:10.516 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.7021ms
2024-12-09 16:34:10.518 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:10.520 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.8567ms
2024-12-09 16:34:12.229 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:34:12.237 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:12.240 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:12.244 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:12.246 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:34:12.248 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:34:12.250 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:34:12.252 +05:30 [INF] Deserializing the notes
2024-12-09 16:34:12.253 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:12.254 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.9354ms
2024-12-09 16:34:12.256 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:12.257 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.9407ms
2024-12-09 16:34:12.332 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:34:12.335 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:12.337 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.177ms
2024-12-09 16:34:12.340 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:34:12.344 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:12.345 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:12.346 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:12.352 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:34:12.354 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:34:12.357 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:34:12.358 +05:30 [INF] Deserializing the notes
2024-12-09 16:34:12.359 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:12.361 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.9672ms
2024-12-09 16:34:12.363 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:12.365 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.8322ms
2024-12-09 16:34:20.324 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:34:20.328 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:20.330 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.8977ms
2024-12-09 16:34:20.335 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:34:20.338 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:20.344 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:20.346 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:20.349 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:34:20.351 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:34:20.354 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:34:20.355 +05:30 [INF] Deserializing the notes
2024-12-09 16:34:20.356 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:20.364 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.1566ms
2024-12-09 16:34:20.366 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:20.368 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.7655ms
2024-12-09 16:34:20.510 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:34:20.514 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:20.516 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:20.519 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:20.525 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:34:20.528 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:34:20.532 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:34:20.533 +05:30 [INF] Deserializing the notes
2024-12-09 16:34:20.535 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:20.537 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.131ms
2024-12-09 16:34:20.539 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:20.542 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.4908ms
2024-12-09 16:34:23.448 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:34:23.451 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:23.452 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:23.454 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:23.456 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:34:23.458 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:34:23.460 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:34:23.462 +05:30 [INF] Deserializing the notes
2024-12-09 16:34:23.464 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:23.472 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.5289ms
2024-12-09 16:34:23.474 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:23.475 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.9548ms
2024-12-09 16:34:29.083 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:34:29.089 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:29.090 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7184ms
2024-12-09 16:34:29.094 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:34:29.107 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:29.107 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:29.108 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:29.115 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:34:29.117 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:34:29.122 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:34:29.124 +05:30 [INF] Deserializing the notes
2024-12-09 16:34:29.126 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:29.129 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.366ms
2024-12-09 16:34:29.132 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:29.135 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.7202ms
2024-12-09 16:34:32.100 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:34:32.105 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:32.109 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:32.111 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:32.119 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:34:32.126 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:34:32.129 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:34:32.134 +05:30 [INF] Deserializing the notes
2024-12-09 16:34:32.141 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:32.146 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 27.9834ms
2024-12-09 16:34:32.149 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:34:32.152 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.0378ms
2024-12-09 16:34:52.325 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1032 - null null
2024-12-09 16:34:52.329 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:52.330 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1032 - 204 null null 4.6563ms
2024-12-09 16:34:52.332 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1032 - null null
2024-12-09 16:34:52.337 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:34:52.339 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 16:34:52.341 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:34:52.345 +05:30 [INF] Received request to delete note with ID: 1032
2024-12-09 16:34:52.346 +05:30 [INF] Initiating deletion of note with ID: 1032 for user ID: 1
2024-12-09 16:34:52.395 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:34:52.405 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 16:34:52.426 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-09 16:34:52.430 +05:30 [INF] Deleted note with 1032 successfully
2024-12-09 16:34:52.433 +05:30 [INF] Successfully deleted note with ID: 1032
2024-12-09 16:34:52.439 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:34:52.441 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 96.6884ms
2024-12-09 16:34:52.444 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 16:34:52.446 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1032 - 200 null application/json; charset=utf-8 113.6157ms
2024-12-09 16:36:48.840 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:36:48.854 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:36:48.855 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:36:48.855 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:36:48.870 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:36:48.871 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 31.5353ms
2024-12-09 16:36:48.874 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:36:48.877 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:36:48.875 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 21.1946ms
2024-12-09 16:36:48.892 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 36.9561ms
2024-12-09 16:36:48.894 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:36:48.907 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:36:48.908 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:36:48.934 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:36:48.935 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:36:48.937 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 16:36:48.938 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 16:36:48.940 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 16:36:48.963 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:36:48.966 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 16:36:48.971 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 16:36:48.974 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 16:36:48.975 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 16:36:48.976 +05:30 [INF] Notes retrieved successfully
2024-12-09 16:36:48.985 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:36:48.986 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 52.8482ms
2024-12-09 16:36:48.988 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:36:48.988 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:36:48.989 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 112.7274ms
2024-12-09 16:36:48.992 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:36:49.001 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:36:49.002 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:36:49.004 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:36:49.005 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:36:49.007 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:36:49.008 +05:30 [INF] Deserializing the notes
2024-12-09 16:36:49.008 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:36:49.009 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.7349ms
2024-12-09 16:36:49.011 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:36:49.011 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:36:49.015 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.9195ms
2024-12-09 16:36:49.021 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:36:49.025 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:36:49.026 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:36:49.029 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:36:49.034 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:36:49.036 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:36:49.037 +05:30 [INF] Deserializing the notes
2024-12-09 16:36:49.038 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:36:49.040 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.5143ms
2024-12-09 16:36:49.041 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:36:49.043 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.0821ms
2024-12-09 16:36:51.052 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:36:51.055 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:36:51.058 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:36:51.060 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:36:51.064 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:36:51.067 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:36:51.072 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:36:51.076 +05:30 [INF] Deserializing the notes
2024-12-09 16:36:51.077 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:36:51.089 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.7856ms
2024-12-09 16:36:51.090 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:36:51.092 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.6559ms
2024-12-09 16:36:54.766 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1033 - null null
2024-12-09 16:36:54.769 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:36:54.770 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1033 - 204 null null 4.6516ms
2024-12-09 16:36:54.772 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1033 - application/json 4
2024-12-09 16:36:54.778 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:36:54.779 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 16:36:54.783 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:36:54.790 +05:30 [INF] Received request to toggle trash status for note with ID: 1033
2024-12-09 16:36:54.793 +05:30 [INF] Initiating toggle of trash status for note with ID: 1033 for user ID: 1
2024-12-09 16:36:54.803 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:36:54.816 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 16:36:54.827 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 16:36:54.832 +05:30 [INF] Note with ID: 1033 trash status updated to true
2024-12-09 16:36:54.839 +05:30 [INF] Successfully toggled trash status for note with ID: 1033
2024-12-09 16:36:54.849 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:36:54.852 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 62.4788ms
2024-12-09 16:36:54.854 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 16:36:54.855 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1033 - 200 null application/json; charset=utf-8 83.1581ms
2024-12-09 16:37:01.962 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:37:01.964 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:37:01.965 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.0693ms
2024-12-09 16:37:01.973 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:37:01.977 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:37:01.979 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:37:01.980 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:37:01.981 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:37:01.983 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:37:01.985 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 16:37:01.986 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 16:37:01.987 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 16:37:02.003 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:37:02.006 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 16:37:02.010 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 16:37:02.018 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 16:37:02.019 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 16:37:02.020 +05:30 [INF] Notes retrieved successfully
2024-12-09 16:37:02.021 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:37:02.023 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 41.8941ms
2024-12-09 16:37:02.025 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:37:02.025 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:37:02.027 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.2176ms
2024-12-09 16:37:02.035 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:37:02.038 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:37:02.039 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:37:02.041 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:37:02.044 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:37:02.045 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:37:02.046 +05:30 [INF] Deserializing the notes
2024-12-09 16:37:02.047 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:37:02.048 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.9493ms
2024-12-09 16:37:02.049 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:37:02.050 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.1188ms
2024-12-09 16:37:06.029 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:37:06.034 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:37:06.035 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:37:06.038 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:37:06.045 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:37:06.048 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:37:06.051 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:37:06.053 +05:30 [INF] Deserializing the notes
2024-12-09 16:37:06.055 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:37:06.058 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.2549ms
2024-12-09 16:37:06.060 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:37:06.062 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.6494ms
2024-12-09 16:37:08.744 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1033 - null null
2024-12-09 16:37:08.748 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:37:08.749 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1033 - 204 null null 5.2073ms
2024-12-09 16:37:08.752 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1033 - null null
2024-12-09 16:37:08.761 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:37:08.763 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 16:37:08.768 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:37:08.777 +05:30 [INF] Received request to delete note with ID: 1033
2024-12-09 16:37:08.778 +05:30 [INF] Initiating deletion of note with ID: 1033 for user ID: 1
2024-12-09 16:37:08.787 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:37:08.798 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 16:37:08.823 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-09 16:37:08.830 +05:30 [INF] Deleted note with 1033 successfully
2024-12-09 16:37:08.835 +05:30 [INF] Successfully deleted note with ID: 1033
2024-12-09 16:37:08.836 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:37:08.837 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 60.2456ms
2024-12-09 16:37:08.841 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 16:37:08.845 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1033 - 200 null application/json; charset=utf-8 93.4523ms
2024-12-09 16:37:18.442 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:37:18.445 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:37:18.447 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.0754ms
2024-12-09 16:37:18.450 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:37:18.464 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:37:18.466 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:37:18.469 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:37:18.476 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:37:18.481 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:37:18.487 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 16:37:18.488 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 16:37:18.489 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 16:37:18.495 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:37:18.497 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 16:37:18.501 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 16:37:18.509 +05:30 [INF] 1 notes retrieved for user with ID: 1
2024-12-09 16:37:18.510 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 16:37:18.519 +05:30 [INF] Notes retrieved successfully
2024-12-09 16:37:18.520 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:37:18.522 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 46.0351ms
2024-12-09 16:37:18.524 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:37:18.526 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 75.5649ms
2024-12-09 16:38:13.225 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:38:13.234 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:38:13.236 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.1882ms
2024-12-09 16:38:13.240 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:38:13.254 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:38:13.256 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:38:13.257 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:38:13.260 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:38:13.267 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:38:13.269 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:38:13.271 +05:30 [INF] Deserializing the notes
2024-12-09 16:38:13.272 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:38:13.274 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.7884ms
2024-12-09 16:38:13.276 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:38:13.278 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.8107ms
2024-12-09 16:38:13.379 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:38:13.383 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:38:13.384 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:38:13.385 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:38:13.387 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:38:13.389 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:38:13.394 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:38:13.394 +05:30 [INF] Deserializing the notes
2024-12-09 16:38:13.396 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:38:13.397 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.9994ms
2024-12-09 16:38:13.400 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:38:13.402 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.7101ms
2024-12-09 16:39:26.045 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:39:26.057 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:39:26.060 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.68ms
2024-12-09 16:39:26.064 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:39:26.071 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:39:26.073 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:26.074 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:39:26.081 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:39:26.083 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:39:26.085 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:39:26.087 +05:30 [INF] Deserializing the notes
2024-12-09 16:39:26.087 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:39:26.089 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.222ms
2024-12-09 16:39:26.096 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:26.098 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.6129ms
2024-12-09 16:39:26.225 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:39:26.228 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:39:26.229 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:26.231 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:39:26.233 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:39:26.235 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:39:26.238 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:39:26.238 +05:30 [INF] Deserializing the notes
2024-12-09 16:39:26.245 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:39:26.247 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.2296ms
2024-12-09 16:39:26.249 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:26.250 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.8435ms
2024-12-09 16:39:27.866 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:39:27.869 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:39:27.871 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:27.872 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:39:27.879 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:39:27.881 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:39:27.884 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:39:27.885 +05:30 [INF] Deserializing the notes
2024-12-09 16:39:27.886 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:39:27.888 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5532ms
2024-12-09 16:39:27.890 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:27.892 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.8314ms
2024-12-09 16:39:28.065 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:39:28.069 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:39:28.070 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:28.072 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:39:28.079 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:39:28.082 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:39:28.083 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:39:28.084 +05:30 [INF] Deserializing the notes
2024-12-09 16:39:28.085 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:39:28.088 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7954ms
2024-12-09 16:39:28.094 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:28.099 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.1025ms
2024-12-09 16:39:33.278 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:39:33.281 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:39:33.282 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4346ms
2024-12-09 16:39:33.286 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:39:33.290 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:39:33.291 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:33.298 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:39:33.301 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:39:33.303 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:39:33.305 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:39:33.307 +05:30 [INF] Deserializing the notes
2024-12-09 16:39:33.308 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:39:33.310 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4923ms
2024-12-09 16:39:33.311 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:33.319 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.4013ms
2024-12-09 16:39:33.404 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:39:33.408 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:39:33.409 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:33.410 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:39:33.412 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:39:33.413 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:39:33.416 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:39:33.417 +05:30 [INF] Deserializing the notes
2024-12-09 16:39:33.418 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:39:33.419 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.5338ms
2024-12-09 16:39:33.421 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:33.427 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.027ms
2024-12-09 16:39:37.517 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:39:37.521 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:39:37.522 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:37.523 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:39:37.526 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:39:37.527 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:39:37.529 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:39:37.530 +05:30 [INF] Deserializing the notes
2024-12-09 16:39:37.532 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:39:37.533 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.3857ms
2024-12-09 16:39:37.535 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:37.536 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.197ms
2024-12-09 16:39:37.608 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:39:37.612 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:39:37.613 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:37.615 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:39:37.617 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:39:37.618 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:39:37.626 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:39:37.627 +05:30 [INF] Deserializing the notes
2024-12-09 16:39:37.628 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:39:37.629 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.4012ms
2024-12-09 16:39:37.631 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:39:37.632 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.1095ms
2024-12-09 16:40:19.296 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:40:19.300 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:40:19.301 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.3969ms
2024-12-09 16:40:19.304 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:40:19.309 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:40:19.311 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:40:19.313 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:40:19.365 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:40:19.375 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:40:19.377 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:40:19.383 +05:30 [INF] Deserializing the notes
2024-12-09 16:40:19.387 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:40:19.389 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 23.9686ms
2024-12-09 16:40:19.400 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:40:19.411 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 107.1263ms
2024-12-09 16:40:19.455 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:40:19.458 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:40:19.460 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:40:19.462 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:40:19.463 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:40:19.466 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:40:19.470 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:40:19.471 +05:30 [INF] Deserializing the notes
2024-12-09 16:40:19.471 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:40:19.473 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7256ms
2024-12-09 16:40:19.476 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:40:19.477 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.7746ms
2024-12-09 16:40:29.900 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:40:29.903 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:40:29.905 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.7356ms
2024-12-09 16:40:29.907 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:40:29.911 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:40:29.912 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:40:29.913 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:40:29.916 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:40:29.918 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:40:29.920 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:40:29.922 +05:30 [INF] Deserializing the notes
2024-12-09 16:40:29.924 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:40:29.932 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.1321ms
2024-12-09 16:40:29.934 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:40:29.936 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.6107ms
2024-12-09 16:40:29.996 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:40:29.999 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:40:30.001 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:40:30.002 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:40:30.005 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:40:30.011 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:40:30.014 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:40:30.015 +05:30 [INF] Deserializing the notes
2024-12-09 16:40:30.016 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:40:30.018 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.1302ms
2024-12-09 16:40:30.020 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:40:30.022 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.1318ms
2024-12-09 16:40:36.865 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:40:36.869 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:40:36.870 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.396ms
2024-12-09 16:40:36.873 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:40:36.878 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:40:36.882 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:40:36.884 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:40:36.887 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:40:36.891 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:40:36.898 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:40:36.899 +05:30 [INF] Deserializing the notes
2024-12-09 16:40:36.901 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:40:36.904 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.7398ms
2024-12-09 16:40:36.907 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:40:36.909 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.2172ms
2024-12-09 16:40:37.065 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:40:37.070 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:40:37.071 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:40:37.073 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:40:37.076 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:40:37.082 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:40:37.085 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:40:37.086 +05:30 [INF] Deserializing the notes
2024-12-09 16:40:37.088 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:40:37.089 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.9535ms
2024-12-09 16:40:37.091 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:40:37.097 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.4366ms
2024-12-09 16:41:07.728 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:41:07.731 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:41:07.731 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6323ms
2024-12-09 16:41:07.740 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:41:07.799 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:41:07.800 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:41:07.801 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:41:07.803 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:41:07.805 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:41:07.807 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:41:07.812 +05:30 [INF] Deserializing the notes
2024-12-09 16:41:07.813 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:41:07.814 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.1092ms
2024-12-09 16:41:07.820 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:41:07.823 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:41:07.831 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 91.4474ms
2024-12-09 16:41:07.847 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:41:07.851 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:41:07.852 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:41:07.857 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:41:07.860 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:41:07.862 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:41:07.863 +05:30 [INF] Deserializing the notes
2024-12-09 16:41:07.864 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:41:07.865 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.4335ms
2024-12-09 16:41:07.867 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:41:07.868 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.3103ms
2024-12-09 16:41:48.433 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:41:48.444 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:41:48.446 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.1917ms
2024-12-09 16:41:48.446 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:41:48.455 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:41:48.462 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:41:48.466 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:41:48.467 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 20.9826ms
2024-12-09 16:41:48.468 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:41:48.478 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:41:48.481 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:41:48.483 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:41:48.486 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:41:48.488 +05:30 [INF] Deserializing the notes
2024-12-09 16:41:48.489 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:41:48.491 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.715ms
2024-12-09 16:41:48.493 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:41:48.494 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:41:48.500 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.9933ms
2024-12-09 16:41:48.503 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:41:48.508 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:41:48.510 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:41:48.514 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:41:48.520 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:41:48.523 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:41:48.524 +05:30 [INF] Deserializing the notes
2024-12-09 16:41:48.526 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:41:48.529 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.0153ms
2024-12-09 16:41:48.531 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:41:48.533 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 39.2341ms
2024-12-09 16:41:52.591 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:41:52.596 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:41:52.598 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:41:52.599 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:41:52.601 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:41:52.607 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:41:52.610 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:41:52.612 +05:30 [INF] Deserializing the notes
2024-12-09 16:41:52.613 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:41:52.614 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.8069ms
2024-12-09 16:41:52.620 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:41:52.622 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.2896ms
2024-12-09 16:42:28.359 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:42:28.370 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:42:28.371 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.2628ms
2024-12-09 16:42:28.375 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:42:28.388 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:42:28.389 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:42:28.390 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:42:28.393 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:42:28.396 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:42:28.401 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 16:42:28.402 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 16:42:28.403 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 16:42:28.438 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:42:28.441 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 16:42:28.445 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 16:42:28.449 +05:30 [INF] 1 notes retrieved for user with ID: 1
2024-12-09 16:42:28.456 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 16:42:28.458 +05:30 [INF] Notes retrieved successfully
2024-12-09 16:42:28.459 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:42:28.462 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 68.5702ms
2024-12-09 16:42:28.464 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:42:28.466 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 90.8634ms
2024-12-09 16:42:28.667 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:42:28.671 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:42:28.672 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:42:28.672 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:42:28.674 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:42:28.675 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:42:28.678 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:42:28.679 +05:30 [INF] Deserializing the notes
2024-12-09 16:42:28.680 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:42:28.682 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.91ms
2024-12-09 16:42:28.684 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:42:28.685 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.4746ms
2024-12-09 16:45:10.603 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:45:10.606 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:45:10.607 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8691ms
2024-12-09 16:45:10.615 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:45:10.620 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:45:10.622 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:45:10.624 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:45:10.626 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:45:10.628 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:45:10.630 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:45:10.631 +05:30 [INF] Deserializing the notes
2024-12-09 16:45:10.632 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:45:10.636 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7362ms
2024-12-09 16:45:10.637 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:45:10.639 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.1536ms
2024-12-09 16:45:32.448 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:45:32.453 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:45:32.454 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.0492ms
2024-12-09 16:45:32.457 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:45:32.461 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:45:32.462 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:45:32.463 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:45:32.465 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:45:32.467 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:45:32.473 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:45:32.474 +05:30 [INF] Deserializing the notes
2024-12-09 16:45:32.475 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:45:32.476 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.0972ms
2024-12-09 16:45:32.478 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:45:32.480 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.8709ms
2024-12-09 16:45:46.533 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:45:46.538 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:45:46.539 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7127ms
2024-12-09 16:45:46.541 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:45:46.544 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:45:46.545 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:45:46.546 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:45:46.555 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:45:46.557 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:45:46.559 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:45:46.562 +05:30 [INF] Deserializing the notes
2024-12-09 16:45:46.567 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:45:46.571 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.4848ms
2024-12-09 16:45:46.573 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:45:46.576 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.5015ms
2024-12-09 16:46:13.395 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:46:13.399 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:46:13.400 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.6504ms
2024-12-09 16:46:13.403 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:46:13.409 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:46:13.410 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:46:13.411 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:46:13.413 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:46:13.415 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:46:13.419 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:46:13.422 +05:30 [INF] Deserializing the notes
2024-12-09 16:46:13.423 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:46:13.425 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.9044ms
2024-12-09 16:46:13.428 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:46:13.438 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.4824ms
2024-12-09 16:46:20.137 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:46:20.140 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:46:20.141 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.4453ms
2024-12-09 16:46:20.147 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:46:20.150 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:46:20.160 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:46:20.163 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:46:20.165 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:46:20.167 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:46:20.170 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:46:20.171 +05:30 [INF] Deserializing the notes
2024-12-09 16:46:20.172 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:46:20.178 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.4203ms
2024-12-09 16:46:20.180 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:46:20.181 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.9343ms
2024-12-09 16:49:29.947 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:49:29.952 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:49:29.953 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.0043ms
2024-12-09 16:49:29.967 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:49:29.973 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:49:29.974 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:49:29.976 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:49:29.978 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:49:29.983 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:49:29.985 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 16:49:29.987 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 16:49:29.988 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 16:49:30.011 +05:30 [INF] Executed DbCommand (19ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:49:30.013 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 16:49:30.017 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 16:49:30.031 +05:30 [INF] 1 notes retrieved for user with ID: 1
2024-12-09 16:49:30.032 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 16:49:30.034 +05:30 [INF] Notes retrieved successfully
2024-12-09 16:49:30.035 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:49:30.050 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 72.4777ms
2024-12-09 16:49:30.058 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:49:30.064 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 97.491ms
2024-12-09 16:49:42.505 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:49:42.517 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:49:42.518 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.7618ms
2024-12-09 16:49:42.533 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:49:42.536 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:49:42.538 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:49:42.539 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:49:42.542 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:49:42.544 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:49:42.548 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:49:42.549 +05:30 [INF] Deserializing the notes
2024-12-09 16:49:42.550 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:49:42.552 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.0982ms
2024-12-09 16:49:42.554 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:49:42.556 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.1423ms
2024-12-09 16:50:53.401 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:50:53.411 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:50:53.412 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.641ms
2024-12-09 16:50:53.418 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:50:53.423 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:50:53.424 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:50:53.425 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:50:53.428 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:50:53.429 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:50:53.431 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:50:53.432 +05:30 [INF] Deserializing the notes
2024-12-09 16:50:53.432 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:50:53.434 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.2116ms
2024-12-09 16:50:53.435 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:50:53.436 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.5556ms
2024-12-09 16:51:15.841 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:51:15.846 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:51:15.848 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.2081ms
2024-12-09 16:51:15.858 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 48
2024-12-09 16:51:15.871 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:51:15.872 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 16:51:15.875 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:51:15.883 +05:30 [INF] Attempt to create a note
2024-12-09 16:51:15.911 +05:30 [INF] Executed DbCommand (19ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:51:15.927 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-09 16:51:15.930 +05:30 [INF] Created notes successfully
2024-12-09 16:51:15.936 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 16:51:15.937 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 54.9655ms
2024-12-09 16:51:15.939 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 16:51:15.941 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 82.8049ms
2024-12-09 16:51:15.949 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:51:15.957 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:51:15.965 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:51:15.969 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:51:15.971 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:51:15.973 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:51:15.977 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 16:51:15.977 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 16:51:15.978 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 16:51:15.981 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:51:15.983 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 16:51:15.988 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 16:51:15.993 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 16:51:15.994 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 16:51:15.996 +05:30 [INF] Notes retrieved successfully
2024-12-09 16:51:15.997 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:51:15.998 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 27.7725ms
2024-12-09 16:51:16.002 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:51:16.003 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.856ms
2024-12-09 16:51:42.868 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:51:42.874 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:51:42.878 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.7398ms
2024-12-09 16:51:42.883 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/notes - application/json 54
2024-12-09 16:51:42.889 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:51:42.897 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 16:51:42.902 +05:30 [INF] Route matched with {action = "CreateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateNote(Models.DTOs.NoteDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:51:42.905 +05:30 [INF] Attempt to create a note
2024-12-09 16:51:42.926 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:51:42.942 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Notes] ([Color], [Description], [IsArchive], [IsTrash], [Title], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-12-09 16:51:42.952 +05:30 [INF] Created notes successfully
2024-12-09 16:51:42.953 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 16:51:42.954 +05:30 [INF] Executed action FunDo.Controllers.NoteController.CreateNote (FunDooNotes) in 49.9988ms
2024-12-09 16:51:42.956 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.CreateNote (FunDooNotes)'
2024-12-09 16:51:42.957 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 74.9898ms
2024-12-09 16:51:42.963 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:51:42.965 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:51:42.966 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:51:42.967 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:51:42.969 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:51:42.978 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:51:42.980 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 16:51:42.981 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 16:51:42.982 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 16:51:42.986 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:51:42.993 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 16:51:42.998 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 16:51:43.001 +05:30 [INF] 3 notes retrieved for user with ID: 1
2024-12-09 16:51:43.011 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 16:51:43.014 +05:30 [INF] Notes retrieved successfully
2024-12-09 16:51:43.015 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:51:43.016 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 47.3337ms
2024-12-09 16:51:43.022 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:51:43.023 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 60.357ms
2024-12-09 16:52:32.154 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:52:32.172 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:52:32.173 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 18.8966ms
2024-12-09 16:52:32.177 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:52:32.185 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:52:32.186 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:52:32.187 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:52:32.189 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:52:32.191 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:52:32.192 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:52:32.195 +05:30 [INF] Deserializing the notes
2024-12-09 16:52:32.197 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:52:32.202 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.3006ms
2024-12-09 16:52:32.204 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:52:32.206 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.1268ms
2024-12-09 16:52:34.657 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:52:34.662 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:52:34.664 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:52:34.665 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:52:34.668 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:52:34.676 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:52:34.677 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:52:34.678 +05:30 [INF] Deserializing the notes
2024-12-09 16:52:34.679 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:52:34.680 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.455ms
2024-12-09 16:52:34.682 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:52:34.683 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.8891ms
2024-12-09 16:52:41.573 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:52:41.576 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:52:41.578 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.7538ms
2024-12-09 16:52:41.581 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:52:41.584 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:52:41.588 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:52:41.590 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:52:41.592 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:52:41.594 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:52:41.596 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:52:41.597 +05:30 [INF] Deserializing the notes
2024-12-09 16:52:41.598 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:52:41.600 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.8778ms
2024-12-09 16:52:41.602 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:52:41.603 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.106ms
2024-12-09 16:52:44.848 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:52:44.853 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:52:44.854 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:52:44.856 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:52:44.858 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:52:44.859 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:52:44.861 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:52:44.864 +05:30 [INF] Deserializing the notes
2024-12-09 16:52:44.875 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:52:44.877 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.0722ms
2024-12-09 16:52:44.879 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:52:44.881 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.6109ms
2024-12-09 16:52:50.219 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:52:50.224 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:52:50.226 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.6487ms
2024-12-09 16:52:50.229 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:52:50.238 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:52:50.239 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:52:50.240 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:52:50.243 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:52:50.245 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:52:50.247 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:52:50.248 +05:30 [INF] Deserializing the notes
2024-12-09 16:52:50.254 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:52:50.257 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.265ms
2024-12-09 16:52:50.259 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:52:50.261 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.0064ms
2024-12-09 16:57:12.394 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:57:12.396 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:57:12.397 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6278ms
2024-12-09 16:57:12.400 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:57:12.405 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:57:12.406 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:57:12.408 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:57:12.410 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:57:12.412 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:57:12.419 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 16:57:12.420 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 16:57:12.422 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 16:57:12.461 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 16:57:12.465 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 16:57:12.469 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 16:57:12.473 +05:30 [INF] 3 notes retrieved for user with ID: 1
2024-12-09 16:57:12.474 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 16:57:12.475 +05:30 [INF] Notes retrieved successfully
2024-12-09 16:57:12.486 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:57:12.488 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 78.0807ms
2024-12-09 16:57:12.493 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:57:12.494 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 93.7695ms
2024-12-09 16:57:15.748 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:57:15.751 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:57:15.753 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:57:15.754 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:57:15.756 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:57:15.758 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:57:15.760 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:57:15.765 +05:30 [INF] Deserializing the notes
2024-12-09 16:57:15.767 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:57:15.769 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.0474ms
2024-12-09 16:57:15.771 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:57:15.772 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.061ms
2024-12-09 16:57:17.694 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:57:17.698 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:57:17.699 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.8721ms
2024-12-09 16:57:17.703 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:57:17.710 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:57:17.712 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:57:17.713 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:57:17.716 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:57:17.718 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:57:17.720 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:57:17.721 +05:30 [INF] Deserializing the notes
2024-12-09 16:57:17.722 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:57:17.724 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.355ms
2024-12-09 16:57:17.726 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:57:17.737 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.4945ms
2024-12-09 16:57:19.203 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:57:19.207 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:57:19.208 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:57:19.209 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:57:19.212 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:57:19.214 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:57:19.217 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:57:19.218 +05:30 [INF] Deserializing the notes
2024-12-09 16:57:19.219 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:57:19.226 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.8433ms
2024-12-09 16:57:19.228 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:57:19.230 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.6947ms
2024-12-09 16:58:14.784 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:58:14.788 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:58:14.789 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8553ms
2024-12-09 16:58:14.792 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:58:14.801 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:58:14.803 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:58:14.805 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:58:14.807 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:58:14.809 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:58:14.811 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:58:14.813 +05:30 [INF] Deserializing the notes
2024-12-09 16:58:14.820 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:58:14.822 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.0035ms
2024-12-09 16:58:14.824 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:58:14.828 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.0669ms
2024-12-09 16:58:19.899 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:58:19.903 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:58:19.904 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2987ms
2024-12-09 16:58:19.908 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:58:19.917 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:58:19.918 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:58:19.919 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:58:19.921 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:58:19.922 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:58:19.923 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:58:19.924 +05:30 [INF] Deserializing the notes
2024-12-09 16:58:19.925 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:58:19.927 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.2415ms
2024-12-09 16:58:19.929 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:58:19.930 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.2851ms
2024-12-09 16:59:42.645 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:59:42.649 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:59:42.650 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2477ms
2024-12-09 16:59:42.653 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:59:42.656 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:59:42.657 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:59:42.659 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:59:42.666 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:59:42.668 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:59:42.670 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:59:42.671 +05:30 [INF] Deserializing the notes
2024-12-09 16:59:42.672 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:59:42.674 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.1952ms
2024-12-09 16:59:42.683 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:59:42.685 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.7801ms
2024-12-09 16:59:49.159 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 16:59:49.163 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:59:49.164 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.7207ms
2024-12-09 16:59:49.169 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 16:59:49.171 +05:30 [INF] CORS policy execution successful.
2024-12-09 16:59:49.172 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:59:49.173 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 16:59:49.182 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 16:59:49.185 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 16:59:49.188 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 16:59:49.189 +05:30 [INF] Deserializing the notes
2024-12-09 16:59:49.191 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 16:59:49.198 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.1772ms
2024-12-09 16:59:49.199 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 16:59:49.200 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.8084ms
2024-12-09 17:00:11.179 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:00:11.183 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:00:11.185 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.5258ms
2024-12-09 17:00:11.189 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:00:11.192 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:00:11.193 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:00:11.194 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:00:11.197 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:00:11.199 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:00:11.205 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:00:11.206 +05:30 [INF] Deserializing the notes
2024-12-09 17:00:11.207 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:00:11.210 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.266ms
2024-12-09 17:00:11.212 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:00:11.214 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.4957ms
2024-12-09 17:00:15.213 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:00:15.218 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:00:15.219 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:00:15.220 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:00:15.223 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:00:15.225 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:00:15.229 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:00:15.229 +05:30 [INF] Deserializing the notes
2024-12-09 17:00:15.230 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:00:15.232 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.1869ms
2024-12-09 17:00:15.233 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:00:15.235 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.0225ms
2024-12-09 17:00:29.065 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:00:29.069 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:00:29.071 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.145ms
2024-12-09 17:00:29.074 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:00:29.077 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:00:29.077 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:00:29.078 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:00:29.080 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:00:29.081 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:00:29.083 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:00:29.084 +05:30 [INF] Deserializing the notes
2024-12-09 17:00:29.085 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:00:29.088 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.2205ms
2024-12-09 17:00:29.095 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:00:29.097 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.8003ms
2024-12-09 17:00:30.100 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:00:30.104 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:00:30.105 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:00:30.106 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:00:30.109 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:00:30.110 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:00:30.113 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:00:30.113 +05:30 [INF] Deserializing the notes
2024-12-09 17:00:30.115 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:00:30.116 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.5471ms
2024-12-09 17:00:30.118 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:00:30.126 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.4321ms
2024-12-09 17:00:32.273 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:00:32.276 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:00:32.277 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:00:32.278 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:00:32.286 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:00:32.289 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:00:32.291 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:00:32.293 +05:30 [INF] Deserializing the notes
2024-12-09 17:00:32.294 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:00:32.296 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4606ms
2024-12-09 17:00:32.306 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:00:32.307 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.5847ms
2024-12-09 17:00:55.648 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:00:55.651 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:00:55.652 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.041ms
2024-12-09 17:00:55.657 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:00:55.659 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:00:55.660 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:00:55.662 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:00:55.664 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:00:55.671 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:00:55.673 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:00:55.675 +05:30 [INF] Deserializing the notes
2024-12-09 17:00:55.676 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:00:55.678 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.5176ms
2024-12-09 17:00:55.680 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:00:55.682 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.2066ms
2024-12-09 17:01:27.522 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:01:27.533 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:01:27.534 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.3264ms
2024-12-09 17:01:27.538 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:01:27.542 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:01:27.548 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:01:27.549 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:01:27.552 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:01:27.554 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:01:27.556 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:01:27.557 +05:30 [INF] Deserializing the notes
2024-12-09 17:01:27.558 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:01:27.560 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.4776ms
2024-12-09 17:01:27.569 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:01:27.570 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.482ms
2024-12-09 17:01:30.186 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:01:30.189 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:01:30.191 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:01:30.192 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:01:30.195 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:01:30.197 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:01:30.200 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:01:30.200 +05:30 [INF] Deserializing the notes
2024-12-09 17:01:30.201 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:01:30.208 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.7834ms
2024-12-09 17:01:30.209 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:01:30.211 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.1333ms
2024-12-09 17:02:20.840 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:02:20.854 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:02:20.855 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 15.0237ms
2024-12-09 17:02:20.859 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:02:20.870 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:02:20.871 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:02:20.873 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:02:20.875 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:02:20.882 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:02:20.883 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 17:02:20.884 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 17:02:20.885 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 17:02:20.901 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:02:20.903 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 17:02:20.908 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 17:02:20.917 +05:30 [INF] 3 notes retrieved for user with ID: 1
2024-12-09 17:02:20.919 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 17:02:20.920 +05:30 [INF] Notes retrieved successfully
2024-12-09 17:02:20.922 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:02:20.924 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 49.0794ms
2024-12-09 17:02:20.926 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:02:20.928 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 68.3922ms
2024-12-09 17:02:23.665 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:02:23.669 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:02:23.671 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:02:23.672 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:02:23.676 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:02:23.678 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:02:23.680 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:02:23.681 +05:30 [INF] Deserializing the notes
2024-12-09 17:02:23.683 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:02:23.689 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.0974ms
2024-12-09 17:02:23.694 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:02:23.695 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.88ms
2024-12-09 17:02:25.589 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:02:25.593 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:02:25.593 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:02:25.594 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:02:25.596 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:02:25.599 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:02:25.603 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:02:25.604 +05:30 [INF] Deserializing the notes
2024-12-09 17:02:25.605 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:02:25.606 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4578ms
2024-12-09 17:02:25.607 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:02:25.608 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.6805ms
2024-12-09 17:02:28.365 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:02:28.369 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:02:28.370 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.5108ms
2024-12-09 17:02:28.374 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:02:28.378 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:02:28.379 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:02:28.381 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:02:28.388 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:02:28.389 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:02:28.392 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:02:28.393 +05:30 [INF] Deserializing the notes
2024-12-09 17:02:28.394 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:02:28.396 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.7626ms
2024-12-09 17:02:28.398 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:02:28.400 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.74ms
2024-12-09 17:04:35.293 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:04:35.305 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:04:35.310 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.6119ms
2024-12-09 17:04:35.334 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:04:35.338 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:04:35.340 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:04:35.342 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:04:35.348 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:04:35.355 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:04:35.359 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:04:35.360 +05:30 [INF] Deserializing the notes
2024-12-09 17:04:35.361 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:04:35.363 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.8992ms
2024-12-09 17:04:35.366 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:04:35.368 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.9692ms
2024-12-09 17:04:40.425 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:04:40.429 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:04:40.431 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.0997ms
2024-12-09 17:04:40.435 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:04:40.440 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:04:40.441 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:04:40.447 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:04:40.450 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:04:40.452 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:04:40.453 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:04:40.454 +05:30 [INF] Deserializing the notes
2024-12-09 17:04:40.456 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:04:40.458 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.5266ms
2024-12-09 17:04:40.460 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:04:40.462 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.9595ms
2024-12-09 17:04:45.474 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:04:45.478 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:04:45.479 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6599ms
2024-12-09 17:04:45.494 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:04:45.500 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:04:45.501 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:04:45.502 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:04:45.504 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:04:45.507 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:04:45.509 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:04:45.510 +05:30 [INF] Deserializing the notes
2024-12-09 17:04:45.516 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:04:45.519 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.7474ms
2024-12-09 17:04:45.521 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:04:45.523 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.5751ms
2024-12-09 17:06:24.853 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:06:24.857 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:06:24.857 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.635ms
2024-12-09 17:06:24.879 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:06:24.883 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:06:24.885 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:06:24.889 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:06:24.892 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:06:24.893 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:06:24.897 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:06:24.898 +05:30 [INF] Deserializing the notes
2024-12-09 17:06:24.899 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:06:24.902 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.3366ms
2024-12-09 17:06:24.903 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:06:24.911 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.9001ms
2024-12-09 17:06:27.999 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:06:28.004 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:06:28.005 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:06:28.007 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:06:28.009 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:06:28.012 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:06:28.014 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:06:28.015 +05:30 [INF] Deserializing the notes
2024-12-09 17:06:28.017 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:06:28.019 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6049ms
2024-12-09 17:06:28.028 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:06:28.029 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.7428ms
2024-12-09 17:06:29.282 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:06:29.287 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:06:29.288 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:06:29.290 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:06:29.293 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:06:29.296 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:06:29.299 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:06:29.310 +05:30 [INF] Deserializing the notes
2024-12-09 17:06:29.312 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:06:29.313 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.3203ms
2024-12-09 17:06:29.315 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:06:29.317 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.0235ms
2024-12-09 17:06:30.360 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:06:30.363 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:06:30.364 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.6737ms
2024-12-09 17:06:30.368 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:06:30.372 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:06:30.373 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:06:30.374 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:06:30.377 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:06:30.379 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:06:30.381 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:06:30.382 +05:30 [INF] Deserializing the notes
2024-12-09 17:06:30.388 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:06:30.390 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.4495ms
2024-12-09 17:06:30.392 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:06:30.394 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.8634ms
2024-12-09 17:06:32.653 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:06:32.656 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:06:32.658 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:06:32.659 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:06:32.662 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:06:32.664 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:06:32.666 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:06:32.667 +05:30 [INF] Deserializing the notes
2024-12-09 17:06:32.668 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:06:32.670 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.2838ms
2024-12-09 17:06:32.676 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:06:32.678 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.8037ms
2024-12-09 17:12:50.681 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:12:50.685 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:12:50.686 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1819ms
2024-12-09 17:12:50.690 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:12:50.693 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:12:50.695 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:12:50.696 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:12:50.700 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:12:50.702 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:12:50.704 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 17:12:50.713 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 17:12:50.715 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 17:12:50.756 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:12:50.761 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 17:12:50.768 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 17:12:50.774 +05:30 [INF] 3 notes retrieved for user with ID: 1
2024-12-09 17:12:50.778 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 17:12:50.787 +05:30 [INF] Notes retrieved successfully
2024-12-09 17:12:50.789 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:12:50.793 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 93.1357ms
2024-12-09 17:12:50.803 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:12:50.804 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 114.5446ms
2024-12-09 17:13:45.660 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:13:45.663 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:13:45.664 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.0392ms
2024-12-09 17:13:45.667 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:13:45.671 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:13:45.672 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:13:45.674 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:13:45.676 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:13:45.684 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:13:45.686 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:13:45.686 +05:30 [INF] Deserializing the notes
2024-12-09 17:13:45.687 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:13:45.688 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.3345ms
2024-12-09 17:13:45.694 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:13:45.696 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.3039ms
2024-12-09 17:14:02.569 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:14:02.581 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:14:02.582 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.4796ms
2024-12-09 17:14:02.592 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:14:02.596 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:14:02.598 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:14:02.599 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:14:02.606 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:14:02.609 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:14:02.612 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:14:02.613 +05:30 [INF] Deserializing the notes
2024-12-09 17:14:02.614 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:14:02.616 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6852ms
2024-12-09 17:14:02.618 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:14:02.620 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.0273ms
2024-12-09 17:14:06.522 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:14:06.525 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:14:06.526 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:14:06.527 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:14:06.530 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:14:06.532 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:14:06.536 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:14:06.537 +05:30 [INF] Deserializing the notes
2024-12-09 17:14:06.538 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:14:06.540 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7046ms
2024-12-09 17:14:06.542 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:14:06.548 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.8085ms
2024-12-09 17:14:09.451 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:14:09.455 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:14:09.457 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.6322ms
2024-12-09 17:14:09.461 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:14:09.468 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:14:09.470 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:14:09.472 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:14:09.475 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:14:09.478 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:14:09.480 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:14:09.481 +05:30 [INF] Deserializing the notes
2024-12-09 17:14:09.482 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:14:09.483 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.4584ms
2024-12-09 17:14:09.492 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:14:09.494 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.6881ms
2024-12-09 17:14:20.056 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:14:20.059 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:14:20.060 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.633ms
2024-12-09 17:14:20.064 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:14:20.066 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:14:20.068 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:14:20.073 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:14:20.075 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:14:20.076 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:14:20.078 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:14:20.079 +05:30 [INF] Deserializing the notes
2024-12-09 17:14:20.080 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:14:20.082 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.8069ms
2024-12-09 17:14:20.084 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:14:20.089 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.4409ms
2024-12-09 17:14:21.272 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:14:21.275 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:14:21.276 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:14:21.277 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:14:21.280 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:14:21.281 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:14:21.288 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:14:21.288 +05:30 [INF] Deserializing the notes
2024-12-09 17:14:21.289 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:14:21.291 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.7045ms
2024-12-09 17:14:21.293 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:14:21.294 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.3446ms
2024-12-09 17:15:24.912 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:15:24.924 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:15:24.925 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.5139ms
2024-12-09 17:15:24.927 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:15:24.939 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:15:24.945 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:15:24.947 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:15:24.950 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:15:24.953 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:15:24.955 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:15:24.956 +05:30 [INF] Deserializing the notes
2024-12-09 17:15:24.957 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:15:24.960 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.817ms
2024-12-09 17:15:24.966 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:15:24.968 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.2111ms
2024-12-09 17:16:23.272 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 71
2024-12-09 17:16:23.289 +05:30 [INF] CORS policy execution failed.
2024-12-09 17:16:23.289 +05:30 [INF] Request origin https://localhost:5000 does not have permission to access the resource.
2024-12-09 17:16:23.290 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 17:16:23.291 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-09 17:16:23.330 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-09 17:16:23.331 +05:30 [INF] Checking if the user present
2024-12-09 17:16:23.332 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-09 17:16:23.348 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-09 17:16:23.350 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-09 17:16:23.351 +05:30 [INF] Verifying the password
2024-12-09 17:16:23.691 +05:30 [INF] Password is valid and token is generated
2024-12-09 17:16:23.693 +05:30 [INF] Login successful
2024-12-09 17:16:23.695 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 17:16:23.697 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 399.486ms
2024-12-09 17:16:23.700 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 17:16:23.704 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 431.521ms
2024-12-09 17:17:30.172 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 74
2024-12-09 17:17:30.177 +05:30 [INF] CORS policy execution failed.
2024-12-09 17:17:30.180 +05:30 [INF] Request origin https://localhost:5000 does not have permission to access the resource.
2024-12-09 17:17:30.182 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 17:17:30.195 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:17:30.208 +05:30 [INF] Updating note with ID: 1034
2024-12-09 17:17:30.213 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 17:17:30.224 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 17:17:30.244 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:17:30.248 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 17:17:30.253 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 17:17:30.257 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 17:17:30.266 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0, [Description] = @p1, [Title] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2024-12-09 17:17:30.273 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 17:17:30.275 +05:30 [INF] Retrieved notes successfully
2024-12-09 17:17:30.276 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 17:17:30.278 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 77.1395ms
2024-12-09 17:17:30.280 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 17:17:30.281 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 109.3489ms
2024-12-09 17:17:38.123 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:17:38.132 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:17:38.134 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.256ms
2024-12-09 17:17:38.137 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:17:38.149 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:17:38.151 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:17:38.153 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:17:38.156 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:17:38.159 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:17:38.161 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 17:17:38.163 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 17:17:38.164 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 17:17:38.176 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:17:38.181 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 17:17:38.187 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 17:17:38.193 +05:30 [INF] 3 notes retrieved for user with ID: 1
2024-12-09 17:17:38.195 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 17:17:38.197 +05:30 [INF] Notes retrieved successfully
2024-12-09 17:17:38.206 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:17:38.209 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 52.4966ms
2024-12-09 17:17:38.211 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:17:38.212 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 75.4639ms
2024-12-09 17:19:41.170 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:19:41.185 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:19:41.187 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.293ms
2024-12-09 17:19:41.194 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:19:41.197 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:19:41.201 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:19:41.202 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:19:41.204 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:19:41.206 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:19:41.208 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:19:41.213 +05:30 [INF] Deserializing the notes
2024-12-09 17:19:41.215 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:19:41.217 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.2096ms
2024-12-09 17:19:41.219 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:19:41.220 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.5274ms
2024-12-09 17:20:39.293 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 72
2024-12-09 17:20:39.315 +05:30 [INF] CORS policy execution failed.
2024-12-09 17:20:39.316 +05:30 [INF] Request origin https://localhost:5000 does not have permission to access the resource.
2024-12-09 17:20:39.317 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 17:20:39.319 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:20:39.321 +05:30 [INF] Updating note with ID: 1034
2024-12-09 17:20:39.323 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 17:20:39.328 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 17:20:39.348 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:20:39.352 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 17:20:39.356 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 17:20:39.362 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 17:20:39.370 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 17:20:39.375 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 17:20:39.377 +05:30 [INF] Retrieved notes successfully
2024-12-09 17:20:39.378 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 17:20:39.380 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 58.899ms
2024-12-09 17:20:39.382 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 17:20:39.384 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 90.2759ms
2024-12-09 17:20:44.254 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:20:44.259 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:20:44.259 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1955ms
2024-12-09 17:20:44.264 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:20:44.267 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:20:44.268 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:20:44.270 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:20:44.300 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:20:44.302 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:20:44.304 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 17:20:44.304 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 17:20:44.305 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 17:20:44.308 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:20:44.310 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 17:20:44.314 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 17:20:44.317 +05:30 [INF] 3 notes retrieved for user with ID: 1
2024-12-09 17:20:44.319 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 17:20:44.322 +05:30 [INF] Notes retrieved successfully
2024-12-09 17:20:44.323 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:20:44.325 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 24.8607ms
2024-12-09 17:20:44.326 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:20:44.328 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 64.0994ms
2024-12-09 17:23:05.303 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:23:05.318 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:23:05.320 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 18.2007ms
2024-12-09 17:23:05.331 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:23:05.341 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:23:05.344 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:05.347 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:23:05.351 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:23:05.354 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:23:05.357 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:23:05.357 +05:30 [INF] Deserializing the notes
2024-12-09 17:23:05.359 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:23:05.360 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7751ms
2024-12-09 17:23:05.363 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:05.364 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.0289ms
2024-12-09 17:23:07.032 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:23:07.037 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:23:07.039 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:07.042 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:23:07.046 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:23:07.051 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:23:07.054 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:23:07.056 +05:30 [INF] Deserializing the notes
2024-12-09 17:23:07.057 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:23:07.060 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.8938ms
2024-12-09 17:23:07.062 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:07.063 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.6854ms
2024-12-09 17:23:09.204 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:23:09.211 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:23:09.216 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:09.219 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:23:09.223 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:23:09.225 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:23:09.229 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:23:09.229 +05:30 [INF] Deserializing the notes
2024-12-09 17:23:09.230 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:23:09.232 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.8105ms
2024-12-09 17:23:09.234 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:09.235 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.3169ms
2024-12-09 17:23:10.843 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:23:10.848 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:23:10.849 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.876ms
2024-12-09 17:23:10.852 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:23:10.861 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:23:10.863 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:10.867 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:23:10.873 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:23:10.876 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:23:10.879 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:23:10.880 +05:30 [INF] Deserializing the notes
2024-12-09 17:23:10.881 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:23:10.883 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.3415ms
2024-12-09 17:23:10.886 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:10.887 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.4021ms
2024-12-09 17:23:12.759 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:23:12.763 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:23:12.765 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:12.767 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:23:12.773 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:23:12.777 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:23:12.781 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:23:12.782 +05:30 [INF] Deserializing the notes
2024-12-09 17:23:12.785 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:23:12.788 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.8084ms
2024-12-09 17:23:12.790 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:12.793 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.422ms
2024-12-09 17:23:14.224 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:23:14.228 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:23:14.230 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:14.233 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:23:14.238 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:23:14.242 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:23:14.245 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:23:14.247 +05:30 [INF] Deserializing the notes
2024-12-09 17:23:14.249 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:23:14.250 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.3281ms
2024-12-09 17:23:14.254 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:14.257 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.1088ms
2024-12-09 17:23:15.640 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:23:15.647 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:23:15.648 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:15.649 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:23:15.654 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:23:15.663 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:23:15.666 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:23:15.668 +05:30 [INF] Deserializing the notes
2024-12-09 17:23:15.671 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:23:15.672 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.9673ms
2024-12-09 17:23:15.673 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:15.674 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.8176ms
2024-12-09 17:23:21.309 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:23:21.317 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:23:21.319 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.2911ms
2024-12-09 17:23:21.332 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:23:21.341 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:23:21.342 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:21.343 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:23:21.346 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:23:21.349 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:23:21.350 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:23:21.352 +05:30 [INF] Deserializing the notes
2024-12-09 17:23:21.352 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:23:21.354 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.4398ms
2024-12-09 17:23:21.355 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:21.356 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.1201ms
2024-12-09 17:23:22.413 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:23:22.419 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:23:22.423 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:22.425 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:23:22.428 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:23:22.434 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:23:22.435 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:23:22.436 +05:30 [INF] Deserializing the notes
2024-12-09 17:23:22.437 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:23:22.438 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.9941ms
2024-12-09 17:23:22.440 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:22.441 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.2945ms
2024-12-09 17:23:24.871 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:23:24.878 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:23:24.880 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:24.885 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:23:24.890 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:23:24.894 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:23:24.897 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:23:24.900 +05:30 [INF] Deserializing the notes
2024-12-09 17:23:24.903 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:23:24.904 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.9659ms
2024-12-09 17:23:24.906 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:23:24.907 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.7531ms
2024-12-09 17:24:20.500 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:24:20.517 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:24:20.519 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 19.0335ms
2024-12-09 17:24:20.522 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:24:20.527 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:24:20.529 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:24:20.530 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:24:20.535 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:24:20.537 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:24:20.542 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:24:20.549 +05:30 [INF] Deserializing the notes
2024-12-09 17:24:20.552 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:24:20.555 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.2119ms
2024-12-09 17:24:20.558 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:24:20.560 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 38.5975ms
2024-12-09 17:24:40.934 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:24:40.944 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:24:40.945 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.9906ms
2024-12-09 17:24:40.964 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:24:40.967 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:24:40.967 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:24:40.968 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:24:40.972 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:24:40.979 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:24:40.980 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:24:40.981 +05:30 [INF] Deserializing the notes
2024-12-09 17:24:40.982 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:24:40.983 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.3816ms
2024-12-09 17:24:40.986 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:24:40.989 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.4321ms
2024-12-09 17:24:42.415 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:24:42.420 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:24:42.423 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:24:42.429 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:24:42.435 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:24:42.442 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:24:42.444 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:24:42.447 +05:30 [INF] Deserializing the notes
2024-12-09 17:24:42.450 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:24:42.455 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.5491ms
2024-12-09 17:24:42.456 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:24:42.459 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.8676ms
2024-12-09 17:24:51.057 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:24:51.067 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:24:51.068 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.9887ms
2024-12-09 17:24:51.074 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:24:51.095 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:24:51.098 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:24:51.101 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:24:51.106 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:24:51.110 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:24:51.113 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:24:51.114 +05:30 [INF] Deserializing the notes
2024-12-09 17:24:51.115 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:24:51.116 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.5599ms
2024-12-09 17:24:51.118 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:24:51.123 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.9544ms
2024-12-09 17:35:57.248 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:35:57.253 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:35:57.255 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7789ms
2024-12-09 17:35:57.260 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:35:57.276 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:35:57.278 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 11:54:44', Current time (UTC): '09-12-2024 12:05:57'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 17:35:57.281 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 17:35:57.316 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 17:35:57.374 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 17:35:57.378 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 17:35:57.382 +05:30 [ERR] Connection id "0HN8O4NFVH90S", Request id "0HN8O4NFVH90S:0000020B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 17:35:57.394 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 134.8144ms
2024-12-09 17:35:58.519 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:35:58.523 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:35:58.525 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 11:54:44', Current time (UTC): '09-12-2024 12:05:58'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 17:35:58.533 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 17:35:58.563 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 17:35:58.620 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 17:35:58.623 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 17:35:58.625 +05:30 [ERR] Connection id "0HN8O4NFVH90S", Request id "0HN8O4NFVH90S:0000020D": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 17:35:58.630 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 111.2307ms
2024-12-09 17:36:01.281 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:36:01.285 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:01.287 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 11:54:44', Current time (UTC): '09-12-2024 12:06:01'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 17:36:01.293 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 17:36:01.325 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 17:36:01.383 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 17:36:01.388 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 17:36:01.391 +05:30 [ERR] Connection id "0HN8O4NFVH90S", Request id "0HN8O4NFVH90S:0000020F": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 17:36:01.397 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 116.0332ms
2024-12-09 17:36:21.761 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-09 17:36:21.766 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:21.769 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 8.1891ms
2024-12-09 17:36:21.777 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-09 17:36:21.779 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:21.779 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 17:36:21.780 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-09 17:36:22.861 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-09 17:36:22.862 +05:30 [INF] Checking if the user present
2024-12-09 17:36:22.863 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-09 17:36:22.915 +05:30 [INF] Executed DbCommand (20ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-09 17:36:22.919 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-09 17:36:22.920 +05:30 [INF] Verifying the password
2024-12-09 17:36:23.272 +05:30 [INF] Password is valid and token is generated
2024-12-09 17:36:23.274 +05:30 [INF] Login successful
2024-12-09 17:36:23.276 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 17:36:23.280 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 1497.5974ms
2024-12-09 17:36:23.290 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 17:36:23.294 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 1517.9216ms
2024-12-09 17:36:23.318 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:36:23.324 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:23.326 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.1273ms
2024-12-09 17:36:23.330 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:36:23.336 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:23.338 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:36:23.344 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:36:23.348 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:36:23.351 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:36:23.353 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 17:36:23.354 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 17:36:23.358 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 17:36:23.363 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:36:23.365 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 17:36:23.370 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 17:36:23.372 +05:30 [INF] 3 notes retrieved for user with ID: 1
2024-12-09 17:36:23.373 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 17:36:23.375 +05:30 [INF] Notes retrieved successfully
2024-12-09 17:36:23.376 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:36:23.377 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 28.7473ms
2024-12-09 17:36:23.379 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:36:23.381 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 51.5993ms
2024-12-09 17:36:26.289 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - null null
2024-12-09 17:36:26.292 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:26.293 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - 204 null null 4.9396ms
2024-12-09 17:36:26.296 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - application/json 4
2024-12-09 17:36:26.308 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:26.310 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 17:36:26.312 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:36:26.315 +05:30 [INF] Received noteId: 1034, isArchive: True
2024-12-09 17:36:26.317 +05:30 [INF] Received request to toggle archive status for note with ID: 1034
2024-12-09 17:36:26.318 +05:30 [INF] Initiating toggle of archive status for note with ID: 1034 for user ID: 1
2024-12-09 17:36:26.322 +05:30 [INF] Received isArchive value: True
2024-12-09 17:36:26.328 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:36:26.343 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 17:36:26.353 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 17:36:26.357 +05:30 [INF] Note with ID: 1034 archive status updated to true
2024-12-09 17:36:26.358 +05:30 [INF] Successfully toggled archive status for note with ID: 1034
2024-12-09 17:36:26.359 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:36:26.360 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 46.0683ms
2024-12-09 17:36:26.362 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 17:36:26.363 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - 200 null application/json; charset=utf-8 67.2095ms
2024-12-09 17:36:29.025 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:36:29.033 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:29.034 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.5384ms
2024-12-09 17:36:29.038 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:36:29.054 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:29.056 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:36:29.057 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:36:29.059 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:36:29.061 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:36:29.063 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 17:36:29.064 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 17:36:29.065 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 17:36:29.067 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:36:29.069 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 17:36:29.071 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 17:36:29.073 +05:30 [INF] 3 notes retrieved for user with ID: 1
2024-12-09 17:36:29.074 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 17:36:29.075 +05:30 [INF] Notes retrieved successfully
2024-12-09 17:36:29.076 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:36:29.077 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.3034ms
2024-12-09 17:36:29.080 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:36:29.082 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.0067ms
2024-12-09 17:36:36.710 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1031 - null null
2024-12-09 17:36:36.714 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:36.715 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1031 - 204 null null 5.2288ms
2024-12-09 17:36:36.718 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1031 - application/json 4
2024-12-09 17:36:36.722 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:36.723 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 17:36:36.725 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:36:36.732 +05:30 [INF] Received request to toggle trash status for note with ID: 1031
2024-12-09 17:36:36.735 +05:30 [INF] Initiating toggle of trash status for note with ID: 1031 for user ID: 1
2024-12-09 17:36:36.740 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:36:36.745 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 17:36:36.752 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 17:36:36.755 +05:30 [INF] Note with ID: 1031 trash status updated to true
2024-12-09 17:36:36.757 +05:30 [INF] Successfully toggled trash status for note with ID: 1031
2024-12-09 17:36:36.758 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:36:36.759 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 27.5872ms
2024-12-09 17:36:36.761 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 17:36:36.762 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1031 - 200 null application/json; charset=utf-8 44.1966ms
2024-12-09 17:36:40.199 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1034 - null null
2024-12-09 17:36:40.204 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:40.205 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1034 - 204 null null 5.7507ms
2024-12-09 17:36:40.209 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1034 - application/json 4
2024-12-09 17:36:40.220 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:40.221 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 17:36:40.222 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:36:40.225 +05:30 [INF] Received request to toggle trash status for note with ID: 1034
2024-12-09 17:36:40.226 +05:30 [INF] Initiating toggle of trash status for note with ID: 1034 for user ID: 1
2024-12-09 17:36:40.229 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:36:40.235 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 17:36:40.239 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 17:36:40.241 +05:30 [INF] Note with ID: 1034 trash status updated to true
2024-12-09 17:36:40.243 +05:30 [INF] Successfully toggled trash status for note with ID: 1034
2024-12-09 17:36:40.244 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:36:40.245 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 20.2468ms
2024-12-09 17:36:40.247 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 17:36:40.251 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1034 - 200 null application/json; charset=utf-8 43.2515ms
2024-12-09 17:36:41.448 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:36:41.453 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:41.457 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.3355ms
2024-12-09 17:36:41.461 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:36:41.473 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:41.475 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:36:41.476 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:36:41.478 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:36:41.480 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:36:41.483 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 17:36:41.483 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 17:36:41.484 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 17:36:41.487 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:36:41.490 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 17:36:41.493 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 17:36:41.495 +05:30 [INF] 3 notes retrieved for user with ID: 1
2024-12-09 17:36:41.496 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 17:36:41.497 +05:30 [INF] Notes retrieved successfully
2024-12-09 17:36:41.498 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:36:41.499 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.5725ms
2024-12-09 17:36:41.501 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:36:41.502 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 40.9469ms
2024-12-09 17:36:45.716 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1031 - null null
2024-12-09 17:36:45.726 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:45.727 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1031 - 204 null null 10.8352ms
2024-12-09 17:36:45.730 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:5000/api/notes/1031 - null null
2024-12-09 17:36:45.735 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:45.737 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 17:36:45.740 +05:30 [INF] Route matched with {action = "DeleteNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteNote(Int32) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:36:45.744 +05:30 [INF] Received request to delete note with ID: 1031
2024-12-09 17:36:45.746 +05:30 [INF] Initiating deletion of note with ID: 1031 for user ID: 1
2024-12-09 17:36:45.753 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:36:45.759 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 17:36:45.778 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Notes]
OUTPUT 1
WHERE [Id] = @p0;
2024-12-09 17:36:45.783 +05:30 [INF] Deleted note with 1031 successfully
2024-12-09 17:36:45.785 +05:30 [INF] Successfully deleted note with ID: 1031
2024-12-09 17:36:45.786 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:36:45.787 +05:30 [INF] Executed action FunDo.Controllers.NoteController.DeleteNote (FunDooNotes) in 43.4652ms
2024-12-09 17:36:45.790 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.DeleteNote (FunDooNotes)'
2024-12-09 17:36:45.792 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:5000/api/notes/1031 - 200 null application/json; charset=utf-8 61.8018ms
2024-12-09 17:36:47.683 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:36:47.686 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:47.690 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.9192ms
2024-12-09 17:36:47.693 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:36:47.701 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:47.705 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:36:47.708 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:36:47.711 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:36:47.717 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:36:47.718 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 17:36:47.719 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 17:36:47.719 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 17:36:47.723 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 17:36:47.725 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 17:36:47.727 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 17:36:47.730 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 17:36:47.731 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 17:36:47.733 +05:30 [INF] Notes retrieved successfully
2024-12-09 17:36:47.734 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:36:47.735 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 24.4637ms
2024-12-09 17:36:47.737 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:36:47.738 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.455ms
2024-12-09 17:36:48.984 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:36:48.987 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:48.990 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:36:48.997 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:36:49.007 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:36:49.012 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:36:49.015 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:36:49.017 +05:30 [INF] Deserializing the notes
2024-12-09 17:36:49.017 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:36:49.019 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.1524ms
2024-12-09 17:36:49.021 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:36:49.025 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.4058ms
2024-12-09 17:36:52.729 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 17:36:52.732 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:52.733 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.3106ms
2024-12-09 17:36:52.736 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 17:36:52.745 +05:30 [INF] CORS policy execution successful.
2024-12-09 17:36:52.747 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:36:52.748 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 17:36:52.755 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 17:36:52.759 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 17:36:52.761 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 17:36:52.762 +05:30 [INF] Deserializing the notes
2024-12-09 17:36:52.762 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 17:36:52.764 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.9849ms
2024-12-09 17:36:52.765 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 17:36:52.766 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.9554ms
2024-12-09 21:44:26.243 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-09 21:44:26.882 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-09 21:44:26.883 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-09 21:44:26.988 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-09 21:44:26.991 +05:30 [INF] Hosting environment: Development
2024-12-09 21:44:26.992 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-09 21:44:28.854 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-09 21:44:29.306 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-09 21:44:29.310 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 476.4781ms
2024-12-09 21:44:29.345 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-09 21:44:29.350 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 44.4301ms
2024-12-09 21:44:29.486 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 141.3192ms
2024-12-09 21:44:29.566 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-09 21:44:29.815 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 250.2719ms
2024-12-09 21:45:42.188 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-09 21:45:42.210 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:45:42.215 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 27.9003ms
2024-12-09 21:45:42.225 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-09 21:45:42.234 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:45:44.156 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 21:45:44.221 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-09 21:45:45.323 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-09 21:45:45.326 +05:30 [INF] Checking if the user present
2024-12-09 21:45:45.330 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-09 21:45:49.236 +05:30 [INF] Executed DbCommand (202ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-09 21:45:49.393 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-09 21:45:49.395 +05:30 [INF] Verifying the password
2024-12-09 21:45:50.290 +05:30 [INF] Password is valid and token is generated
2024-12-09 21:45:50.293 +05:30 [INF] Login successful
2024-12-09 21:45:50.312 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 21:45:50.327 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 6094.9875ms
2024-12-09 21:45:50.329 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 21:45:50.346 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 8121.277ms
2024-12-09 21:45:50.373 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:45:50.378 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:45:50.381 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.1855ms
2024-12-09 21:45:50.385 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:45:50.389 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:45:50.497 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:45:50.510 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:45:50.521 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:45:50.594 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:45:50.595 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 21:45:50.599 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 21:45:50.606 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 21:45:50.677 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:45:50.688 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 21:45:50.804 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 21:45:50.813 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 21:45:50.815 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 21:45:50.835 +05:30 [INF] Notes retrieved successfully
2024-12-09 21:45:50.839 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:45:50.843 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 331.2075ms
2024-12-09 21:45:50.845 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:45:50.847 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 462.4739ms
2024-12-09 21:45:55.634 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:45:55.640 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:45:55.643 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.0146ms
2024-12-09 21:45:55.646 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:45:55.652 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:45:55.660 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:45:55.662 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:45:55.667 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:45:55.676 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:45:55.679 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:45:55.680 +05:30 [INF] Deserializing the notes
2024-12-09 21:45:55.685 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:45:55.687 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.2909ms
2024-12-09 21:45:55.689 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:45:55.690 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.9299ms
2024-12-09 21:45:58.472 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:45:58.477 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:45:58.482 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:45:58.486 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:45:58.494 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:45:58.498 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:45:58.501 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:45:58.504 +05:30 [INF] Deserializing the notes
2024-12-09 21:45:58.508 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:45:58.510 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.973ms
2024-12-09 21:45:58.512 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:45:58.513 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.391ms
2024-12-09 21:45:59.945 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:45:59.951 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:45:59.955 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:45:59.958 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:45:59.963 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:45:59.966 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:45:59.969 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:45:59.971 +05:30 [INF] Deserializing the notes
2024-12-09 21:45:59.973 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:45:59.977 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.5531ms
2024-12-09 21:45:59.980 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:45:59.982 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.22ms
2024-12-09 21:46:01.413 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:46:01.418 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:01.420 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.4475ms
2024-12-09 21:46:01.424 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:46:01.429 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:01.431 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:01.432 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:01.436 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:46:01.440 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:46:01.442 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:46:01.443 +05:30 [INF] Deserializing the notes
2024-12-09 21:46:01.445 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:01.449 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.6915ms
2024-12-09 21:46:01.451 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:01.453 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.9033ms
2024-12-09 21:46:03.497 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1034 - null null
2024-12-09 21:46:03.505 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:03.507 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1034 - 204 null null 11.1434ms
2024-12-09 21:46:03.511 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1034 - application/json 5
2024-12-09 21:46:03.521 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:03.523 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 21:46:03.533 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:03.551 +05:30 [INF] Received request to toggle trash status for note with ID: 1034
2024-12-09 21:46:03.555 +05:30 [INF] Initiating toggle of trash status for note with ID: 1034 for user ID: 1
2024-12-09 21:46:03.685 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:03.725 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 21:46:03.920 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 21:46:03.953 +05:30 [INF] Note with ID: 1034 trash status updated to false
2024-12-09 21:46:03.963 +05:30 [INF] Successfully toggled trash status for note with ID: 1034
2024-12-09 21:46:03.966 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:03.969 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 432.2502ms
2024-12-09 21:46:03.971 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 21:46:03.973 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1034 - 200 null application/json; charset=utf-8 461.7429ms
2024-12-09 21:46:05.175 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:46:05.184 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:05.186 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:05.188 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:05.193 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:46:05.197 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:46:05.199 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 21:46:05.201 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 21:46:05.202 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 21:46:05.207 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:05.211 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 21:46:05.217 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 21:46:05.222 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 21:46:05.223 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 21:46:05.225 +05:30 [INF] Notes retrieved successfully
2024-12-09 21:46:05.227 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:05.231 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 38.2048ms
2024-12-09 21:46:05.232 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:05.233 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 58.2286ms
2024-12-09 21:46:06.717 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:46:06.722 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:06.723 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.0219ms
2024-12-09 21:46:06.728 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:46:06.734 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:06.735 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:06.737 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:06.741 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:46:06.744 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:46:06.746 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:46:06.747 +05:30 [INF] Deserializing the notes
2024-12-09 21:46:06.749 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:06.750 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.9392ms
2024-12-09 21:46:06.752 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:06.754 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.0375ms
2024-12-09 21:46:08.712 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - null null
2024-12-09 21:46:08.716 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:08.717 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - 204 null null 5.0756ms
2024-12-09 21:46:08.719 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - application/json 5
2024-12-09 21:46:08.724 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:08.727 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 21:46:08.735 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:08.742 +05:30 [INF] Received noteId: 1034, isArchive: False
2024-12-09 21:46:08.744 +05:30 [INF] Received request to toggle archive status for note with ID: 1034
2024-12-09 21:46:08.747 +05:30 [INF] Initiating toggle of archive status for note with ID: 1034 for user ID: 1
2024-12-09 21:46:08.753 +05:30 [INF] Received isArchive value: False
2024-12-09 21:46:08.759 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:08.769 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 21:46:08.784 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 21:46:08.791 +05:30 [INF] Note with ID: 1034 archive status updated to false
2024-12-09 21:46:08.794 +05:30 [INF] Successfully toggled archive status for note with ID: 1034
2024-12-09 21:46:08.796 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:08.799 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 59.9737ms
2024-12-09 21:46:08.801 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 21:46:08.804 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - 200 null application/json; charset=utf-8 84.5169ms
2024-12-09 21:46:10.000 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:46:10.004 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:10.007 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:10.011 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:10.016 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:46:10.020 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:46:10.023 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 21:46:10.024 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 21:46:10.026 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 21:46:10.031 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:10.036 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 21:46:10.040 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 21:46:10.045 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 21:46:10.046 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 21:46:10.048 +05:30 [INF] Notes retrieved successfully
2024-12-09 21:46:10.049 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:10.051 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 35.2425ms
2024-12-09 21:46:10.053 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:10.055 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 55.8916ms
2024-12-09 21:46:16.141 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1035 - null null
2024-12-09 21:46:16.146 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:16.147 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1035 - 204 null null 5.5963ms
2024-12-09 21:46:16.149 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1035 - application/json 4
2024-12-09 21:46:16.155 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:16.159 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 21:46:16.161 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:16.166 +05:30 [INF] Received noteId: 1035, isArchive: True
2024-12-09 21:46:16.167 +05:30 [INF] Received request to toggle archive status for note with ID: 1035
2024-12-09 21:46:16.169 +05:30 [INF] Initiating toggle of archive status for note with ID: 1035 for user ID: 1
2024-12-09 21:46:16.172 +05:30 [INF] Received isArchive value: True
2024-12-09 21:46:16.178 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:16.186 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 21:46:16.192 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 21:46:16.196 +05:30 [INF] Note with ID: 1035 archive status updated to true
2024-12-09 21:46:16.198 +05:30 [INF] Successfully toggled archive status for note with ID: 1035
2024-12-09 21:46:16.200 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:16.202 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 36.7696ms
2024-12-09 21:46:16.203 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 21:46:16.205 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1035 - 200 null application/json; charset=utf-8 55.4422ms
2024-12-09 21:46:17.938 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:46:17.943 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:17.946 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6846ms
2024-12-09 21:46:17.949 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:46:17.957 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:17.959 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:17.961 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:17.965 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:46:17.968 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:46:17.971 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 21:46:17.973 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 21:46:17.974 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 21:46:17.979 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:17.985 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 21:46:17.988 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 21:46:17.995 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 21:46:17.996 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 21:46:17.999 +05:30 [INF] Notes retrieved successfully
2024-12-09 21:46:18.000 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:18.002 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 38.0637ms
2024-12-09 21:46:18.005 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:18.006 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 57.707ms
2024-12-09 21:46:20.790 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1035 - application/json 5
2024-12-09 21:46:20.795 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:20.796 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 21:46:20.797 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:20.801 +05:30 [INF] Received noteId: 1035, isArchive: False
2024-12-09 21:46:20.802 +05:30 [INF] Received request to toggle archive status for note with ID: 1035
2024-12-09 21:46:20.804 +05:30 [INF] Initiating toggle of archive status for note with ID: 1035 for user ID: 1
2024-12-09 21:46:20.807 +05:30 [INF] Received isArchive value: False
2024-12-09 21:46:20.812 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:20.821 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 21:46:20.827 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 21:46:20.831 +05:30 [INF] Note with ID: 1035 archive status updated to false
2024-12-09 21:46:20.833 +05:30 [INF] Successfully toggled archive status for note with ID: 1035
2024-12-09 21:46:20.834 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:20.836 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 35.1402ms
2024-12-09 21:46:20.838 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 21:46:20.840 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1035 - 200 null application/json; charset=utf-8 49.9174ms
2024-12-09 21:46:22.104 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:46:22.110 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:22.112 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:22.114 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:22.117 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:46:22.119 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:46:22.122 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 21:46:22.124 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 21:46:22.125 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 21:46:22.129 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:22.134 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 21:46:22.137 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 21:46:22.142 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 21:46:22.144 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 21:46:22.146 +05:30 [INF] Notes retrieved successfully
2024-12-09 21:46:22.147 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:22.150 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 33.2179ms
2024-12-09 21:46:22.152 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:22.153 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 49.1154ms
2024-12-09 21:46:25.072 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1035 - null null
2024-12-09 21:46:25.076 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:25.078 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1035 - 204 null null 5.6128ms
2024-12-09 21:46:25.081 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - application/json 4
2024-12-09 21:46:25.089 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:25.093 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 21:46:25.096 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:25.100 +05:30 [INF] Received request to toggle trash status for note with ID: 1035
2024-12-09 21:46:25.100 +05:30 [INF] Initiating toggle of trash status for note with ID: 1035 for user ID: 1
2024-12-09 21:46:25.104 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:25.111 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 21:46:25.117 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 21:46:25.120 +05:30 [INF] Note with ID: 1035 trash status updated to true
2024-12-09 21:46:25.121 +05:30 [INF] Successfully toggled trash status for note with ID: 1035
2024-12-09 21:46:25.123 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:25.125 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 25.6299ms
2024-12-09 21:46:25.127 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 21:46:25.130 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - 200 null application/json; charset=utf-8 49.2629ms
2024-12-09 21:46:26.926 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:46:26.935 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:26.937 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.3168ms
2024-12-09 21:46:26.939 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:46:26.945 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:26.948 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:26.949 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:26.952 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:46:26.954 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:46:26.957 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 21:46:26.959 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 21:46:26.960 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 21:46:26.964 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:26.968 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 21:46:26.971 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 21:46:26.974 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 21:46:26.975 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 21:46:26.977 +05:30 [INF] Notes retrieved successfully
2024-12-09 21:46:26.979 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:26.981 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 29.0113ms
2024-12-09 21:46:26.982 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:26.984 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 44.7986ms
2024-12-09 21:46:29.076 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - application/json 5
2024-12-09 21:46:29.079 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:29.081 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 21:46:29.082 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:29.087 +05:30 [INF] Received request to toggle trash status for note with ID: 1035
2024-12-09 21:46:29.088 +05:30 [INF] Initiating toggle of trash status for note with ID: 1035 for user ID: 1
2024-12-09 21:46:29.094 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:29.100 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 21:46:29.112 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 21:46:29.116 +05:30 [INF] Note with ID: 1035 trash status updated to false
2024-12-09 21:46:29.118 +05:30 [INF] Successfully toggled trash status for note with ID: 1035
2024-12-09 21:46:29.120 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:29.122 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 35.4705ms
2024-12-09 21:46:29.124 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 21:46:29.126 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - 200 null application/json; charset=utf-8 50.4147ms
2024-12-09 21:46:30.625 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:46:30.629 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:30.631 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:30.633 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:30.636 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:46:30.638 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:46:30.641 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 21:46:30.643 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 21:46:30.644 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 21:46:30.649 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:30.655 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 21:46:30.658 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 21:46:30.663 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 21:46:30.664 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 21:46:30.666 +05:30 [INF] Notes retrieved successfully
2024-12-09 21:46:30.667 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:30.668 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 32.7918ms
2024-12-09 21:46:30.670 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:30.671 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 46.3061ms
2024-12-09 21:46:32.317 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1035 - null null
2024-12-09 21:46:32.321 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:32.323 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1035 - 204 null null 6.4527ms
2024-12-09 21:46:32.325 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1035 - application/json 4
2024-12-09 21:46:32.333 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:32.335 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 21:46:32.337 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:32.342 +05:30 [INF] Received noteId: 1035, isArchive: True
2024-12-09 21:46:32.343 +05:30 [INF] Received request to toggle archive status for note with ID: 1035
2024-12-09 21:46:32.345 +05:30 [INF] Initiating toggle of archive status for note with ID: 1035 for user ID: 1
2024-12-09 21:46:32.346 +05:30 [INF] Received isArchive value: True
2024-12-09 21:46:32.351 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:32.357 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 21:46:32.363 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 21:46:32.366 +05:30 [INF] Note with ID: 1035 archive status updated to true
2024-12-09 21:46:32.367 +05:30 [INF] Successfully toggled archive status for note with ID: 1035
2024-12-09 21:46:32.369 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:32.370 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 28.5655ms
2024-12-09 21:46:32.371 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 21:46:32.372 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1035 - 200 null application/json; charset=utf-8 47.1706ms
2024-12-09 21:46:33.955 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:46:33.960 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:33.961 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.5998ms
2024-12-09 21:46:33.964 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:46:33.974 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:33.976 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:33.980 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:33.982 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:46:33.985 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:46:33.987 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 21:46:33.990 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 21:46:33.992 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 21:46:33.995 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:33.998 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 21:46:34.002 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 21:46:34.008 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 21:46:34.009 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 21:46:34.011 +05:30 [INF] Notes retrieved successfully
2024-12-09 21:46:34.013 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:34.016 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 34.0012ms
2024-12-09 21:46:34.019 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:34.020 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 56.1767ms
2024-12-09 21:46:36.503 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1035 - null null
2024-12-09 21:46:36.507 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:36.508 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1035 - 204 null null 5.0736ms
2024-12-09 21:46:36.510 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - application/json 4
2024-12-09 21:46:36.519 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:36.522 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 21:46:36.524 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:36.528 +05:30 [INF] Received request to toggle trash status for note with ID: 1035
2024-12-09 21:46:36.529 +05:30 [INF] Initiating toggle of trash status for note with ID: 1035 for user ID: 1
2024-12-09 21:46:36.534 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:36.542 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 21:46:36.549 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 21:46:36.554 +05:30 [INF] Note with ID: 1035 trash status updated to true
2024-12-09 21:46:36.557 +05:30 [INF] Successfully toggled trash status for note with ID: 1035
2024-12-09 21:46:36.559 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:36.560 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 33.0043ms
2024-12-09 21:46:36.563 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 21:46:36.564 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - 200 null application/json; charset=utf-8 54.3472ms
2024-12-09 21:46:38.203 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:46:38.208 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:38.209 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:38.211 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:38.214 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:46:38.217 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:46:38.221 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 21:46:38.223 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 21:46:38.225 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 21:46:38.230 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:38.235 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 21:46:38.239 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 21:46:38.244 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 21:46:38.245 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 21:46:38.247 +05:30 [INF] Notes retrieved successfully
2024-12-09 21:46:38.248 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:38.252 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 37.6783ms
2024-12-09 21:46:38.254 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:38.255 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 52.0241ms
2024-12-09 21:46:39.817 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - application/json 5
2024-12-09 21:46:39.822 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:39.823 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 21:46:39.825 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:39.831 +05:30 [INF] Received request to toggle trash status for note with ID: 1035
2024-12-09 21:46:39.832 +05:30 [INF] Initiating toggle of trash status for note with ID: 1035 for user ID: 1
2024-12-09 21:46:39.837 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:39.846 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 21:46:39.856 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 21:46:39.861 +05:30 [INF] Note with ID: 1035 trash status updated to false
2024-12-09 21:46:39.864 +05:30 [INF] Successfully toggled trash status for note with ID: 1035
2024-12-09 21:46:39.866 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:39.869 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 39.2517ms
2024-12-09 21:46:39.871 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 21:46:39.874 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - 200 null application/json; charset=utf-8 56.5651ms
2024-12-09 21:46:41.238 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:46:41.242 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:41.243 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.5451ms
2024-12-09 21:46:41.246 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:46:41.254 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:41.256 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:41.259 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:41.263 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:46:41.268 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:46:41.271 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 21:46:41.273 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 21:46:41.275 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 21:46:41.279 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:41.284 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 21:46:41.288 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 21:46:41.291 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 21:46:41.293 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 21:46:41.294 +05:30 [INF] Notes retrieved successfully
2024-12-09 21:46:41.296 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:41.299 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 35.7458ms
2024-12-09 21:46:41.300 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:41.302 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 56.2377ms
2024-12-09 21:46:43.113 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1035 - null null
2024-12-09 21:46:43.116 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:43.117 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1035 - 204 null null 3.9822ms
2024-12-09 21:46:43.121 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1035 - application/json 5
2024-12-09 21:46:43.126 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:43.127 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 21:46:43.128 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:43.131 +05:30 [INF] Received noteId: 1035, isArchive: False
2024-12-09 21:46:43.132 +05:30 [INF] Received request to toggle archive status for note with ID: 1035
2024-12-09 21:46:43.133 +05:30 [INF] Initiating toggle of archive status for note with ID: 1035 for user ID: 1
2024-12-09 21:46:43.135 +05:30 [INF] Received isArchive value: False
2024-12-09 21:46:43.139 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:43.144 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 21:46:43.150 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 21:46:43.153 +05:30 [INF] Note with ID: 1035 archive status updated to false
2024-12-09 21:46:43.154 +05:30 [INF] Successfully toggled archive status for note with ID: 1035
2024-12-09 21:46:43.155 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:43.156 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 25.7901ms
2024-12-09 21:46:43.158 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 21:46:43.159 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1035 - 200 null application/json; charset=utf-8 38.8598ms
2024-12-09 21:46:44.612 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:46:44.617 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:46:44.619 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:44.622 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:46:44.628 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:46:44.632 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:46:44.635 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 21:46:44.638 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 21:46:44.640 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 21:46:44.644 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:46:44.648 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 21:46:44.653 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 21:46:44.657 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 21:46:44.659 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 21:46:44.661 +05:30 [INF] Notes retrieved successfully
2024-12-09 21:46:44.662 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:46:44.665 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 37.9911ms
2024-12-09 21:46:44.668 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:46:44.669 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 57.8248ms
2024-12-09 21:49:01.655 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:49:01.667 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:49:01.668 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.8228ms
2024-12-09 21:49:01.674 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:49:01.678 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:49:01.679 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:01.681 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:49:01.684 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:49:01.691 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:49:01.695 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:49:01.698 +05:30 [INF] Deserializing the notes
2024-12-09 21:49:01.699 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:49:01.707 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 23.4154ms
2024-12-09 21:49:01.710 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:01.719 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.4372ms
2024-12-09 21:49:07.794 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:49:07.799 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:49:07.804 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.3023ms
2024-12-09 21:49:07.807 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:49:07.819 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:49:07.820 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:07.822 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:49:07.825 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:49:07.828 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:49:07.831 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:49:07.832 +05:30 [INF] Deserializing the notes
2024-12-09 21:49:07.833 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:49:07.836 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.9395ms
2024-12-09 21:49:07.838 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:07.839 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.3983ms
2024-12-09 21:49:09.324 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:49:09.329 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:49:09.331 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:09.333 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:49:09.336 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:49:09.338 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:49:09.341 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:49:09.342 +05:30 [INF] Deserializing the notes
2024-12-09 21:49:09.343 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:49:09.345 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4475ms
2024-12-09 21:49:09.346 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:09.348 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.187ms
2024-12-09 21:49:10.741 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:49:10.789 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:49:10.798 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:10.836 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:49:10.848 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:49:10.851 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:49:10.854 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:49:10.855 +05:30 [INF] Deserializing the notes
2024-12-09 21:49:10.857 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:49:10.861 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.7131ms
2024-12-09 21:49:10.863 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:10.864 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 122.9948ms
2024-12-09 21:49:21.787 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:49:21.813 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:49:21.817 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 29.6473ms
2024-12-09 21:49:21.824 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:49:21.837 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:49:21.847 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:21.848 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:49:21.851 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:49:21.853 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:49:21.855 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:49:21.856 +05:30 [INF] Deserializing the notes
2024-12-09 21:49:21.858 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:49:21.862 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.3865ms
2024-12-09 21:49:21.866 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:21.869 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.3498ms
2024-12-09 21:49:24.561 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:49:24.569 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:49:24.572 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:24.574 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:49:24.576 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:49:24.583 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:49:24.585 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:49:24.586 +05:30 [INF] Deserializing the notes
2024-12-09 21:49:24.587 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:49:24.591 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.8877ms
2024-12-09 21:49:24.595 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:24.600 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 38.9599ms
2024-12-09 21:49:39.023 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:49:39.027 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:49:39.028 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.4675ms
2024-12-09 21:49:39.031 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:49:39.036 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:49:39.037 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:39.039 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:49:39.045 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:49:39.047 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:49:39.049 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:49:39.051 +05:30 [INF] Deserializing the notes
2024-12-09 21:49:39.056 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:49:39.064 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.3573ms
2024-12-09 21:49:39.069 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:49:39.072 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.3145ms
2024-12-09 21:50:33.401 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:50:33.412 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:50:33.413 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.9379ms
2024-12-09 21:50:33.426 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:50:33.434 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:50:33.438 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:50:33.443 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:50:33.447 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:50:33.450 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:50:33.453 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:50:33.459 +05:30 [INF] Deserializing the notes
2024-12-09 21:50:33.501 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:50:33.517 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 69.7784ms
2024-12-09 21:50:33.527 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:50:33.530 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 104.0237ms
2024-12-09 21:50:51.799 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:50:51.802 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:50:51.803 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.8627ms
2024-12-09 21:50:51.806 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:50:51.811 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:50:51.813 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:50:51.815 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:50:51.818 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:50:51.819 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:50:51.821 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:50:51.824 +05:30 [INF] Deserializing the notes
2024-12-09 21:50:51.826 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:50:51.831 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.2484ms
2024-12-09 21:50:51.834 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:50:51.837 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 31.6056ms
2024-12-09 21:51:09.095 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:51:09.099 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:09.100 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.907ms
2024-12-09 21:51:09.104 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:51:09.108 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:09.109 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:09.111 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:51:09.114 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:51:09.116 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:51:09.119 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:51:09.121 +05:30 [INF] Deserializing the notes
2024-12-09 21:51:09.123 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:51:09.128 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.5183ms
2024-12-09 21:51:09.130 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:09.132 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.3586ms
2024-12-09 21:51:11.335 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:51:11.338 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:11.339 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:11.340 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:51:11.343 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:51:11.345 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:51:11.348 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:51:11.349 +05:30 [INF] Deserializing the notes
2024-12-09 21:51:11.350 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:51:11.352 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.9175ms
2024-12-09 21:51:11.353 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:11.355 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.2338ms
2024-12-09 21:51:13.807 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:51:13.810 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:13.814 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:13.815 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:51:13.818 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:51:13.821 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:51:13.823 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:51:13.824 +05:30 [INF] Deserializing the notes
2024-12-09 21:51:13.827 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:51:13.831 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.4907ms
2024-12-09 21:51:13.834 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:13.835 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.7294ms
2024-12-09 21:51:15.487 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:51:15.490 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:15.491 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.1014ms
2024-12-09 21:51:15.495 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:51:15.499 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:15.500 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:15.501 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:51:15.504 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:51:15.508 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:51:15.515 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:51:15.516 +05:30 [INF] Deserializing the notes
2024-12-09 21:51:15.517 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:51:15.521 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.4622ms
2024-12-09 21:51:15.522 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:15.524 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.2851ms
2024-12-09 21:51:17.248 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:51:17.253 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:17.255 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:17.256 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:51:17.263 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:51:17.267 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:51:17.268 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:51:17.269 +05:30 [INF] Deserializing the notes
2024-12-09 21:51:17.271 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:51:17.273 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.3434ms
2024-12-09 21:51:17.274 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:17.276 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.4499ms
2024-12-09 21:51:18.288 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:51:18.293 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:18.294 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:18.296 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:51:18.298 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:51:18.300 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:51:18.303 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:51:18.304 +05:30 [INF] Deserializing the notes
2024-12-09 21:51:18.305 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:51:18.307 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5933ms
2024-12-09 21:51:18.310 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:18.312 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.2951ms
2024-12-09 21:51:30.681 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:51:30.684 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:30.685 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.9234ms
2024-12-09 21:51:30.688 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:51:30.691 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:30.693 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:30.694 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:51:30.696 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:51:30.697 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:51:30.700 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:51:30.701 +05:30 [INF] Deserializing the notes
2024-12-09 21:51:30.702 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:51:30.704 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.5164ms
2024-12-09 21:51:30.707 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:30.708 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.2265ms
2024-12-09 21:51:31.978 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:51:31.981 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:31.982 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:31.984 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:51:31.988 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:51:31.990 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:51:31.993 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:51:31.994 +05:30 [INF] Deserializing the notes
2024-12-09 21:51:31.995 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:51:31.997 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.4732ms
2024-12-09 21:51:31.999 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:32.001 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.2514ms
2024-12-09 21:51:43.817 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:51:43.820 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:43.821 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1636ms
2024-12-09 21:51:43.824 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:51:43.826 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:43.827 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:43.828 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:51:43.830 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:51:43.832 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:51:43.835 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:51:43.836 +05:30 [INF] Deserializing the notes
2024-12-09 21:51:43.837 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:51:43.839 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.6271ms
2024-12-09 21:51:43.842 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:43.843 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.9798ms
2024-12-09 21:51:56.561 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:51:56.564 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:56.565 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.0689ms
2024-12-09 21:51:56.568 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:51:56.572 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:56.573 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:56.574 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:51:56.577 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:51:56.579 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:51:56.582 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 21:51:56.583 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 21:51:56.584 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 21:51:56.589 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:51:56.593 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 21:51:56.597 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 21:51:56.604 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 21:51:56.605 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 21:51:56.607 +05:30 [INF] Notes retrieved successfully
2024-12-09 21:51:56.608 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:51:56.611 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 33.811ms
2024-12-09 21:51:56.614 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:56.616 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.984ms
2024-12-09 21:51:58.050 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:51:58.052 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:58.053 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:58.054 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:51:58.056 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:51:58.058 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:51:58.061 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:51:58.062 +05:30 [INF] Deserializing the notes
2024-12-09 21:51:58.064 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:51:58.065 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.5486ms
2024-12-09 21:51:58.067 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:58.068 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.7324ms
2024-12-09 21:51:59.319 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:51:59.325 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:51:59.326 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:59.328 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:51:59.331 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:51:59.333 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:51:59.336 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:51:59.338 +05:30 [INF] Deserializing the notes
2024-12-09 21:51:59.339 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:51:59.341 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.1938ms
2024-12-09 21:51:59.343 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:51:59.345 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.3826ms
2024-12-09 21:52:00.418 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:52:00.420 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:52:00.421 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:00.423 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:52:00.425 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:52:00.428 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:52:00.431 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:52:00.432 +05:30 [INF] Deserializing the notes
2024-12-09 21:52:00.433 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:52:00.435 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.7854ms
2024-12-09 21:52:00.436 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:00.437 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.8729ms
2024-12-09 21:52:09.005 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:52:09.011 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:52:09.013 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.8662ms
2024-12-09 21:52:09.016 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:52:09.021 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:52:09.025 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:09.027 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:52:09.033 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:52:09.036 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:52:09.038 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:52:09.040 +05:30 [INF] Deserializing the notes
2024-12-09 21:52:09.042 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:52:09.044 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.5111ms
2024-12-09 21:52:09.047 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:09.049 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.913ms
2024-12-09 21:52:18.263 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:52:18.266 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:52:18.268 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.6711ms
2024-12-09 21:52:18.271 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:52:18.278 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:52:18.279 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:18.280 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:52:18.284 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:52:18.286 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:52:18.289 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:52:18.291 +05:30 [INF] Deserializing the notes
2024-12-09 21:52:18.294 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:52:18.299 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.8108ms
2024-12-09 21:52:18.303 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:18.308 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.9709ms
2024-12-09 21:52:20.064 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:52:20.069 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:52:20.071 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:20.074 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:52:20.077 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:52:20.079 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:52:20.082 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:52:20.084 +05:30 [INF] Deserializing the notes
2024-12-09 21:52:20.086 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:52:20.088 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.6953ms
2024-12-09 21:52:20.090 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:20.091 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 27.5927ms
2024-12-09 21:52:21.116 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:52:21.121 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:52:21.123 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:21.124 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:52:21.128 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:52:21.132 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:52:21.137 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:52:21.140 +05:30 [INF] Deserializing the notes
2024-12-09 21:52:21.144 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:52:21.148 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.4104ms
2024-12-09 21:52:21.150 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:21.160 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 45.1049ms
2024-12-09 21:52:52.577 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:52:52.589 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:52:52.590 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.1085ms
2024-12-09 21:52:52.594 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:52:52.599 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:52:52.601 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:52.602 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:52:52.605 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:52:52.607 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:52:52.610 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:52:52.612 +05:30 [INF] Deserializing the notes
2024-12-09 21:52:52.613 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:52:52.616 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.7339ms
2024-12-09 21:52:52.618 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:52.620 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 26.2313ms
2024-12-09 21:52:54.902 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:52:54.905 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:52:54.906 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:54.908 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:52:54.912 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:52:54.914 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:52:54.917 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:52:54.918 +05:30 [INF] Deserializing the notes
2024-12-09 21:52:54.919 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:52:54.921 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.1851ms
2024-12-09 21:52:54.923 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:52:54.925 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.2617ms
2024-12-09 21:53:02.496 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:53:02.503 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:53:02.506 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.4698ms
2024-12-09 21:53:02.510 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:53:02.519 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:53:02.522 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:02.523 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:53:02.528 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:53:02.532 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:53:02.534 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:53:02.536 +05:30 [INF] Deserializing the notes
2024-12-09 21:53:02.537 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:53:02.540 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.876ms
2024-12-09 21:53:02.543 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:02.545 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 35.5747ms
2024-12-09 21:53:03.778 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:53:03.783 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:53:03.785 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:03.787 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:53:03.792 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:53:03.796 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:53:03.799 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:53:03.800 +05:30 [INF] Deserializing the notes
2024-12-09 21:53:03.803 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:53:03.806 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.3621ms
2024-12-09 21:53:03.809 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:03.811 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.2634ms
2024-12-09 21:53:11.453 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:53:11.457 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:53:11.458 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3649ms
2024-12-09 21:53:11.461 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:53:11.469 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:53:11.471 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:11.472 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:53:11.476 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:53:11.479 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:53:11.483 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:53:11.484 +05:30 [INF] Deserializing the notes
2024-12-09 21:53:11.487 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:53:11.491 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.2727ms
2024-12-09 21:53:11.496 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:11.498 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.8582ms
2024-12-09 21:53:15.224 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:53:15.228 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:53:15.229 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:15.230 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:53:15.233 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:53:15.237 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:53:15.239 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:53:15.240 +05:30 [INF] Deserializing the notes
2024-12-09 21:53:15.242 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:53:15.244 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.6333ms
2024-12-09 21:53:15.246 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:15.248 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.7594ms
2024-12-09 21:53:22.686 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:53:22.691 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:53:22.695 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.9695ms
2024-12-09 21:53:22.698 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:53:22.709 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:53:22.710 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:22.712 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:53:22.717 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:53:22.720 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:53:22.722 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:53:22.723 +05:30 [INF] Deserializing the notes
2024-12-09 21:53:22.725 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:53:22.727 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.2476ms
2024-12-09 21:53:22.729 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:22.732 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.4244ms
2024-12-09 21:53:24.542 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:53:24.545 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:53:24.547 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:24.549 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:53:24.553 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:53:24.560 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:53:24.567 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:53:24.571 +05:30 [INF] Deserializing the notes
2024-12-09 21:53:24.573 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:53:24.579 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.8371ms
2024-12-09 21:53:24.582 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:24.585 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 43.4876ms
2024-12-09 21:53:25.658 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:53:25.662 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:53:25.664 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:25.666 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:53:25.670 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:53:25.672 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:53:25.676 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:53:25.678 +05:30 [INF] Deserializing the notes
2024-12-09 21:53:25.679 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:53:25.683 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.8901ms
2024-12-09 21:53:25.685 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:53:25.687 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.5039ms
2024-12-09 21:54:37.501 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:54:37.505 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:54:37.507 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3722ms
2024-12-09 21:54:37.515 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:54:37.519 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:54:37.521 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:54:37.523 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:54:37.526 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:54:37.528 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:54:37.531 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:54:37.532 +05:30 [INF] Deserializing the notes
2024-12-09 21:54:37.534 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:54:37.536 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.1151ms
2024-12-09 21:54:37.538 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:54:37.541 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.3613ms
2024-12-09 21:54:43.057 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:54:43.060 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:54:43.063 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.0518ms
2024-12-09 21:54:43.067 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:54:43.075 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:54:43.077 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:54:43.081 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:54:43.086 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:54:43.090 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:54:43.092 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:54:43.093 +05:30 [INF] Deserializing the notes
2024-12-09 21:54:43.094 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:54:43.097 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.0098ms
2024-12-09 21:54:43.100 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:54:43.101 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.62ms
2024-12-09 21:54:44.215 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:54:44.219 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:54:44.221 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:54:44.224 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:54:44.232 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:54:44.235 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:54:44.238 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:54:44.240 +05:30 [INF] Deserializing the notes
2024-12-09 21:54:44.243 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:54:44.246 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.2925ms
2024-12-09 21:54:44.249 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:54:44.252 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.4039ms
2024-12-09 21:54:45.399 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:54:45.404 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:54:45.408 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:54:45.410 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:54:45.414 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:54:45.416 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:54:45.420 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:54:45.422 +05:30 [INF] Deserializing the notes
2024-12-09 21:54:45.423 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:54:45.426 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.9732ms
2024-12-09 21:54:45.428 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:54:45.432 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 32.8835ms
2024-12-09 21:54:56.375 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:54:56.379 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:54:56.380 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.7566ms
2024-12-09 21:54:56.384 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:54:56.398 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:54:56.399 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:54:56.401 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:54:56.404 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:54:56.407 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:54:56.410 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:54:56.411 +05:30 [INF] Deserializing the notes
2024-12-09 21:54:56.412 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:54:56.414 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.0134ms
2024-12-09 21:54:56.417 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:54:56.419 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 34.7433ms
2024-12-09 21:56:49.106 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:56:49.108 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:56:49.108 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.8429ms
2024-12-09 21:56:49.109 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:56:49.111 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:56:49.112 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:56:49.113 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:56:49.115 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:56:49.116 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:56:49.117 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:56:49.117 +05:30 [INF] Deserializing the notes
2024-12-09 21:56:49.118 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:56:49.119 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8832ms
2024-12-09 21:56:49.121 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:56:49.121 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.0212ms
2024-12-09 21:57:21.755 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:57:21.760 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:57:21.761 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.1683ms
2024-12-09 21:57:21.763 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:57:21.765 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:57:21.766 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:57:21.767 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:57:21.769 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:57:21.771 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:57:21.772 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 21:57:21.773 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 21:57:21.773 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 21:57:21.784 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 21:57:21.786 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 21:57:21.788 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 21:57:21.789 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 21:57:21.790 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 21:57:21.790 +05:30 [INF] Notes retrieved successfully
2024-12-09 21:57:21.791 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:57:21.792 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 22.7406ms
2024-12-09 21:57:21.792 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:57:21.793 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.397ms
2024-12-09 21:57:23.859 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:57:23.860 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:57:23.861 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:57:23.861 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:57:23.862 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:57:23.863 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:57:23.864 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:57:23.865 +05:30 [INF] Deserializing the notes
2024-12-09 21:57:23.866 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:57:23.867 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.677ms
2024-12-09 21:57:23.868 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:57:23.869 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.3634ms
2024-12-09 21:57:42.118 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:57:42.120 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:57:42.121 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2255ms
2024-12-09 21:57:42.139 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:57:42.145 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:57:42.146 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:57:42.147 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:57:42.149 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:57:42.150 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:57:42.151 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:57:42.151 +05:30 [INF] Deserializing the notes
2024-12-09 21:57:42.152 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:57:42.153 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.133ms
2024-12-09 21:57:42.154 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:57:42.154 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.9082ms
2024-12-09 21:57:51.358 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:57:51.360 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:57:51.361 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.1378ms
2024-12-09 21:57:51.363 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:57:51.365 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:57:51.365 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:57:51.366 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:57:51.367 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:57:51.369 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:57:51.369 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:57:51.370 +05:30 [INF] Deserializing the notes
2024-12-09 21:57:51.371 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:57:51.371 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9189ms
2024-12-09 21:57:51.373 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:57:51.374 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.9825ms
2024-12-09 21:57:53.427 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:57:53.430 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:57:53.431 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:57:53.432 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:57:53.433 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:57:53.434 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:57:53.435 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:57:53.436 +05:30 [INF] Deserializing the notes
2024-12-09 21:57:53.436 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:57:53.438 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0618ms
2024-12-09 21:57:53.439 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:57:53.440 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.0952ms
2024-12-09 21:57:59.313 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:57:59.314 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:57:59.315 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4978ms
2024-12-09 21:57:59.317 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:57:59.319 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:57:59.320 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:57:59.321 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:57:59.323 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:57:59.324 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:57:59.325 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:57:59.325 +05:30 [INF] Deserializing the notes
2024-12-09 21:57:59.326 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:57:59.328 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2254ms
2024-12-09 21:57:59.329 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:57:59.330 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.2231ms
2024-12-09 21:58:07.183 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:58:07.188 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:58:07.189 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7052ms
2024-12-09 21:58:07.192 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:58:07.194 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:58:07.195 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:58:07.195 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:58:07.196 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:58:07.197 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:58:07.198 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:58:07.199 +05:30 [INF] Deserializing the notes
2024-12-09 21:58:07.199 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:58:07.200 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.2672ms
2024-12-09 21:58:07.200 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:58:07.201 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.756ms
2024-12-09 21:58:08.390 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:58:08.392 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:58:08.392 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:58:08.393 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:58:08.394 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:58:08.395 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:58:08.396 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:58:08.396 +05:30 [INF] Deserializing the notes
2024-12-09 21:58:08.396 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:58:08.397 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.3788ms
2024-12-09 21:58:08.398 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:58:08.398 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.7525ms
2024-12-09 21:58:10.606 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:58:10.608 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:58:10.609 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:58:10.611 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:58:10.613 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:58:10.615 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:58:10.616 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:58:10.616 +05:30 [INF] Deserializing the notes
2024-12-09 21:58:10.617 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:58:10.618 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2233ms
2024-12-09 21:58:10.619 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:58:10.619 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.9973ms
2024-12-09 21:59:58.661 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 21:59:58.669 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:59:58.670 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.5914ms
2024-12-09 21:59:58.672 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 21:59:58.675 +05:30 [INF] CORS policy execution successful.
2024-12-09 21:59:58.675 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:59:58.676 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 21:59:58.678 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 21:59:58.679 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 21:59:58.680 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 21:59:58.682 +05:30 [INF] Deserializing the notes
2024-12-09 21:59:58.682 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 21:59:58.684 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.8497ms
2024-12-09 21:59:58.684 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 21:59:58.686 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.9201ms
2024-12-09 22:00:51.978 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:00:51.985 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:00:51.986 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6856ms
2024-12-09 22:00:51.988 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:00:51.990 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:00:51.991 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:00:51.991 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:00:51.993 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:00:51.994 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:00:51.995 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:00:51.997 +05:30 [INF] Deserializing the notes
2024-12-09 22:00:51.998 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:00:51.999 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.0746ms
2024-12-09 22:00:52.000 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:00:52.001 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.291ms
2024-12-09 22:01:27.902 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:01:27.903 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:01:27.904 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.3726ms
2024-12-09 22:01:27.906 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:01:27.907 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:01:27.908 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:01:27.909 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:01:27.910 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:01:27.911 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:01:27.912 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:01:27.913 +05:30 [INF] Deserializing the notes
2024-12-09 22:01:27.914 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:01:27.915 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.1941ms
2024-12-09 22:01:27.916 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:01:27.917 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.3295ms
2024-12-09 22:01:28.830 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:01:28.831 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:01:28.832 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:01:28.832 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:01:28.834 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:01:28.835 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:01:28.836 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:01:28.837 +05:30 [INF] Deserializing the notes
2024-12-09 22:01:28.837 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:01:28.838 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3481ms
2024-12-09 22:01:28.839 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:01:28.839 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.6183ms
2024-12-09 22:04:04.303 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:04:04.305 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:04:04.305 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4119ms
2024-12-09 22:04:04.306 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:04:04.307 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:04:04.308 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:04:04.308 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:04:04.309 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:04:04.310 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:04:04.311 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:04:04.312 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:04:04.313 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:04:04.317 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:04:04.320 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:04:04.322 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:04:04.324 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:04:04.325 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:04:04.325 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:04:04.326 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:04:04.326 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.1673ms
2024-12-09 22:04:04.327 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:04:04.328 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 21.5618ms
2024-12-09 22:04:31.009 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:04:31.010 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:04:31.010 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.913ms
2024-12-09 22:04:31.012 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:04:31.014 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:04:31.015 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:04:31.015 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:04:31.017 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:04:31.019 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:04:31.019 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:04:31.020 +05:30 [INF] Deserializing the notes
2024-12-09 22:04:31.020 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:04:31.022 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5543ms
2024-12-09 22:04:31.023 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:04:31.024 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.891ms
2024-12-09 22:04:33.629 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:04:33.630 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:04:33.631 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:04:33.631 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:04:33.633 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:04:33.636 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:04:33.637 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:04:33.638 +05:30 [INF] Deserializing the notes
2024-12-09 22:04:33.638 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:04:33.639 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.5124ms
2024-12-09 22:04:33.640 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:04:33.640 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.842ms
2024-12-09 22:04:47.582 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:04:47.584 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:04:47.585 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4182ms
2024-12-09 22:04:47.586 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:04:47.588 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:04:47.588 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:04:47.589 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:04:47.591 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:04:47.591 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:04:47.593 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:04:47.593 +05:30 [INF] Deserializing the notes
2024-12-09 22:04:47.594 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:04:47.595 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7153ms
2024-12-09 22:04:47.596 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:04:47.598 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.9839ms
2024-12-09 22:04:55.041 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:04:55.045 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:04:55.047 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6886ms
2024-12-09 22:04:55.053 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:04:55.058 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:04:55.058 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:04:55.059 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:04:55.060 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:04:55.062 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:04:55.065 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:04:55.065 +05:30 [INF] Deserializing the notes
2024-12-09 22:04:55.067 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:04:55.068 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.0816ms
2024-12-09 22:04:55.070 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:04:55.070 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.9269ms
2024-12-09 22:04:58.109 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:04:58.114 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:04:58.115 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:04:58.116 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:04:58.120 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:04:58.125 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:04:58.126 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:04:58.127 +05:30 [INF] Deserializing the notes
2024-12-09 22:04:58.129 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:04:58.131 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.1167ms
2024-12-09 22:04:58.132 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:04:58.133 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 24.3337ms
2024-12-09 22:05:02.516 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:05:02.524 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:05:02.526 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.6865ms
2024-12-09 22:05:02.532 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:05:02.535 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:05:02.535 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:05:02.536 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:05:02.537 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:05:02.538 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:05:02.539 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:05:02.539 +05:30 [INF] Deserializing the notes
2024-12-09 22:05:02.540 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:05:02.541 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9431ms
2024-12-09 22:05:02.542 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:05:02.543 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.6598ms
2024-12-09 22:05:05.287 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:05:05.288 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:05:05.289 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:05:05.289 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:05:05.291 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:05:05.292 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:05:05.293 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:05:05.295 +05:30 [INF] Deserializing the notes
2024-12-09 22:05:05.296 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:05:05.298 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.1413ms
2024-12-09 22:05:05.298 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:05:05.299 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.8748ms
2024-12-09 22:07:08.479 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:07:08.485 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:07:08.486 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.5182ms
2024-12-09 22:07:08.488 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:07:08.489 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:07:08.490 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:07:08.490 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:07:08.491 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:07:08.492 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:07:08.493 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:07:08.494 +05:30 [INF] Deserializing the notes
2024-12-09 22:07:08.494 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:07:08.495 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9373ms
2024-12-09 22:07:08.496 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:07:08.497 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.2589ms
2024-12-09 22:07:11.978 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:07:11.980 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:07:11.981 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:07:11.982 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:07:11.985 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:07:11.986 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:07:11.987 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:07:11.988 +05:30 [INF] Deserializing the notes
2024-12-09 22:07:11.990 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:07:11.991 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.694ms
2024-12-09 22:07:11.992 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:07:11.993 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.5472ms
2024-12-09 22:07:21.300 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:07:21.301 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:07:21.303 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.1544ms
2024-12-09 22:07:21.305 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:07:21.306 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:07:21.307 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:07:21.308 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:07:21.309 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:07:21.310 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:07:21.311 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:07:21.312 +05:30 [INF] Deserializing the notes
2024-12-09 22:07:21.312 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:07:21.314 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.1942ms
2024-12-09 22:07:21.314 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:07:21.315 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.574ms
2024-12-09 22:08:43.241 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:08:43.248 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:08:43.249 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6283ms
2024-12-09 22:08:43.254 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:08:43.256 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:08:43.257 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:08:43.258 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:08:43.259 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:08:43.260 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:08:43.261 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:08:43.261 +05:30 [INF] Deserializing the notes
2024-12-09 22:08:43.262 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:08:43.262 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.3142ms
2024-12-09 22:08:43.263 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:08:43.264 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.9605ms
2024-12-09 22:10:48.348 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:10:48.354 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:10:48.355 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.6373ms
2024-12-09 22:10:48.358 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:10:48.363 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:10:48.363 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:10:48.364 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:10:48.365 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:10:48.367 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:10:48.368 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:10:48.369 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:10:48.369 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:10:48.379 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:10:48.380 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:10:48.382 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:10:48.383 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:10:48.384 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:10:48.384 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:10:48.385 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:10:48.386 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.4277ms
2024-12-09 22:10:48.387 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:10:48.387 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 29.2142ms
2024-12-09 22:11:25.532 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:11:25.538 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:11:25.538 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.6113ms
2024-12-09 22:11:25.540 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:11:25.541 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:11:25.542 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:11:25.543 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:11:25.544 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:11:25.546 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:11:25.548 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:11:25.549 +05:30 [INF] Deserializing the notes
2024-12-09 22:11:25.550 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:11:25.552 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.1087ms
2024-12-09 22:11:25.553 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:11:25.554 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.7369ms
2024-12-09 22:11:26.572 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:11:26.574 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:11:26.575 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:11:26.576 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:11:26.577 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:11:26.578 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:11:26.578 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:11:26.579 +05:30 [INF] Deserializing the notes
2024-12-09 22:11:26.579 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:11:26.580 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.1749ms
2024-12-09 22:11:26.581 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:11:26.581 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.5875ms
2024-12-09 22:11:34.795 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:11:34.796 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:11:34.797 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.5206ms
2024-12-09 22:11:34.798 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:11:34.801 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:11:34.804 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:11:34.805 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:11:34.807 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:11:34.808 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:11:34.809 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:11:34.809 +05:30 [INF] Deserializing the notes
2024-12-09 22:11:34.810 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:11:34.811 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7679ms
2024-12-09 22:11:34.812 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:11:34.813 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.0151ms
2024-12-09 22:11:49.266 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:11:49.268 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:11:49.268 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.7801ms
2024-12-09 22:11:49.272 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:11:49.280 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:11:49.280 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:11:49.281 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:11:49.283 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:11:49.284 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:11:49.285 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:11:49.286 +05:30 [INF] Deserializing the notes
2024-12-09 22:11:49.286 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:11:49.287 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8039ms
2024-12-09 22:11:49.287 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:11:49.288 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.2476ms
2024-12-09 22:12:25.540 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:12:25.542 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:12:25.543 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.5851ms
2024-12-09 22:12:25.546 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:12:25.548 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:12:25.549 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:12:25.549 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:12:25.551 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:12:25.552 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:12:25.553 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:12:25.554 +05:30 [INF] Deserializing the notes
2024-12-09 22:12:25.554 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:12:25.555 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6122ms
2024-12-09 22:12:25.556 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:12:25.556 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.5973ms
2024-12-09 22:12:35.497 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:12:35.498 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:12:35.499 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.6034ms
2024-12-09 22:12:35.502 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:12:35.509 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:12:35.510 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:12:35.511 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:12:35.513 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:12:35.515 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:12:35.516 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:12:35.516 +05:30 [INF] Deserializing the notes
2024-12-09 22:12:35.516 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:12:35.517 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4662ms
2024-12-09 22:12:35.518 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:12:35.518 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.0324ms
2024-12-09 22:12:58.931 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:12:58.933 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:12:58.933 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.0417ms
2024-12-09 22:12:58.935 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:12:58.937 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:12:58.939 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:12:58.939 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:12:58.941 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:12:58.942 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:12:58.943 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:12:58.943 +05:30 [INF] Deserializing the notes
2024-12-09 22:12:58.943 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:12:58.944 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.4085ms
2024-12-09 22:12:58.945 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:12:58.945 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.3257ms
2024-12-09 22:12:59.856 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:12:59.857 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:12:59.858 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:12:59.858 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:12:59.860 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:12:59.862 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:12:59.863 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:12:59.863 +05:30 [INF] Deserializing the notes
2024-12-09 22:12:59.864 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:12:59.865 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.009ms
2024-12-09 22:12:59.866 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:12:59.867 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.4715ms
2024-12-09 22:13:05.652 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:13:05.653 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:05.654 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.7086ms
2024-12-09 22:13:05.656 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:13:05.658 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:05.658 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:05.659 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:13:05.661 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:13:05.662 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:13:05.663 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:13:05.664 +05:30 [INF] Deserializing the notes
2024-12-09 22:13:05.665 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:13:05.666 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.3115ms
2024-12-09 22:13:05.667 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:05.669 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.1048ms
2024-12-09 22:13:06.657 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:13:06.658 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:06.658 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:06.659 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:13:06.660 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:13:06.662 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:13:06.663 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:13:06.663 +05:30 [INF] Deserializing the notes
2024-12-09 22:13:06.664 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:13:06.665 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6273ms
2024-12-09 22:13:06.665 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:06.666 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.5938ms
2024-12-09 22:13:11.490 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:13:11.491 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:11.492 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.7761ms
2024-12-09 22:13:11.499 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:13:11.502 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:11.502 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:11.503 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:13:11.506 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:13:11.507 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:13:11.508 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:13:11.509 +05:30 [INF] Deserializing the notes
2024-12-09 22:13:11.509 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:13:11.510 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8476ms
2024-12-09 22:13:11.511 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:11.511 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.8077ms
2024-12-09 22:13:22.111 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:13:22.113 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:22.113 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.0363ms
2024-12-09 22:13:22.116 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:13:22.117 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:22.118 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:22.118 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:13:22.120 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:13:22.122 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:13:22.123 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:13:22.123 +05:30 [INF] Deserializing the notes
2024-12-09 22:13:22.126 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:13:22.129 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 9.2258ms
2024-12-09 22:13:22.130 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:22.134 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.7255ms
2024-12-09 22:13:25.580 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:13:25.582 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:25.582 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:25.583 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:13:25.584 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:13:25.585 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:13:25.586 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:13:25.587 +05:30 [INF] Deserializing the notes
2024-12-09 22:13:25.587 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:13:25.589 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5319ms
2024-12-09 22:13:25.590 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:25.590 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.2312ms
2024-12-09 22:13:28.285 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:13:28.287 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:28.287 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2963ms
2024-12-09 22:13:28.289 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:13:28.291 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:28.292 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:28.293 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:13:28.295 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:13:28.295 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:13:28.296 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:13:28.297 +05:30 [INF] Deserializing the notes
2024-12-09 22:13:28.297 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:13:28.298 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.209ms
2024-12-09 22:13:28.298 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:28.299 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.1813ms
2024-12-09 22:13:29.510 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:13:29.511 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:29.511 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:29.512 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:13:29.513 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:13:29.515 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:13:29.516 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:13:29.516 +05:30 [INF] Deserializing the notes
2024-12-09 22:13:29.517 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:13:29.518 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8072ms
2024-12-09 22:13:29.519 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:29.519 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.9541ms
2024-12-09 22:13:36.720 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1035 - null null
2024-12-09 22:13:36.722 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:36.722 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1035 - 204 null null 2.167ms
2024-12-09 22:13:36.724 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1035 - application/json 4
2024-12-09 22:13:36.726 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:36.727 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 22:13:36.728 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:13:36.729 +05:30 [INF] Received noteId: 1035, isArchive: True
2024-12-09 22:13:36.730 +05:30 [INF] Received request to toggle archive status for note with ID: 1035
2024-12-09 22:13:36.731 +05:30 [INF] Initiating toggle of archive status for note with ID: 1035 for user ID: 1
2024-12-09 22:13:36.731 +05:30 [INF] Received isArchive value: True
2024-12-09 22:13:36.738 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:13:36.741 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 22:13:36.745 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 22:13:36.747 +05:30 [INF] Note with ID: 1035 archive status updated to true
2024-12-09 22:13:36.747 +05:30 [INF] Successfully toggled archive status for note with ID: 1035
2024-12-09 22:13:36.747 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:13:36.748 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 18.9215ms
2024-12-09 22:13:36.749 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 22:13:36.749 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1035 - 200 null application/json; charset=utf-8 24.8223ms
2024-12-09 22:13:38.288 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:13:38.290 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:38.291 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.8858ms
2024-12-09 22:13:38.292 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:13:38.294 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:13:38.295 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:38.295 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:13:38.297 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:13:38.297 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:13:38.298 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:13:38.298 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:13:38.299 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:13:38.300 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:13:38.302 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:13:38.309 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:13:38.311 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:13:38.311 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:13:38.312 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:13:38.313 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:13:38.313 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.9099ms
2024-12-09 22:13:38.314 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:13:38.314 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 22.4498ms
2024-12-09 22:15:18.240 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:15:18.243 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:18.244 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.3057ms
2024-12-09 22:15:18.245 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:15:18.246 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:18.247 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:18.247 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:15:18.249 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:15:18.250 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:15:18.251 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:15:18.251 +05:30 [INF] Deserializing the notes
2024-12-09 22:15:18.252 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:15:18.253 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9564ms
2024-12-09 22:15:18.254 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:18.254 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:15:18.255 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.8422ms
2024-12-09 22:15:18.260 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:18.263 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:18.263 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:15:18.265 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:15:18.266 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:15:18.267 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:15:18.267 +05:30 [INF] Deserializing the notes
2024-12-09 22:15:18.268 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:15:18.269 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2926ms
2024-12-09 22:15:18.270 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:18.270 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.4676ms
2024-12-09 22:15:26.556 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:15:26.558 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:26.558 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.9439ms
2024-12-09 22:15:26.559 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:15:26.561 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:26.562 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:26.563 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:15:26.564 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:15:26.565 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:15:26.566 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:15:26.566 +05:30 [INF] Deserializing the notes
2024-12-09 22:15:26.567 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:15:26.567 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7847ms
2024-12-09 22:15:26.568 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:26.569 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.5441ms
2024-12-09 22:15:33.638 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:15:33.640 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:33.641 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9294ms
2024-12-09 22:15:33.642 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:15:33.643 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:33.644 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:33.645 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:15:33.647 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:15:33.647 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:15:33.648 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:15:33.649 +05:30 [INF] Deserializing the notes
2024-12-09 22:15:33.649 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:15:33.650 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.6285ms
2024-12-09 22:15:33.650 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:33.651 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.9888ms
2024-12-09 22:15:40.217 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1035 - null null
2024-12-09 22:15:40.220 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:40.221 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1035 - 204 null null 3.4175ms
2024-12-09 22:15:40.222 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - application/json 4
2024-12-09 22:15:40.223 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:40.224 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 22:15:40.224 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:15:40.226 +05:30 [INF] Received request to toggle trash status for note with ID: 1035
2024-12-09 22:15:40.226 +05:30 [INF] Initiating toggle of trash status for note with ID: 1035 for user ID: 1
2024-12-09 22:15:40.231 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:15:40.235 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 22:15:40.242 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 22:15:40.244 +05:30 [INF] Note with ID: 1035 trash status updated to true
2024-12-09 22:15:40.245 +05:30 [INF] Successfully toggled trash status for note with ID: 1035
2024-12-09 22:15:40.245 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:15:40.246 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 21.2615ms
2024-12-09 22:15:40.247 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 22:15:40.248 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - 200 null application/json; charset=utf-8 26.263ms
2024-12-09 22:15:43.024 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:15:43.027 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:43.028 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.7811ms
2024-12-09 22:15:43.030 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:15:43.031 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:43.032 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:43.033 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:15:43.034 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:15:43.035 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:15:43.036 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:15:43.037 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:15:43.037 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:15:43.041 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:15:43.043 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:15:43.049 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:15:43.051 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:15:43.052 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:15:43.052 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:15:43.053 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:15:43.054 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.5906ms
2024-12-09 22:15:43.054 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:43.055 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.2101ms
2024-12-09 22:15:49.708 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1035 - null null
2024-12-09 22:15:49.712 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:49.712 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1035 - 204 null null 3.9813ms
2024-12-09 22:15:49.713 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - application/json 5
2024-12-09 22:15:49.714 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:49.715 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 22:15:49.715 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:15:49.716 +05:30 [INF] Received request to toggle trash status for note with ID: 1035
2024-12-09 22:15:49.717 +05:30 [INF] Initiating toggle of trash status for note with ID: 1035 for user ID: 1
2024-12-09 22:15:49.721 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:15:49.724 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 22:15:49.730 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 22:15:49.731 +05:30 [INF] Note with ID: 1035 trash status updated to false
2024-12-09 22:15:49.732 +05:30 [INF] Successfully toggled trash status for note with ID: 1035
2024-12-09 22:15:49.732 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:15:49.733 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 17.129ms
2024-12-09 22:15:49.734 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 22:15:49.735 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1035 - 200 null application/json; charset=utf-8 21.3892ms
2024-12-09 22:15:52.339 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:15:52.340 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:52.341 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.3452ms
2024-12-09 22:15:52.343 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:15:52.344 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:52.345 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:52.345 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:15:52.346 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:15:52.347 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:15:52.348 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:15:52.348 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:15:52.348 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:15:52.350 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:15:52.351 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:15:52.356 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:15:52.357 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:15:52.358 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:15:52.358 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:15:52.358 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:15:52.359 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.09ms
2024-12-09 22:15:52.360 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:52.360 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.7758ms
2024-12-09 22:15:54.706 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1035 - null null
2024-12-09 22:15:54.709 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:54.709 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1035 - 204 null null 4.3293ms
2024-12-09 22:15:54.710 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1035 - application/json 5
2024-12-09 22:15:54.711 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:54.712 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 22:15:54.712 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:15:54.714 +05:30 [INF] Received noteId: 1035, isArchive: False
2024-12-09 22:15:54.714 +05:30 [INF] Received request to toggle archive status for note with ID: 1035
2024-12-09 22:15:54.714 +05:30 [INF] Initiating toggle of archive status for note with ID: 1035 for user ID: 1
2024-12-09 22:15:54.715 +05:30 [INF] Received isArchive value: False
2024-12-09 22:15:54.717 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:15:54.719 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 22:15:54.724 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 22:15:54.725 +05:30 [INF] Note with ID: 1035 archive status updated to false
2024-12-09 22:15:54.725 +05:30 [INF] Successfully toggled archive status for note with ID: 1035
2024-12-09 22:15:54.726 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:15:54.726 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 13.0836ms
2024-12-09 22:15:54.727 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 22:15:54.727 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1035 - 200 null application/json; charset=utf-8 16.8767ms
2024-12-09 22:15:56.942 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:15:56.944 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:15:56.944 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:56.945 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:15:56.947 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:15:56.948 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:15:56.949 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:15:56.949 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:15:56.950 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:15:56.951 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:15:56.953 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:15:56.954 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:15:56.955 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:15:56.956 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:15:56.956 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:15:56.957 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:15:56.957 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.657ms
2024-12-09 22:15:56.958 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:15:56.958 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.6408ms
2024-12-09 22:19:17.861 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:19:17.866 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:19:17.867 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.2721ms
2024-12-09 22:19:17.868 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:19:17.870 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:19:17.871 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:19:17.872 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:19:17.873 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:19:17.874 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:19:17.875 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:19:17.876 +05:30 [INF] Deserializing the notes
2024-12-09 22:19:17.876 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:19:17.877 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7841ms
2024-12-09 22:19:17.878 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:19:17.878 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.0326ms
2024-12-09 22:20:49.668 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:20:49.673 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:20:49.674 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.4426ms
2024-12-09 22:20:49.677 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:20:49.679 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:20:49.680 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:20:49.681 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:20:49.683 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:20:49.684 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:20:49.685 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:20:49.686 +05:30 [INF] Deserializing the notes
2024-12-09 22:20:49.687 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:20:49.688 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2013ms
2024-12-09 22:20:49.689 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:20:49.689 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.9417ms
2024-12-09 22:21:28.763 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:21:28.766 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:21:28.766 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.1406ms
2024-12-09 22:21:28.768 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:21:28.770 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:21:28.770 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:21:28.771 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:21:28.772 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:21:28.773 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:21:28.774 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:21:28.774 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:21:28.774 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:21:28.789 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:21:28.790 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:21:28.797 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:21:28.799 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:21:28.799 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:21:28.800 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:21:28.800 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:21:28.801 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 29.1286ms
2024-12-09 22:21:28.801 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:21:28.802 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.8834ms
2024-12-09 22:21:29.116 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:21:29.119 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:21:29.120 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:21:29.122 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:21:29.123 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:21:29.124 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:21:29.126 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:21:29.126 +05:30 [INF] Deserializing the notes
2024-12-09 22:21:29.127 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:21:29.127 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4807ms
2024-12-09 22:21:29.128 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:21:29.129 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.4184ms
2024-12-09 22:22:52.933 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:22:52.939 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:22:52.939 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.7612ms
2024-12-09 22:22:52.941 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:22:52.942 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:22:52.943 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:22:52.943 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:22:52.944 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:22:52.945 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:22:52.946 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:22:52.947 +05:30 [INF] Deserializing the notes
2024-12-09 22:22:52.948 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:22:52.950 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2008ms
2024-12-09 22:22:52.950 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:22:52.951 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.6701ms
2024-12-09 22:22:53.347 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:22:53.349 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:22:53.350 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:22:53.351 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:22:53.352 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:22:53.353 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:22:53.354 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:22:53.355 +05:30 [INF] Deserializing the notes
2024-12-09 22:22:53.355 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:22:53.356 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8991ms
2024-12-09 22:22:53.356 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:22:53.357 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.9925ms
2024-12-09 22:23:06.577 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:23:06.580 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:23:06.580 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.4985ms
2024-12-09 22:23:06.582 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:23:06.583 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:23:06.584 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:23:06.584 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:23:06.585 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:23:06.586 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:23:06.587 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:23:06.587 +05:30 [INF] Deserializing the notes
2024-12-09 22:23:06.588 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:23:06.589 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7821ms
2024-12-09 22:23:06.589 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:23:06.590 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.685ms
2024-12-09 22:23:07.830 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:23:07.832 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:23:07.833 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:23:07.834 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:23:07.835 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:23:07.836 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:23:07.837 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:23:07.837 +05:30 [INF] Deserializing the notes
2024-12-09 22:23:07.838 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:23:07.839 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7944ms
2024-12-09 22:23:07.840 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:23:07.841 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.0949ms
2024-12-09 22:23:23.205 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:23:23.206 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:23:23.207 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2664ms
2024-12-09 22:23:23.208 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:23:23.210 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:23:23.210 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:23:23.211 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:23:23.212 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:23:23.213 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:23:23.214 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:23:23.214 +05:30 [INF] Deserializing the notes
2024-12-09 22:23:23.215 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:23:23.216 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8889ms
2024-12-09 22:23:23.217 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:23:23.218 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.5475ms
2024-12-09 22:23:42.748 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:23:42.750 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:23:42.751 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.2844ms
2024-12-09 22:23:42.752 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:23:42.755 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:23:42.756 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:23:42.757 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:23:42.758 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:23:42.759 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:23:42.760 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:23:42.760 +05:30 [INF] Deserializing the notes
2024-12-09 22:23:42.761 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:23:42.762 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5881ms
2024-12-09 22:23:42.763 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:23:42.764 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.7056ms
2024-12-09 22:23:43.953 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:23:43.955 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:23:43.955 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:23:43.956 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:23:43.957 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:23:43.959 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:23:43.960 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:23:43.961 +05:30 [INF] Deserializing the notes
2024-12-09 22:23:43.961 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:23:43.962 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2058ms
2024-12-09 22:23:43.963 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:23:43.964 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.6505ms
2024-12-09 22:23:50.133 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:23:50.134 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:23:50.135 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.0279ms
2024-12-09 22:23:50.137 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:23:50.139 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:23:50.139 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:23:50.140 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:23:50.141 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:23:50.142 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:23:50.143 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:23:50.143 +05:30 [INF] Deserializing the notes
2024-12-09 22:23:50.144 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:23:50.145 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.23ms
2024-12-09 22:23:50.146 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:23:50.147 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.3213ms
2024-12-09 22:24:20.455 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:24:20.460 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:24:20.461 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.9077ms
2024-12-09 22:24:20.462 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:24:20.465 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:24:20.465 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:24:20.466 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:24:20.468 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:24:20.469 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:24:20.471 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:24:20.472 +05:30 [INF] Deserializing the notes
2024-12-09 22:24:20.473 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:24:20.474 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.2328ms
2024-12-09 22:24:20.475 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:24:20.476 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.4757ms
2024-12-09 22:24:55.069 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:24:55.074 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:24:55.075 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.1952ms
2024-12-09 22:24:55.077 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:24:55.079 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:24:55.080 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:24:55.081 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:24:55.082 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:24:55.083 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:24:55.085 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:24:55.085 +05:30 [INF] Deserializing the notes
2024-12-09 22:24:55.086 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:24:55.087 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.4773ms
2024-12-09 22:24:55.088 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:24:55.089 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.1819ms
2024-12-09 22:25:05.785 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:25:05.787 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:25:05.787 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4322ms
2024-12-09 22:25:05.789 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:25:05.791 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:25:05.792 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:25:05.793 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:25:05.794 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:25:05.794 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:25:05.796 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:25:05.796 +05:30 [INF] Deserializing the notes
2024-12-09 22:25:05.796 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:25:05.797 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.3989ms
2024-12-09 22:25:05.797 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:25:05.798 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.0992ms
2024-12-09 22:26:01.372 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:26:01.374 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:26:01.374 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4537ms
2024-12-09 22:26:01.376 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:26:01.377 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:26:01.377 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:26:01.378 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:26:01.379 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:26:01.380 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:26:01.381 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:26:01.382 +05:30 [INF] Deserializing the notes
2024-12-09 22:26:01.383 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:26:01.385 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.9267ms
2024-12-09 22:26:01.387 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:26:01.388 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.742ms
2024-12-09 22:26:04.829 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:26:04.830 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:26:04.832 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:26:04.833 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:26:04.835 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:26:04.836 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:26:04.837 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:26:04.838 +05:30 [INF] Deserializing the notes
2024-12-09 22:26:04.838 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:26:04.839 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8649ms
2024-12-09 22:26:04.840 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:26:04.841 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.6276ms
2024-12-09 22:27:37.323 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:27:37.331 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:27:37.332 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.5593ms
2024-12-09 22:27:37.335 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:27:37.337 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:27:37.338 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:27:37.339 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:27:37.340 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:27:37.341 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:27:37.342 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:27:37.343 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:27:37.344 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:27:37.359 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:27:37.360 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:27:37.366 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:27:37.367 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:27:37.368 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:27:37.369 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:27:37.370 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:27:37.371 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 30.6096ms
2024-12-09 22:27:37.371 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:27:37.372 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 36.5553ms
2024-12-09 22:27:37.773 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:27:37.777 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:27:37.778 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:27:37.779 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:27:37.781 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:27:37.782 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:27:37.783 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:27:37.783 +05:30 [INF] Deserializing the notes
2024-12-09 22:27:37.784 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:27:37.785 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6658ms
2024-12-09 22:27:37.786 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:27:37.787 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.4043ms
2024-12-09 22:27:50.970 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:27:50.975 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:27:50.976 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.89ms
2024-12-09 22:27:50.978 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:27:50.980 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:27:50.981 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:27:50.981 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:27:50.982 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:27:50.983 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:27:50.984 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:27:50.985 +05:30 [INF] Deserializing the notes
2024-12-09 22:27:50.985 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:27:50.986 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.798ms
2024-12-09 22:27:50.987 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:27:50.990 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.5985ms
2024-12-09 22:27:53.273 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:27:53.275 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:27:53.276 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:27:53.276 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:27:53.278 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:27:53.280 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:27:53.281 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:27:53.282 +05:30 [INF] Deserializing the notes
2024-12-09 22:27:53.282 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:27:53.284 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.1874ms
2024-12-09 22:27:53.285 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:27:53.286 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.1611ms
2024-12-09 22:28:21.278 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:28:21.283 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:28:21.284 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.448ms
2024-12-09 22:28:21.287 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:28:21.289 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:28:21.289 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:28:21.290 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:28:21.292 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:28:21.293 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:28:21.294 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:28:21.295 +05:30 [INF] Deserializing the notes
2024-12-09 22:28:21.296 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:28:21.296 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8413ms
2024-12-09 22:28:21.297 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:28:21.298 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.7501ms
2024-12-09 22:28:33.677 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:28:33.679 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:28:33.679 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6818ms
2024-12-09 22:28:33.681 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:28:33.683 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:28:33.683 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:28:33.684 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:28:33.685 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:28:33.686 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:28:33.688 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:28:33.689 +05:30 [INF] Deserializing the notes
2024-12-09 22:28:33.689 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:28:33.690 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.9643ms
2024-12-09 22:28:33.691 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:28:33.692 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.0068ms
2024-12-09 22:28:43.857 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:28:43.858 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:28:43.859 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2656ms
2024-12-09 22:28:43.860 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:28:43.863 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:28:43.864 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:28:43.864 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:28:43.866 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:28:43.867 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:28:43.868 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:28:43.868 +05:30 [INF] Deserializing the notes
2024-12-09 22:28:43.869 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:28:43.870 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4904ms
2024-12-09 22:28:43.871 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:28:43.872 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.6631ms
2024-12-09 22:28:54.441 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:28:54.442 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:28:54.443 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.1527ms
2024-12-09 22:28:54.444 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:28:54.446 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:28:54.447 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:28:54.447 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:28:54.449 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:28:54.450 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:28:54.451 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:28:54.452 +05:30 [INF] Deserializing the notes
2024-12-09 22:28:54.452 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:28:54.453 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4572ms
2024-12-09 22:28:54.454 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:28:54.457 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.9843ms
2024-12-09 22:31:48.569 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:31:48.575 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:31:48.576 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.8325ms
2024-12-09 22:31:48.579 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:31:48.580 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:31:48.583 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:31:48.585 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:31:48.588 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:31:48.591 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:31:48.592 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:31:48.593 +05:30 [INF] Deserializing the notes
2024-12-09 22:31:48.594 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:31:48.595 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.7719ms
2024-12-09 22:31:48.596 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:31:48.598 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.9916ms
2024-12-09 22:32:18.724 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:32:18.726 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:32:18.726 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.0212ms
2024-12-09 22:32:18.728 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:32:18.729 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:32:18.730 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:32:18.730 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:32:18.731 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:32:18.733 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:32:18.733 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:32:18.734 +05:30 [INF] Deserializing the notes
2024-12-09 22:32:18.735 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:32:18.736 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3383ms
2024-12-09 22:32:18.736 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:32:18.737 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.3644ms
2024-12-09 22:32:38.794 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:32:38.806 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:32:38.807 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.4236ms
2024-12-09 22:32:38.811 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:32:38.812 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:32:38.813 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:32:38.814 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:32:38.815 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:32:38.816 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:32:38.817 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:32:38.817 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:32:38.818 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:32:38.832 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:32:38.833 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:32:38.838 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:32:38.839 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:32:38.840 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:32:38.841 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:32:38.841 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:32:38.842 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 27.0089ms
2024-12-09 22:32:38.843 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:32:38.843 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 33.0408ms
2024-12-09 22:32:46.975 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:32:46.976 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:32:46.976 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.1284ms
2024-12-09 22:32:46.978 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:32:46.980 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:32:46.981 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:32:46.982 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:32:46.983 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:32:46.984 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:32:46.985 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:32:46.985 +05:30 [INF] Deserializing the notes
2024-12-09 22:32:46.985 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:32:46.986 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.2345ms
2024-12-09 22:32:46.986 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:32:46.987 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.4713ms
2024-12-09 22:32:48.731 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:32:48.735 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:32:48.736 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:32:48.738 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:32:48.741 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:32:48.743 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:32:48.744 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:32:48.745 +05:30 [INF] Deserializing the notes
2024-12-09 22:32:48.745 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:32:48.747 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 6.5877ms
2024-12-09 22:32:48.748 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:32:48.749 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.5815ms
2024-12-09 22:33:01.410 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:33:01.412 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:33:01.412 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.0867ms
2024-12-09 22:33:01.413 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:33:01.415 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:33:01.416 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:33:01.416 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:33:01.417 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:33:01.418 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:33:01.419 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:33:01.420 +05:30 [INF] Deserializing the notes
2024-12-09 22:33:01.420 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:33:01.421 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0534ms
2024-12-09 22:33:01.422 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:33:01.423 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.5746ms
2024-12-09 22:34:34.412 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:34:34.414 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:34:34.416 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.0402ms
2024-12-09 22:34:34.419 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:34:34.423 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:34:34.425 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:34:34.427 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:34:34.430 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:34:34.434 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:34:34.437 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:34:34.438 +05:30 [INF] Deserializing the notes
2024-12-09 22:34:34.441 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:34:34.445 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 14.9531ms
2024-12-09 22:34:34.446 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:34:34.447 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 28.9637ms
2024-12-09 22:34:35.720 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:34:35.723 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:34:35.723 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:34:35.724 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:34:35.725 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:34:35.726 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:34:35.727 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:34:35.728 +05:30 [INF] Deserializing the notes
2024-12-09 22:34:35.729 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:34:35.730 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5474ms
2024-12-09 22:34:35.731 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:34:35.731 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.8212ms
2024-12-09 22:34:38.113 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:34:38.115 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:34:38.116 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:34:38.116 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:34:38.118 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:34:38.119 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:34:38.120 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:34:38.121 +05:30 [INF] Deserializing the notes
2024-12-09 22:34:38.121 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:34:38.122 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6532ms
2024-12-09 22:34:38.123 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:34:38.124 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.0633ms
2024-12-09 22:34:39.752 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:34:39.754 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:34:39.754 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.235ms
2024-12-09 22:34:39.756 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:34:39.759 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:34:39.759 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:34:39.760 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:34:39.761 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:34:39.762 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:34:39.763 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:34:39.764 +05:30 [INF] Deserializing the notes
2024-12-09 22:34:39.765 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:34:39.766 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6783ms
2024-12-09 22:34:39.767 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:34:39.767 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.4525ms
2024-12-09 22:35:12.370 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:35:12.373 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:35:12.374 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.7132ms
2024-12-09 22:35:12.376 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:35:12.379 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:35:12.380 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:35:12.381 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:35:12.382 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:35:12.383 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:35:12.384 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:35:12.385 +05:30 [INF] Deserializing the notes
2024-12-09 22:35:12.385 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:35:12.386 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2573ms
2024-12-09 22:35:12.387 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:35:12.388 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.8569ms
2024-12-09 22:35:15.874 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:35:15.878 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:35:15.879 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:35:15.880 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:35:15.882 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:35:15.883 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:35:15.884 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:35:15.885 +05:30 [INF] Deserializing the notes
2024-12-09 22:35:15.886 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:35:15.887 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5025ms
2024-12-09 22:35:15.888 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:35:15.889 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.732ms
2024-12-09 22:35:45.894 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:35:45.896 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:35:45.896 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.3738ms
2024-12-09 22:35:45.898 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:35:45.900 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:35:45.900 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:35:45.901 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:35:45.902 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:35:45.903 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:35:45.904 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:35:45.905 +05:30 [INF] Deserializing the notes
2024-12-09 22:35:45.905 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:35:45.907 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7078ms
2024-12-09 22:35:45.908 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:35:45.909 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.9569ms
2024-12-09 22:35:46.825 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:35:46.832 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:35:46.833 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:35:46.834 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:35:46.840 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:35:46.841 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:35:46.844 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:35:46.845 +05:30 [INF] Deserializing the notes
2024-12-09 22:35:46.846 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:35:46.848 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.0462ms
2024-12-09 22:35:46.848 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:35:46.849 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 23.8848ms
2024-12-09 22:36:56.266 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:36:56.278 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:36:56.279 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.5603ms
2024-12-09 22:36:56.283 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:36:56.284 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:36:56.285 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:36:56.286 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:36:56.287 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:36:56.288 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:36:56.289 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:36:56.289 +05:30 [INF] Deserializing the notes
2024-12-09 22:36:56.290 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:36:56.290 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8939ms
2024-12-09 22:36:56.291 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:36:56.292 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.7099ms
2024-12-09 22:37:30.173 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:37:30.177 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:37:30.178 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.5028ms
2024-12-09 22:37:30.180 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:37:30.181 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:37:30.182 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:37:30.182 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:37:30.184 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:37:30.185 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:37:30.186 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:37:30.186 +05:30 [INF] Deserializing the notes
2024-12-09 22:37:30.187 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:37:30.188 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3039ms
2024-12-09 22:37:30.189 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:37:30.189 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.6897ms
2024-12-09 22:37:31.071 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:37:31.072 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:37:31.073 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:37:31.073 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:37:31.074 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:37:31.075 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:37:31.076 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:37:31.076 +05:30 [INF] Deserializing the notes
2024-12-09 22:37:31.077 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:37:31.078 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.5584ms
2024-12-09 22:37:31.078 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:37:31.079 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.1326ms
2024-12-09 22:37:44.115 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:37:44.116 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:37:44.117 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.6883ms
2024-12-09 22:37:44.118 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:37:44.119 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:37:44.120 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:37:44.120 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:37:44.123 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:37:44.125 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:37:44.126 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:37:44.127 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:37:44.128 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:37:44.154 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:37:44.155 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:37:44.160 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:37:44.162 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:37:44.162 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:37:44.163 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:37:44.163 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:37:44.164 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 41.3362ms
2024-12-09 22:37:44.164 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:37:44.165 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.0365ms
2024-12-09 22:38:26.447 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:38:26.459 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:38:26.460 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 12.9579ms
2024-12-09 22:38:26.463 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:38:26.465 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:38:26.467 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:38:26.469 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:38:26.472 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:38:26.474 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:38:26.475 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:38:26.475 +05:30 [INF] Deserializing the notes
2024-12-09 22:38:26.475 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:38:26.476 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.5666ms
2024-12-09 22:38:26.477 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:38:26.477 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 14.2973ms
2024-12-09 22:38:27.901 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:38:27.905 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:38:27.906 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:38:27.907 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:38:27.920 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:38:27.921 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:38:27.923 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:38:27.923 +05:30 [INF] Deserializing the notes
2024-12-09 22:38:27.924 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:38:27.925 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.4447ms
2024-12-09 22:38:27.926 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:38:27.926 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.2115ms
2024-12-09 22:38:42.307 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:38:42.309 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:38:42.310 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.671ms
2024-12-09 22:38:42.313 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:38:42.315 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:38:42.316 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:38:42.317 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:38:42.320 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:38:42.321 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:38:42.327 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:38:42.328 +05:30 [INF] Deserializing the notes
2024-12-09 22:38:42.329 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:38:42.329 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 10.2881ms
2024-12-09 22:38:42.330 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:38:42.331 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 18.3277ms
2024-12-09 22:39:01.635 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:39:01.639 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:39:01.640 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.6241ms
2024-12-09 22:39:01.644 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:39:01.647 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:39:01.649 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:01.651 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:39:01.653 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:39:01.655 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:39:01.656 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:39:01.657 +05:30 [INF] Deserializing the notes
2024-12-09 22:39:01.658 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:39:01.658 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5579ms
2024-12-09 22:39:01.659 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:01.660 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 17.1622ms
2024-12-09 22:39:16.152 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:39:16.154 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:39:16.155 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.6476ms
2024-12-09 22:39:16.157 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:39:16.159 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:39:16.159 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:16.160 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:39:16.162 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:39:16.163 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:39:16.164 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:39:16.164 +05:30 [INF] Deserializing the notes
2024-12-09 22:39:16.165 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:39:16.166 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7109ms
2024-12-09 22:39:16.167 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:16.168 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.9865ms
2024-12-09 22:39:18.932 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:39:18.935 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:39:18.935 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:18.936 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:39:18.937 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:39:18.938 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:39:18.939 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:39:18.940 +05:30 [INF] Deserializing the notes
2024-12-09 22:39:18.940 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:39:18.941 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0091ms
2024-12-09 22:39:18.942 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:18.943 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.4859ms
2024-12-09 22:39:19.591 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:39:19.594 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:39:19.595 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:19.596 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:39:19.597 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:39:19.598 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:39:19.599 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:39:19.599 +05:30 [INF] Deserializing the notes
2024-12-09 22:39:19.600 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:39:19.601 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.3471ms
2024-12-09 22:39:19.602 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:19.603 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.4489ms
2024-12-09 22:39:36.066 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:39:36.068 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:39:36.069 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9815ms
2024-12-09 22:39:36.071 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:39:36.073 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:39:36.075 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:36.076 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:39:36.078 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:39:36.079 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:39:36.080 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:39:36.080 +05:30 [INF] Deserializing the notes
2024-12-09 22:39:36.081 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:39:36.082 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.1072ms
2024-12-09 22:39:36.083 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:36.083 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.3993ms
2024-12-09 22:39:48.747 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:39:48.749 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:39:48.749 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.543ms
2024-12-09 22:39:48.751 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:39:48.753 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:39:48.754 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:48.754 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:39:48.756 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:39:48.757 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:39:48.758 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:39:48.759 +05:30 [INF] Deserializing the notes
2024-12-09 22:39:48.760 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:39:48.761 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7345ms
2024-12-09 22:39:48.761 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:48.762 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.9743ms
2024-12-09 22:39:52.605 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:39:52.607 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:39:52.608 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:52.608 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:39:52.610 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:39:52.612 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:39:52.633 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:39:52.639 +05:30 [INF] Deserializing the notes
2024-12-09 22:39:52.643 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:39:52.645 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 35.5212ms
2024-12-09 22:39:52.646 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:39:52.647 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 41.3803ms
2024-12-09 22:40:04.017 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:40:04.019 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:40:04.019 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.087ms
2024-12-09 22:40:04.022 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:40:04.025 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:40:04.026 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:40:04.026 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:40:04.028 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:40:04.029 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:40:04.030 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:40:04.032 +05:30 [INF] Deserializing the notes
2024-12-09 22:40:04.033 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:40:04.035 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 7.5805ms
2024-12-09 22:40:04.036 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:40:04.038 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 16.1782ms
2024-12-09 22:40:16.516 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:40:16.518 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:40:16.519 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6068ms
2024-12-09 22:40:16.521 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:40:16.532 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:40:16.533 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:40:16.533 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:40:16.536 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:40:16.537 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:40:16.537 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:40:16.538 +05:30 [INF] Deserializing the notes
2024-12-09 22:40:16.539 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:40:16.539 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8092ms
2024-12-09 22:40:16.540 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:40:16.540 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.2085ms
2024-12-09 22:40:26.519 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:40:26.521 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:40:26.522 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.5113ms
2024-12-09 22:40:26.524 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:40:26.525 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:40:26.526 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:40:26.526 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:40:26.527 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:40:26.528 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:40:26.529 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:40:26.529 +05:30 [INF] Deserializing the notes
2024-12-09 22:40:26.529 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:40:26.530 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 2.9484ms
2024-12-09 22:40:26.531 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:40:26.531 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 7.5779ms
2024-12-09 22:40:46.923 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:40:46.933 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:40:46.934 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.2741ms
2024-12-09 22:40:46.937 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:40:46.940 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:40:46.940 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:40:46.942 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:40:46.943 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:40:46.945 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:40:46.946 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:40:46.946 +05:30 [INF] Deserializing the notes
2024-12-09 22:40:46.946 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:40:46.947 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.1934ms
2024-12-09 22:40:46.947 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:40:46.948 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.1917ms
2024-12-09 22:40:55.966 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:40:55.968 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:40:55.969 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.9224ms
2024-12-09 22:40:55.971 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:40:55.973 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:40:55.974 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:40:55.975 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:40:55.976 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:40:55.977 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:40:55.978 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:40:55.979 +05:30 [INF] Deserializing the notes
2024-12-09 22:40:55.980 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:40:55.981 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4558ms
2024-12-09 22:40:55.982 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:40:55.983 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.3017ms
2024-12-09 22:41:01.776 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:41:01.778 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:41:01.778 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.3102ms
2024-12-09 22:41:01.780 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:41:01.780 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:41:01.781 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:41:01.781 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:41:01.782 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:41:01.784 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:41:01.784 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:41:01.784 +05:30 [INF] Deserializing the notes
2024-12-09 22:41:01.785 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:41:01.785 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.1153ms
2024-12-09 22:41:01.786 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:41:01.786 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 6.9509ms
2024-12-09 22:41:22.382 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:41:22.389 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:41:22.389 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7848ms
2024-12-09 22:41:22.393 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:41:22.397 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:41:22.398 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:41:22.399 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:41:22.401 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:41:22.401 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:41:22.402 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:41:22.403 +05:30 [INF] Deserializing the notes
2024-12-09 22:41:22.404 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:41:22.405 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6041ms
2024-12-09 22:41:22.406 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:41:22.407 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.8044ms
2024-12-09 22:42:31.581 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:42:31.589 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:42:31.590 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.3028ms
2024-12-09 22:42:31.593 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:42:31.594 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:42:31.595 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:42:31.596 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:42:31.597 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:42:31.598 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:42:31.599 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:42:31.600 +05:30 [INF] Deserializing the notes
2024-12-09 22:42:31.600 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:42:31.601 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.77ms
2024-12-09 22:42:31.601 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:42:31.602 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.6698ms
2024-12-09 22:42:42.053 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:42:42.056 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:42:42.056 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6558ms
2024-12-09 22:42:42.059 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:42:42.065 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:42:42.066 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:42:42.068 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:42:42.070 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:42:42.070 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:42:42.071 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:42:42.072 +05:30 [INF] Deserializing the notes
2024-12-09 22:42:42.072 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:42:42.073 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7404ms
2024-12-09 22:42:42.074 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:42:42.075 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.7976ms
2024-12-09 22:42:56.531 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/257236 - application/json 71
2024-12-09 22:42:56.533 +05:30 [INF] CORS policy execution failed.
2024-12-09 22:42:56.534 +05:30 [INF] Request origin https://localhost:5000 does not have permission to access the resource.
2024-12-09 22:42:56.537 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:42:56.545 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2024-12-09 22:42:56.546 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/257236 - 401 null application/json 14.9249ms
2024-12-09 22:44:45.606 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:44:45.612 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:44:45.612 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.0386ms
2024-12-09 22:44:45.614 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:44:45.616 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:44:45.617 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:44:45.617 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:44:45.621 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:44:45.621 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:44:45.622 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:44:45.623 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:44:45.623 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:44:45.627 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:44:45.629 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:44:45.637 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:44:45.639 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:44:45.639 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:44:45.641 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:44:45.642 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:44:45.642 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.9118ms
2024-12-09 22:44:45.643 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:44:45.644 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.1059ms
2024-12-09 22:45:21.442 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:45:21.445 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:45:21.446 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8902ms
2024-12-09 22:45:21.447 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:45:21.449 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:45:21.450 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:45:21.451 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:45:21.452 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:45:21.454 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:45:21.455 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:45:21.456 +05:30 [INF] Deserializing the notes
2024-12-09 22:45:21.456 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:45:21.458 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.5059ms
2024-12-09 22:45:21.459 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:45:21.460 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.0222ms
2024-12-09 22:45:22.478 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:45:22.480 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:45:22.481 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:45:22.483 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:45:22.485 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:45:22.486 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:45:22.487 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:45:22.488 +05:30 [INF] Deserializing the notes
2024-12-09 22:45:22.488 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:45:22.490 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.7494ms
2024-12-09 22:45:22.491 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:45:22.492 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.4922ms
2024-12-09 22:46:18.769 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:46:18.772 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:46:18.772 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.3932ms
2024-12-09 22:46:18.774 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:46:18.778 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:46:18.779 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:46:18.780 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:46:18.782 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:46:18.783 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:46:18.784 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:46:18.785 +05:30 [INF] Deserializing the notes
2024-12-09 22:46:18.785 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:46:18.786 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4031ms
2024-12-09 22:46:18.787 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:46:18.788 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.3893ms
2024-12-09 22:46:19.301 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:46:19.305 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:46:19.306 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:46:19.306 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:46:19.307 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:46:19.308 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:46:19.309 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:46:19.310 +05:30 [INF] Deserializing the notes
2024-12-09 22:46:19.310 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:46:19.311 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.8505ms
2024-12-09 22:46:19.312 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:46:19.312 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.8045ms
2024-12-09 22:46:52.754 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:46:52.762 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:46:52.763 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.0336ms
2024-12-09 22:46:52.768 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:46:52.771 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:46:52.771 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:46:52.772 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:46:52.773 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:46:52.774 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:46:52.775 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:46:52.776 +05:30 [INF] Deserializing the notes
2024-12-09 22:46:52.776 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:46:52.777 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4408ms
2024-12-09 22:46:52.778 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:46:52.779 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.0382ms
2024-12-09 22:47:01.316 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:47:01.318 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:01.318 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.5387ms
2024-12-09 22:47:01.320 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:47:01.322 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:01.323 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:01.324 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:47:01.325 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:47:01.326 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:47:01.327 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:47:01.327 +05:30 [INF] Deserializing the notes
2024-12-09 22:47:01.328 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:47:01.329 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.0862ms
2024-12-09 22:47:01.330 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:01.331 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.6657ms
2024-12-09 22:47:06.876 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:47:06.879 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:06.879 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6639ms
2024-12-09 22:47:06.881 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:47:06.884 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:06.885 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:06.885 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:47:06.887 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:47:06.888 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:47:06.889 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:47:06.890 +05:30 [INF] Deserializing the notes
2024-12-09 22:47:06.890 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:47:06.891 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4898ms
2024-12-09 22:47:06.892 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:06.893 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.4268ms
2024-12-09 22:47:22.953 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:47:22.955 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:22.955 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.415ms
2024-12-09 22:47:22.957 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:47:22.960 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:22.961 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:22.962 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:47:22.963 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:47:22.964 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:47:22.965 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:47:22.966 +05:30 [INF] Deserializing the notes
2024-12-09 22:47:22.967 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:47:22.968 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.2195ms
2024-12-09 22:47:22.969 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:22.970 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.1563ms
2024-12-09 22:47:24.876 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:47:24.877 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:24.878 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:24.878 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:47:24.879 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:47:24.880 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:47:24.881 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:47:24.882 +05:30 [INF] Deserializing the notes
2024-12-09 22:47:24.882 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:47:24.883 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.9741ms
2024-12-09 22:47:24.884 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:24.885 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 9.4306ms
2024-12-09 22:47:38.425 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:47:38.428 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:38.428 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.5335ms
2024-12-09 22:47:38.430 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:47:38.433 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:38.434 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:38.435 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:47:38.437 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:47:38.439 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:47:38.439 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:47:38.440 +05:30 [INF] Deserializing the notes
2024-12-09 22:47:38.440 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:47:38.441 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4829ms
2024-12-09 22:47:38.442 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:38.443 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.9305ms
2024-12-09 22:47:45.619 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:47:45.623 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:45.624 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.5307ms
2024-12-09 22:47:45.625 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:47:45.627 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:45.628 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:45.629 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:47:45.631 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:47:45.632 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:47:45.633 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:47:45.633 +05:30 [INF] Deserializing the notes
2024-12-09 22:47:45.634 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:47:45.635 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.4983ms
2024-12-09 22:47:45.636 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:45.636 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.8151ms
2024-12-09 22:47:53.734 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:47:53.736 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:53.736 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.9499ms
2024-12-09 22:47:53.738 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:47:53.739 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:53.740 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:53.740 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:47:53.742 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:47:53.743 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:47:53.744 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:47:53.744 +05:30 [INF] Deserializing the notes
2024-12-09 22:47:53.745 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:47:53.746 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6029ms
2024-12-09 22:47:53.747 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:53.748 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.0031ms
2024-12-09 22:47:58.267 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:47:58.270 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:47:58.271 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:58.272 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:47:58.274 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:47:58.274 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:47:58.276 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:47:58.276 +05:30 [INF] Deserializing the notes
2024-12-09 22:47:58.277 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:47:58.278 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6957ms
2024-12-09 22:47:58.279 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:47:58.280 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 13.1881ms
2024-12-09 22:48:01.110 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:48:01.113 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:48:01.113 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.726ms
2024-12-09 22:48:01.115 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:48:01.118 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:48:01.120 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:48:01.120 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:48:01.121 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:48:01.122 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:48:01.123 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:48:01.124 +05:30 [INF] Deserializing the notes
2024-12-09 22:48:01.125 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:48:01.126 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.6465ms
2024-12-09 22:48:01.127 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:48:01.128 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.8648ms
2024-12-09 22:48:08.206 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:48:08.210 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:48:08.211 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.5457ms
2024-12-09 22:48:08.213 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:48:08.215 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:48:08.216 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:48:08.217 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:48:08.218 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:48:08.220 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:48:08.221 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:48:08.221 +05:30 [INF] Deserializing the notes
2024-12-09 22:48:08.222 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:48:08.223 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8755ms
2024-12-09 22:48:08.224 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:48:08.225 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 12.2726ms
2024-12-09 22:48:09.375 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:48:09.377 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:48:09.378 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:48:09.379 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:48:09.380 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:48:09.381 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:48:09.382 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:48:09.383 +05:30 [INF] Deserializing the notes
2024-12-09 22:48:09.384 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:48:09.385 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.8437ms
2024-12-09 22:48:09.386 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:48:09.386 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.1617ms
2024-12-09 22:48:15.528 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:48:15.530 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:48:15.530 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.3179ms
2024-12-09 22:48:15.532 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:48:15.533 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:48:15.534 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:48:15.534 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:48:15.535 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:48:15.536 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:48:15.537 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:48:15.538 +05:30 [INF] Deserializing the notes
2024-12-09 22:48:15.538 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:48:15.539 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 3.7539ms
2024-12-09 22:48:15.540 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:48:15.541 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 8.839ms
2024-12-09 22:48:20.107 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:48:20.109 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:48:20.110 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:48:20.111 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:48:20.115 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:48:20.117 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:48:20.118 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:48:20.119 +05:30 [INF] Deserializing the notes
2024-12-09 22:48:20.119 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:48:20.120 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.0019ms
2024-12-09 22:48:20.121 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:48:20.122 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.2741ms
2024-12-09 22:48:25.211 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:48:25.212 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:48:25.213 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.6021ms
2024-12-09 22:48:25.214 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:48:25.216 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:48:25.217 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:48:25.217 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:48:25.219 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:48:25.220 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:48:25.222 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:48:25.222 +05:30 [INF] Deserializing the notes
2024-12-09 22:48:25.223 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:48:25.224 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 5.414ms
2024-12-09 22:48:25.225 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:48:25.226 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.4631ms
2024-12-09 22:49:25.561 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:49:25.564 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:49:25.565 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.6839ms
2024-12-09 22:49:25.567 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:49:25.569 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:49:25.570 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:49:25.571 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:49:25.573 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:49:25.575 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:49:25.576 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:49:25.580 +05:30 [INF] Deserializing the notes
2024-12-09 22:49:25.580 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:49:25.581 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 8.158ms
2024-12-09 22:49:25.582 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:49:25.583 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 15.8692ms
2024-12-09 22:50:38.062 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:50:38.063 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:50:38.064 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2483ms
2024-12-09 22:50:38.066 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:50:38.068 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:50:38.069 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:50:38.070 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:50:38.072 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:50:38.073 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:50:38.075 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:50:38.076 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:50:38.076 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:50:38.091 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:50:38.093 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:50:38.099 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:50:38.101 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:50:38.101 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:50:38.102 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:50:38.102 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:50:38.103 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 31.2196ms
2024-12-09 22:50:38.104 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:50:38.105 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 38.9614ms
2024-12-09 22:51:46.800 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:51:46.805 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:51:46.806 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.3686ms
2024-12-09 22:51:46.809 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:51:46.811 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:51:46.815 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:21:46'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:51:46.825 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:51:46.860 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:51:46.897 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:51:46.899 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:51:46.901 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:00000125": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:51:46.916 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 107.2926ms
2024-12-09 22:51:53.135 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:51:53.137 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:51:53.137 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.5598ms
2024-12-09 22:51:53.139 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:51:53.142 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:51:53.143 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:21:53'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:51:53.146 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:51:53.160 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:51:53.189 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:51:53.192 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:51:53.193 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:00000129": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:51:53.196 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 57.5925ms
2024-12-09 22:51:55.562 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:51:55.564 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:51:55.565 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:21:55'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:51:55.567 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:51:55.584 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:51:55.609 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:51:55.611 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:51:55.611 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:0000012B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:51:55.614 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 51.7465ms
2024-12-09 22:52:02.865 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:52:02.867 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:52:02.868 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.8119ms
2024-12-09 22:52:02.870 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:52:02.872 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:52:02.873 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:22:02'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:52:02.877 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:52:02.891 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:52:02.915 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:52:02.918 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:52:02.919 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:0000012F": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:52:02.923 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 52.5342ms
2024-12-09 22:52:05.569 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:52:05.573 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:52:05.575 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:22:05'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:52:05.578 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:52:05.594 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:52:05.618 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:52:05.620 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:52:05.620 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:00000131": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:52:05.623 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 54.3563ms
2024-12-09 22:52:08.325 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:52:08.327 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:52:08.327 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.2918ms
2024-12-09 22:52:08.329 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:52:08.331 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:52:08.332 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:22:08'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:52:08.335 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:52:08.350 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:52:08.382 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:52:08.386 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:52:08.387 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:00000135": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:52:08.390 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 62.0281ms
2024-12-09 22:52:11.748 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:52:11.751 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:52:11.752 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:22:11'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:52:11.754 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:52:11.771 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:52:11.800 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:52:11.802 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:52:11.803 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:00000137": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:52:11.806 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 58.4305ms
2024-12-09 22:52:17.451 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:52:17.453 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:52:17.453 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4534ms
2024-12-09 22:52:17.455 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:52:17.457 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:52:17.458 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:22:17'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:52:17.461 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:52:17.476 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:52:17.502 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:52:17.504 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:52:17.505 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:0000013B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:52:17.508 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 53.1489ms
2024-12-09 22:52:19.265 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:52:19.268 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:52:19.270 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:22:19'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:52:19.273 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:52:19.288 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:52:19.313 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:52:19.315 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:52:19.316 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:0000013D": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:52:19.320 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 55.0407ms
2024-12-09 22:52:22.188 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:52:22.193 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:52:22.200 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:22:22'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:52:22.203 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:52:22.221 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:52:22.251 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:52:22.253 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:52:22.254 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:0000013F": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:52:22.258 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 69.6841ms
2024-12-09 22:53:35.934 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:53:35.936 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:53:35.937 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.4449ms
2024-12-09 22:53:35.939 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:53:35.941 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:53:35.942 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:23:35'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:53:35.944 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:53:35.957 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:53:35.981 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:53:35.983 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:53:35.984 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:00000143": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:53:35.986 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 47.786ms
2024-12-09 22:53:43.543 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:53:43.546 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:53:43.547 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.1601ms
2024-12-09 22:53:43.548 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:53:43.551 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:53:43.552 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:23:43'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:53:43.554 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:53:43.569 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:53:43.594 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:53:43.595 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:53:43.596 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:00000147": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:53:43.598 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 50.0291ms
2024-12-09 22:53:52.438 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:53:52.440 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:53:52.441 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.5508ms
2024-12-09 22:53:52.443 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:53:52.445 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:53:52.446 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:23:52'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:53:52.447 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:53:52.461 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:53:52.491 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:53:52.493 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:53:52.494 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:0000014B": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:53:52.498 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 55.3785ms
2024-12-09 22:53:53.569 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:53:53.572 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:53:53.573 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '09-12-2024 17:15:50', Current time (UTC): '09-12-2024 17:23:53'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-12-09 22:53:53.575 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:53:53.590 +05:30 [ERR] An unhandled exception has occurred.
System.InvalidOperationException: StatusCode cannot be set because the response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_StatusCode(Int32 value)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.<>c__DisplayClass0_0.<<HandleAsync>g__Handle|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 25
2024-12-09 22:53:53.615 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-12-09 22:53:53.617 +05:30 [WRN] The response has already started, the error page middleware will not be executed.
2024-12-09 22:53:53.617 +05:30 [ERR] Connection id "0HN8ODI6VKJAI", Request id "0HN8ODI6VKJAI:0000014D": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.HandleExceptionAsync(HttpContext context, Exception exception) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 36
   at DataLayer.Exceptions.GlobalExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\FunDo\DataLayer\Exceptions\GlobalExceptionHandlingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2024-12-09 22:53:53.620 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 50.5875ms
2024-12-09 22:54:40.915 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-09 22:54:40.921 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:54:40.921 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 6.5586ms
2024-12-09 22:54:40.923 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-09 22:54:40.924 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:54:40.924 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 22:54:40.924 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-09 22:54:40.945 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-09 22:54:40.945 +05:30 [INF] Checking if the user present
2024-12-09 22:54:40.946 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-09 22:54:40.950 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-09 22:54:40.951 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-09 22:54:40.952 +05:30 [INF] Verifying the password
2024-12-09 22:54:41.122 +05:30 [INF] Password is valid and token is generated
2024-12-09 22:54:41.124 +05:30 [INF] Login successful
2024-12-09 22:54:41.125 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 22:54:41.125 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 200.0137ms
2024-12-09 22:54:41.126 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 22:54:41.127 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 204.4037ms
2024-12-09 22:54:41.136 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:54:41.141 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:54:41.141 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.7421ms
2024-12-09 22:54:41.143 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:54:41.145 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:54:41.146 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:54:41.147 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:54:41.149 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:54:41.150 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:54:41.151 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:54:41.152 +05:30 [INF] Deserializing the notes
2024-12-09 22:54:41.152 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:54:41.153 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2641ms
2024-12-09 22:54:41.154 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:54:41.154 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 11.3808ms
2024-12-09 22:54:44.494 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 22:54:44.499 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:54:44.500 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 6.1186ms
2024-12-09 22:54:44.501 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 129
2024-12-09 22:54:44.503 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:54:44.503 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:54:44.504 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2024-12-09 22:54:44.504 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 401 null application/json 2.9884ms
2024-12-09 22:55:27.036 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 22:55:27.039 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:55:27.040 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 4.9883ms
2024-12-09 22:55:27.043 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 129
2024-12-09 22:55:27.045 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:55:27.046 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 22:55:27.046 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2024-12-09 22:55:27.047 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 401 null application/json 4.2434ms
2024-12-09 22:55:47.222 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:55:47.223 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:55:47.223 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 2.0811ms
2024-12-09 22:55:47.225 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:55:47.226 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:55:47.227 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:55:47.228 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:55:47.229 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:55:47.230 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:55:47.231 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:55:47.231 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:55:47.231 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:55:47.235 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:55:47.237 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:55:47.244 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:55:47.246 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:55:47.247 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:55:47.248 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:55:47.248 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:55:47.249 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.2144ms
2024-12-09 22:55:47.249 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:55:47.250 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 25.4531ms
2024-12-09 22:55:54.992 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 22:55:54.995 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:55:54.997 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 5.2646ms
2024-12-09 22:55:54.999 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 129
2024-12-09 22:55:55.001 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:55:55.002 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 22:55:55.008 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:55:55.013 +05:30 [INF] Updating note with ID: 1034
2024-12-09 22:55:55.015 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 22:55:55.019 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:55:55.020 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:55:55.022 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 22:55:55.025 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 22:55:55.026 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 22:55:55.027 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 22:55:55.028 +05:30 [INF] Retrieved notes successfully
2024-12-09 22:55:55.029 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 22:55:55.031 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 21.5469ms
2024-12-09 22:55:55.032 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 22:55:55.032 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 33.7691ms
2024-12-09 22:56:02.935 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:56:02.936 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:56:02.936 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.9876ms
2024-12-09 22:56:02.938 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:56:02.940 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:56:02.940 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:56:02.940 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:56:02.941 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:56:02.942 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:56:02.943 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:56:02.943 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:56:02.944 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:56:02.948 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:56:02.950 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:56:02.952 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:56:02.953 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:56:02.954 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:56:02.955 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:56:02.956 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:56:02.957 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 15.6244ms
2024-12-09 22:56:02.957 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:56:02.958 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 19.903ms
2024-12-09 22:56:10.825 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 22:56:10.826 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:56:10.827 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 1.6655ms
2024-12-09 22:56:10.828 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:56:10.829 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:56:10.829 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:56:10.830 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:56:10.832 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:56:10.833 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:56:10.834 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 22:56:10.834 +05:30 [INF] Deserializing the notes
2024-12-09 22:56:10.835 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:56:10.836 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 4.2464ms
2024-12-09 22:56:10.837 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:56:10.838 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 10.4167ms
2024-12-09 22:56:13.824 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 22:56:13.828 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:56:13.828 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 4.5816ms
2024-12-09 22:56:13.830 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 129
2024-12-09 22:56:13.831 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:56:13.831 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 22:56:13.832 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:56:13.834 +05:30 [INF] Updating note with ID: 1034
2024-12-09 22:56:13.834 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 22:56:13.835 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:56:13.836 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:56:13.838 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 22:56:13.839 +05:30 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 22:56:13.840 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 22:56:13.840 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 22:56:13.841 +05:30 [INF] Retrieved notes successfully
2024-12-09 22:56:13.841 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 22:56:13.842 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 9.2037ms
2024-12-09 22:56:13.842 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 22:56:13.843 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 13.446ms
2024-12-09 22:56:14.874 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 22:56:14.877 +05:30 [INF] CORS policy execution successful.
2024-12-09 22:56:14.877 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:56:14.878 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 22:56:14.880 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 22:56:14.881 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 22:56:14.882 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 22:56:14.883 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 22:56:14.883 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 22:56:14.885 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 22:56:14.887 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 22:56:14.888 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 22:56:14.890 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 22:56:14.890 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 22:56:14.891 +05:30 [INF] Notes retrieved successfully
2024-12-09 22:56:14.892 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 22:56:14.893 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 13.1806ms
2024-12-09 22:56:14.894 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 22:56:14.894 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 20.5331ms
2024-12-09 23:00:23.575 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-09 23:00:27.693 +05:30 [ERR] Hosting failed to start
RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection()
   at BusinessLayer.Services.RabbitMqService..ctor(ConnectionFactory connectionFactory, IEmailService emailService) in D:\FunDo\BusinessLayer\Services\RabbitMqService.cs:line 23
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at RabbitMqBackgroundService.ExecuteAsync(CancellationToken stoppingToken) in D:\FunDo\BusinessLayer\Services\RabbitMqBackgroundService.cs:line 18
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2024-12-09 23:01:03.781 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-09 23:01:07.948 +05:30 [ERR] Hosting failed to start
RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.AggregateException: One or more errors occurred. (Connection failed)
 ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.<>c.<.cctor>b__4_0(Object state)
--- End of stack trace from previous location ---
   at RabbitMQ.Client.Impl.TcpClientAdapter.ConnectAsync(String host, Int32 port)
   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingAddressFamily(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout, AddressFamily family)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectUsingIPv4(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan timeout)
   at RabbitMQ.Client.Impl.SocketFrameHandler..ctor(AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.Framing.Impl.IProtocolExtensions.CreateFrameHandler(IProtocol protocol, AmqpTcpEndpoint endpoint, Func`2 socketFactory, TimeSpan connectionTimeout, TimeSpan readTimeout, TimeSpan writeTimeout)
   at RabbitMQ.Client.ConnectionFactory.CreateFrameHandler(AmqpTcpEndpoint endpoint)
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection()
   at BusinessLayer.Services.RabbitMqService..ctor(ConnectionFactory connectionFactory, IEmailService emailService) in D:\FunDo\BusinessLayer\Services\RabbitMqService.cs:line 23
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at RabbitMqBackgroundService.ExecuteAsync(CancellationToken stoppingToken) in D:\FunDo\BusinessLayer\Services\RabbitMqBackgroundService.cs:line 18
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2024-12-09 23:01:49.266 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-09 23:01:49.696 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-09 23:01:49.697 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-09 23:01:49.767 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-09 23:01:49.770 +05:30 [INF] Hosting environment: Development
2024-12-09 23:01:49.770 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-09 23:01:50.082 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-09 23:01:50.243 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 174.4311ms
2024-12-09 23:01:50.249 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-09 23:01:50.249 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-09 23:01:50.273 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 23.9998ms
2024-12-09 23:01:50.308 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 59.0045ms
2024-12-09 23:01:50.443 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-09 23:01:50.557 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 114.9006ms
2024-12-09 23:02:12.440 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/user/login - null null
2024-12-09 23:02:12.458 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:02:12.464 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/user/login - 204 null null 24.5846ms
2024-12-09 23:02:12.477 +05:30 [INF] Request starting HTTP/2 POST https://localhost:5000/api/user/login - application/json 62
2024-12-09 23:02:12.489 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:02:14.133 +05:30 [INF] Executing endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 23:02:14.190 +05:30 [INF] Route matched with {action = "LoginUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LoginUser(Models.DTOs.LoginUserDto) on controller FunDo.Controllers.UserController (FunDooNotes).
2024-12-09 23:02:15.085 +05:30 [INF] Logging user shreesha2002ms@gmail.com
2024-12-09 23:02:15.090 +05:30 [INF] Checking if the user present
2024-12-09 23:02:15.095 +05:30 [INF] Attempting to retrieve user with Email: shreesha2002ms@gmail.com
2024-12-09 23:02:18.409 +05:30 [INF] Executed DbCommand (173ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2024-12-09 23:02:18.549 +05:30 [INF] User with Email: shreesha2002ms@gmail.com retrieved successfully.
2024-12-09 23:02:18.553 +05:30 [INF] Verifying the password
2024-12-09 23:02:19.607 +05:30 [INF] Password is valid and token is generated
2024-12-09 23:02:19.612 +05:30 [INF] Login successful
2024-12-09 23:02:19.634 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.LoginResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:02:19.653 +05:30 [INF] Executed action FunDo.Controllers.UserController.LoginUser (FunDooNotes) in 5450.6046ms
2024-12-09 23:02:19.660 +05:30 [INF] Executed endpoint 'FunDo.Controllers.UserController.LoginUser (FunDooNotes)'
2024-12-09 23:02:19.673 +05:30 [INF] Request finished HTTP/2 POST https://localhost:5000/api/user/login - 200 null application/json; charset=utf-8 7195.7755ms
2024-12-09 23:02:19.690 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:02:19.696 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:02:19.699 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.8586ms
2024-12-09 23:02:19.703 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:02:19.716 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:02:19.809 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:02:19.822 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:02:19.838 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:02:19.913 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:02:19.917 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:02:19.923 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:02:19.930 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:02:20.001 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:02:20.008 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:02:20.103 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:02:20.111 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:02:20.114 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:02:20.131 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:02:20.136 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:02:20.143 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 312.7986ms
2024-12-09 23:02:20.148 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:02:20.150 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 446.6886ms
2024-12-09 23:02:30.128 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:02:30.132 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:02:30.134 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 5.7989ms
2024-12-09 23:02:30.137 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 129
2024-12-09 23:02:30.148 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:02:30.156 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:02:30.171 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:02:30.185 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:02:30.190 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:02:30.195 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:02:30.308 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:02:30.318 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:02:30.349 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:02:30.380 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:02:30.432 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:02:30.442 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:02:30.444 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:02:30.447 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 270.6697ms
2024-12-09 23:02:30.452 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:02:30.456 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 318.9054ms
2024-12-09 23:03:25.190 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:03:25.199 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:03:25.200 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.7252ms
2024-12-09 23:03:25.211 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:03:25.215 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:03:25.219 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:03:25.220 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:03:25.226 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:03:25.229 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:03:25.232 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:03:25.233 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:03:25.234 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:03:25.242 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:03:25.246 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:03:25.260 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:03:25.262 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:03:25.263 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:03:25.265 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:03:25.266 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:03:25.267 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 45.8598ms
2024-12-09 23:03:25.269 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:03:25.271 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 59.8108ms
2024-12-09 23:03:35.890 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:03:35.905 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 23:03:35.921 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2024-12-09 23:03:35.924 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 33.8179ms
2024-12-09 23:03:35.961 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/favicon.ico - null null
2024-12-09 23:03:35.966 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/favicon.ico - 404 0 null 5.2342ms
2024-12-09 23:03:35.970 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:5000/favicon.ico, Response status code: 404
2024-12-09 23:03:39.057 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:03:39.068 +05:30 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-12-09 23:03:39.072 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2024-12-09 23:03:39.073 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 401 null application/json 17.1638ms
2024-12-09 23:03:58.132 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:03:58.137 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:03:58.139 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 7.0591ms
2024-12-09 23:03:58.142 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 129
2024-12-09 23:03:58.149 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:03:58.152 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:03:58.155 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:03:58.158 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:03:58.161 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:03:58.164 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:03:58.173 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:03:58.177 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:03:58.201 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:03:58.205 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:03:58.207 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:03:58.208 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:03:58.209 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:03:58.210 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 53.0758ms
2024-12-09 23:03:58.211 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:03:58.212 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 70.3875ms
2024-12-09 23:04:16.601 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:04:16.614 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:04:16.615 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 14.9306ms
2024-12-09 23:04:16.619 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 129
2024-12-09 23:04:16.625 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:04:16.628 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:04:16.631 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:04:16.641 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:04:16.645 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:04:16.648 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:04:16.658 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:04:16.663 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:04:16.668 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:04:16.671 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:04:16.673 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:04:16.674 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:04:16.677 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:04:16.678 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 37.9814ms
2024-12-09 23:04:16.680 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:04:16.681 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 62.8213ms
2024-12-09 23:04:24.950 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:04:24.956 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:04:24.959 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 9.0304ms
2024-12-09 23:04:24.963 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 129
2024-12-09 23:04:24.969 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:04:24.971 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:04:24.973 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:04:24.979 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:04:24.983 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:04:24.985 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:04:24.996 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:04:25.002 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:04:25.005 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:04:25.008 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:04:25.009 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:04:25.010 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:04:25.011 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:04:25.012 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 34.4682ms
2024-12-09 23:04:25.014 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:04:25.015 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 52.666ms
2024-12-09 23:04:29.998 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:04:30.000 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:04:30.001 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 3.2157ms
2024-12-09 23:04:30.011 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:04:30.015 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:04:30.017 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:04:30.019 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:04:30.021 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:04:30.024 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:04:30.028 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:04:30.029 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:04:30.030 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:04:30.035 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:04:30.037 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:04:30.050 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:04:30.053 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:04:30.054 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:04:30.056 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:04:30.057 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:04:30.059 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 37.6584ms
2024-12-09 23:04:30.060 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:04:30.062 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 50.5431ms
2024-12-09 23:05:05.683 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:05:05.688 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:05:05.690 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 7.555ms
2024-12-09 23:05:05.693 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 129
2024-12-09 23:05:05.696 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:05:05.699 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:05:05.702 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:05:05.709 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:05:05.713 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:05:05.718 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:05:05.726 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:05:05.728 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:05:05.734 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:05:05.737 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:05:05.738 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:05:05.740 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:05:05.741 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:05:05.743 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 35.2517ms
2024-12-09 23:05:05.746 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:05:05.748 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 55.5675ms
2024-12-09 23:08:49.022 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:08:49.038 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:08:49.042 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:08:49.049 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:08:49.052 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:08:49.056 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:08:49.057 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:08:49.058 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:08:49.083 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:08:49.090 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:08:49.102 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:08:49.110 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:08:49.112 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:08:49.113 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:08:49.114 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:08:49.117 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 68.9327ms
2024-12-09 23:08:49.120 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:08:49.122 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 99.614ms
2024-12-09 23:12:23.190 +05:30 [INF] User profile is available. Using 'C:\Users\Shreesha_MS\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-12-09 23:12:23.529 +05:30 [INF] Now listening on: https://localhost:5000
2024-12-09 23:12:23.532 +05:30 [INF] Now listening on: http://localhost:5001
2024-12-09 23:12:23.583 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2024-12-09 23:12:23.587 +05:30 [INF] Hosting environment: Development
2024-12-09 23:12:23.590 +05:30 [INF] Content root path: D:\FunDo\FunDo
2024-12-09 23:12:24.189 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-09 23:12:24.356 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 180.7006ms
2024-12-09 23:12:24.364 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-09 23:12:24.364 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-09 23:12:24.375 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 11.8078ms
2024-12-09 23:12:24.416 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 52.1036ms
2024-12-09 23:12:24.569 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-09 23:12:24.673 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 104.7798ms
2024-12-09 23:12:50.609 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:12:50.627 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:12:50.633 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 23.7265ms
2024-12-09 23:12:50.647 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:12:50.664 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:12:50.915 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:12:50.967 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:12:51.215 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:12:51.292 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:12:51.297 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:12:51.301 +05:30 [INF] Deserializing the notes
2024-12-09 23:12:51.331 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:12:51.353 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 376.7823ms
2024-12-09 23:12:51.358 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:12:51.366 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 728.1089ms
2024-12-09 23:12:58.720 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:12:58.728 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:12:58.731 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 10.5672ms
2024-12-09 23:12:58.734 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 129
2024-12-09 23:12:58.740 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:12:58.744 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:12:58.767 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:12:58.834 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:12:58.841 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:12:58.863 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:13:01.081 +05:30 [INF] Executed DbCommand (97ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:13:01.139 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:13:01.283 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:13:01.377 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:13:01.429 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:13:01.439 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:13:01.441 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:13:01.445 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 2672.8144ms
2024-12-09 23:13:01.450 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:13:01.460 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 2725.6906ms
2024-12-09 23:13:13.209 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:13:13.213 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:13:13.216 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.6421ms
2024-12-09 23:13:13.224 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:13:13.228 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:13:13.237 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:13:13.238 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:13:13.246 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:13:13.254 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:13:13.255 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:13:13.258 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:13:13.265 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:13:13.296 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:13:13.300 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:13:13.367 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:13:13.372 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:13:13.373 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:13:13.385 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:13:13.387 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:13:13.389 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 148.6075ms
2024-12-09 23:13:13.392 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:13:13.393 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 170.2758ms
2024-12-09 23:13:19.849 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - null null
2024-12-09 23:13:19.854 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:13:19.855 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - 204 null null 7.2494ms
2024-12-09 23:13:19.858 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1035 - application/json 142
2024-12-09 23:13:19.864 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:13:19.869 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:13:19.873 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:13:19.880 +05:30 [INF] Updating note with ID: 1035
2024-12-09 23:13:19.881 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1035
2024-12-09 23:13:19.882 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:13:19.987 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:13:19.996 +05:30 [INF] Retrieving note with ID: 1035
2024-12-09 23:13:20.003 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:13:20.006 +05:30 [INF] User with ID: 1 has permission to update note ID: 1035
2024-12-09 23:13:20.012 +05:30 [INF] Successfully updated note with ID: 1035
2024-12-09 23:13:20.014 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:13:20.014 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:13:20.016 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 139.9449ms
2024-12-09 23:13:20.019 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:13:20.020 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1035 - 200 null application/json; charset=utf-8 162.2667ms
2024-12-09 23:13:31.978 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - null null
2024-12-09 23:13:31.987 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:13:31.990 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - 204 null null 13.1158ms
2024-12-09 23:13:31.994 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1035 - application/json 142
2024-12-09 23:13:32.005 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:13:32.008 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:13:32.013 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:13:32.017 +05:30 [INF] Updating note with ID: 1035
2024-12-09 23:13:32.019 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1035
2024-12-09 23:13:32.020 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:13:32.025 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:13:32.031 +05:30 [INF] Retrieving note with ID: 1035
2024-12-09 23:13:32.035 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:13:32.039 +05:30 [INF] User with ID: 1 has permission to update note ID: 1035
2024-12-09 23:13:32.040 +05:30 [INF] Successfully updated note with ID: 1035
2024-12-09 23:13:32.043 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:13:32.044 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:13:32.047 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 29.9112ms
2024-12-09 23:13:32.049 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:13:32.050 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1035 - 200 null application/json; charset=utf-8 56.9533ms
2024-12-09 23:13:46.943 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - null null
2024-12-09 23:13:46.947 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:13:46.948 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - 204 null null 6.1346ms
2024-12-09 23:13:46.952 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1035 - application/json 142
2024-12-09 23:13:46.958 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:13:46.960 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:13:46.965 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:13:46.974 +05:30 [INF] Updating note with ID: 1035
2024-12-09 23:13:46.978 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1035
2024-12-09 23:13:46.982 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:13:46.987 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:13:46.992 +05:30 [INF] Retrieving note with ID: 1035
2024-12-09 23:13:46.995 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:13:47.000 +05:30 [INF] User with ID: 1 has permission to update note ID: 1035
2024-12-09 23:13:47.002 +05:30 [INF] Successfully updated note with ID: 1035
2024-12-09 23:13:47.006 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:13:47.008 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:13:47.012 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 39.4132ms
2024-12-09 23:13:47.016 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:13:47.020 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1035 - 200 null application/json; charset=utf-8 68.3333ms
2024-12-09 23:13:53.374 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:13:53.377 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:13:53.379 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.0433ms
2024-12-09 23:13:53.382 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:13:53.386 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:13:53.388 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:13:53.405 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:13:53.409 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:13:53.411 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:13:53.414 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:13:53.415 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:13:53.416 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:13:53.432 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:13:53.436 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:13:53.448 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:13:53.452 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:13:53.454 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:13:53.456 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:13:53.457 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:13:53.459 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 50.6845ms
2024-12-09 23:13:53.461 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:13:53.462 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 80.233ms
2024-12-09 23:14:01.498 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - null null
2024-12-09 23:14:01.502 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:14:01.505 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - 204 null null 7.1809ms
2024-12-09 23:14:01.509 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1035 - application/json 142
2024-12-09 23:14:01.515 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:14:01.519 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:14:01.521 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:14:01.525 +05:30 [INF] Updating note with ID: 1035
2024-12-09 23:14:01.526 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1035
2024-12-09 23:14:01.530 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:14:01.542 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:14:01.550 +05:30 [INF] Retrieving note with ID: 1035
2024-12-09 23:14:01.571 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:14:01.575 +05:30 [INF] User with ID: 1 has permission to update note ID: 1035
2024-12-09 23:14:01.578 +05:30 [INF] Successfully updated note with ID: 1035
2024-12-09 23:14:01.582 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:14:01.584 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:14:01.588 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 63.603ms
2024-12-09 23:14:01.592 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:14:01.595 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1035 - 200 null application/json; charset=utf-8 86.321ms
2024-12-09 23:16:26.801 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/index.html - null null
2024-12-09 23:16:26.849 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 48.7411ms
2024-12-09 23:16:26.862 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - null null
2024-12-09 23:16:26.862 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/_vs/browserLink - null null
2024-12-09 23:16:26.870 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_framework/aspnetcore-browser-refresh.js - 200 13758 application/javascript; charset=utf-8 8.9422ms
2024-12-09 23:16:26.911 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/_vs/browserLink - 200 null text/javascript; charset=UTF-8 49.2337ms
2024-12-09 23:16:27.024 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - null null
2024-12-09 23:16:27.053 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 29.3263ms
2024-12-09 23:16:32.183 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:16:32.213 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:16:32.215 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 32.3709ms
2024-12-09 23:16:32.219 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:16:32.228 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:16:32.230 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:16:32.239 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:16:32.245 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:16:32.248 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:16:32.251 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:16:32.252 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:16:32.255 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:16:32.266 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:16:32.270 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:16:32.285 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:16:32.288 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:16:32.289 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:16:32.293 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:16:32.294 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:16:32.297 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 52.5702ms
2024-12-09 23:16:32.300 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:16:32.301 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 82.2187ms
2024-12-09 23:16:35.840 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:16:35.843 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:16:35.844 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 4.7371ms
2024-12-09 23:16:35.847 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 129
2024-12-09 23:16:35.854 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:16:35.859 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:16:35.872 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:16:36.272 +05:30 [INF] Received note update: {"Title":null,"Description":null,"Color":null,"isArchive":null,"isCreated":null,"isTrash":null}
2024-12-09 23:16:36.274 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:16:36.275 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:16:36.276 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:16:36.283 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:16:36.293 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:16:36.298 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:16:36.301 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:16:36.303 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:16:36.307 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:16:36.308 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:16:36.314 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 434.1355ms
2024-12-09 23:16:36.316 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:16:36.317 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 470.1991ms
2024-12-09 23:18:11.132 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:18:11.147 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:18:11.148 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 16.1612ms
2024-12-09 23:18:11.152 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 129
2024-12-09 23:18:11.161 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:18:11.162 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:18:11.166 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:18:11.171 +05:30 [INF] Received note update: {"Title":null,"Description":null,"Color":null,"isArchive":null,"isCreated":null,"isTrash":null}
2024-12-09 23:18:11.176 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:18:11.177 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:18:11.181 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:18:11.191 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:18:11.200 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:18:11.207 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:18:11.215 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:18:11.217 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:18:11.223 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:18:11.225 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:18:11.229 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 59.5317ms
2024-12-09 23:18:11.232 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:18:11.238 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 86.5953ms
2024-12-09 23:19:50.710 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:19:50.721 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:19:50.723 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.9938ms
2024-12-09 23:19:50.738 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:19:50.741 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:19:50.743 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:19:50.748 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:19:50.754 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:19:50.757 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:19:50.759 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:19:50.765 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:19:50.767 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:19:50.779 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:19:50.785 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:19:50.800 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:19:50.806 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:19:50.813 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:19:50.817 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:19:50.819 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:19:50.826 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 71.9386ms
2024-12-09 23:19:50.829 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:19:50.831 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 93.7324ms
2024-12-09 23:20:04.647 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:20:04.650 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:20:04.651 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 4.9382ms
2024-12-09 23:20:04.666 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:20:04.672 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:20:04.674 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:20:04.677 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:20:04.681 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:20:04.683 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:20:04.689 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:20:04.692 +05:30 [INF] Deserializing the notes
2024-12-09 23:20:04.696 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:20:04.699 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.9764ms
2024-12-09 23:20:04.705 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:20:04.714 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.3573ms
2024-12-09 23:20:05.752 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:20:05.755 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:20:05.758 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:20:05.760 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:20:05.763 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:20:05.765 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:20:05.768 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:20:05.770 +05:30 [INF] Deserializing the notes
2024-12-09 23:20:05.772 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:20:05.774 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 11.7448ms
2024-12-09 23:20:05.780 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:20:05.782 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 30.8534ms
2024-12-09 23:20:13.563 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:20:13.567 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:20:13.569 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.4112ms
2024-12-09 23:20:13.573 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:20:13.581 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:20:13.583 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:20:13.588 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:20:13.592 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:20:13.599 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:20:13.602 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:20:13.604 +05:30 [INF] Deserializing the notes
2024-12-09 23:20:13.606 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:20:13.613 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 21.1899ms
2024-12-09 23:20:13.619 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:20:13.621 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 48.6038ms
2024-12-09 23:20:19.933 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:20:19.937 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:20:19.939 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 5.6577ms
2024-12-09 23:20:19.942 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:20:19.948 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:20:19.955 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:20:19.957 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:20:19.961 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:20:19.967 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:20:19.973 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:20:19.975 +05:30 [INF] Deserializing the notes
2024-12-09 23:20:19.977 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:20:19.980 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 19.321ms
2024-12-09 23:20:19.982 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:20:19.984 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 42.0774ms
2024-12-09 23:20:35.392 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:20:35.438 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:20:35.440 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 48.2905ms
2024-12-09 23:20:37.417 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:20:37.429 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:20:37.431 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:20:37.436 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:20:37.449 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:20:37.459 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:20:37.464 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:20:37.471 +05:30 [INF] Deserializing the notes
2024-12-09 23:20:37.483 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:20:37.489 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 40.6887ms
2024-12-09 23:20:37.490 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:20:37.492 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 74.933ms
2024-12-09 23:20:47.567 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:20:47.570 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:20:47.576 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 10.2816ms
2024-12-09 23:20:47.583 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 120
2024-12-09 23:20:47.599 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:20:47.605 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:20:47.608 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:20:47.628 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#B4DDD3","isArchive":false,"isCreated":true,"isTrash":false}
2024-12-09 23:20:47.633 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:20:47.636 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:20:47.639 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:20:47.648 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:20:47.651 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:20:47.662 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:20:47.666 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:20:47.765 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:20:47.791 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:20:47.795 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:20:47.797 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:20:47.801 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 184.6577ms
2024-12-09 23:20:47.807 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:20:47.810 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 227.3304ms
2024-12-09 23:22:07.387 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:22:07.396 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:07.401 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 14.7484ms
2024-12-09 23:22:07.410 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:22:07.413 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:07.418 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:22:07.422 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:07.427 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:22:07.429 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:22:07.433 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:22:07.437 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:22:07.442 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:22:07.459 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:22:07.470 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:22:07.484 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:22:07.489 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:22:07.490 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:22:07.492 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:22:07.493 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:22:07.496 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 69.2506ms
2024-12-09 23:22:07.504 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:22:07.506 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 96.8051ms
2024-12-09 23:22:08.705 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:22:08.708 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:08.710 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:22:08.712 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:08.718 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:22:08.721 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:22:08.723 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:22:08.725 +05:30 [INF] Deserializing the notes
2024-12-09 23:22:08.727 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:22:08.730 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 12.0268ms
2024-12-09 23:22:08.738 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:22:08.742 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 37.5257ms
2024-12-09 23:22:13.814 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:22:13.820 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:13.823 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 9.4451ms
2024-12-09 23:22:13.826 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 120
2024-12-09 23:22:13.839 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:13.844 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:13.849 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:13.859 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#D3BFDB","isArchive":false,"isCreated":true,"isTrash":false}
2024-12-09 23:22:13.861 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:22:13.864 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:22:13.867 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:22:13.874 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:22:13.884 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:22:13.890 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:22:13.899 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:22:13.909 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:22:13.918 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:22:13.921 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:22:13.923 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:22:13.926 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 67.9562ms
2024-12-09 23:22:13.928 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:13.930 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 104.3169ms
2024-12-09 23:22:14.671 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:22:14.679 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:14.684 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 13.7676ms
2024-12-09 23:22:14.691 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:22:14.697 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:14.706 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:22:14.713 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:14.724 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:22:14.727 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:22:14.732 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:22:14.738 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:22:14.740 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:22:14.749 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:22:14.754 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:22:14.757 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:22:14.766 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:22:14.769 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:22:14.771 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:22:14.772 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:22:14.775 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 51.3107ms
2024-12-09 23:22:14.784 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:22:14.787 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 97.3956ms
2024-12-09 23:22:18.105 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - null null
2024-12-09 23:22:18.108 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:18.111 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1035 - 204 null null 6.5888ms
2024-12-09 23:22:18.115 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1035 - application/json 133
2024-12-09 23:22:18.129 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:18.135 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:18.137 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:18.144 +05:30 [INF] Received note update: {"Title":"wqeqweqwewqewq","Description":"qweewqererw","Color":"#FFF8B8","isArchive":false,"isCreated":true,"isTrash":false}
2024-12-09 23:22:18.146 +05:30 [INF] Updating note with ID: 1035
2024-12-09 23:22:18.149 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1035
2024-12-09 23:22:18.150 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:22:18.156 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:22:18.163 +05:30 [INF] Retrieving note with ID: 1035
2024-12-09 23:22:18.170 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:22:18.173 +05:30 [INF] User with ID: 1 has permission to update note ID: 1035
2024-12-09 23:22:18.183 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:22:18.187 +05:30 [INF] Successfully updated note with ID: 1035
2024-12-09 23:22:18.188 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:22:18.196 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:22:18.199 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 56.3089ms
2024-12-09 23:22:18.204 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:18.207 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1035 - 200 null application/json; charset=utf-8 92.8128ms
2024-12-09 23:22:18.957 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:22:18.962 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:18.966 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:22:18.970 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:18.979 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:22:18.988 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:22:18.993 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:22:18.995 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:22:19.001 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:22:19.006 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:22:19.016 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:22:19.020 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:22:19.030 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:22:19.035 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:22:19.037 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:22:19.042 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:22:19.048 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 69.7747ms
2024-12-09 23:22:19.052 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:22:19.056 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 99.1569ms
2024-12-09 23:22:49.069 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - null null
2024-12-09 23:22:49.074 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:49.076 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - 204 null null 7.5404ms
2024-12-09 23:22:49.080 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - application/json 4
2024-12-09 23:22:49.090 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:49.095 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:22:49.107 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:49.122 +05:30 [INF] Received noteId: 1034, isArchive: True
2024-12-09 23:22:49.124 +05:30 [INF] Received request to toggle archive status for note with ID: 1034
2024-12-09 23:22:49.132 +05:30 [INF] Initiating toggle of archive status for note with ID: 1034 for user ID: 1
2024-12-09 23:22:49.138 +05:30 [INF] Received isArchive value: True
2024-12-09 23:22:49.148 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:22:49.156 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:22:49.169 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:22:49.185 +05:30 [INF] Note with ID: 1034 archive status updated to true
2024-12-09 23:22:49.187 +05:30 [INF] Successfully toggled archive status for note with ID: 1034
2024-12-09 23:22:49.188 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:22:49.191 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 77.5688ms
2024-12-09 23:22:49.194 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:22:49.196 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - 200 null application/json; charset=utf-8 115.8589ms
2024-12-09 23:22:51.377 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:22:51.381 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:51.384 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.4111ms
2024-12-09 23:22:51.388 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:22:51.408 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:51.411 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:22:51.413 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:51.416 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:22:51.421 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:22:51.424 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:22:51.425 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:22:51.427 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:22:51.431 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:22:51.439 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:22:51.451 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:22:51.459 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:22:51.461 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:22:51.465 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:22:51.467 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:22:51.476 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 60.2387ms
2024-12-09 23:22:51.479 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:22:51.482 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 94.2395ms
2024-12-09 23:22:56.339 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:22:56.344 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:56.345 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 6.2084ms
2024-12-09 23:22:56.348 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:22:56.362 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:56.369 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:56.371 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:56.378 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#D4E4ED","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:22:56.380 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:22:56.381 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:22:56.383 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:22:56.388 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:22:56.399 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:22:56.405 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:22:56.409 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:22:56.420 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:22:56.428 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:22:56.431 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:22:56.438 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:22:56.442 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 65.313ms
2024-12-09 23:22:56.447 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:56.456 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 108.4194ms
2024-12-09 23:22:57.364 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:22:57.373 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:57.375 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:57.376 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:57.384 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#D4E4ED","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:22:57.386 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:22:57.388 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:22:57.390 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:22:57.395 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:22:57.406 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:22:57.412 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:22:57.419 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:22:57.421 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:22:57.424 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:22:57.425 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:22:57.434 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 51.1651ms
2024-12-09 23:22:57.437 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:57.443 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 78.9203ms
2024-12-09 23:22:58.225 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:22:58.229 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:58.231 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:58.233 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:58.237 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#B4DDD3","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:22:58.238 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:22:58.245 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:22:58.250 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:22:58.255 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:22:58.266 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:22:58.276 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:22:58.280 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:22:58.288 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:22:58.296 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:22:58.307 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:22:58.308 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:22:58.310 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 73.6222ms
2024-12-09 23:22:58.312 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:58.314 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 90.0323ms
2024-12-09 23:22:58.438 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:22:58.442 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:58.445 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:58.449 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:58.458 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#B4DDD3","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:22:58.460 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:22:58.462 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:22:58.465 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:22:58.475 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:22:58.487 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:22:58.495 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:22:58.499 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:22:58.501 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:22:58.503 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:22:58.506 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:22:58.508 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 51.1275ms
2024-12-09 23:22:58.519 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:58.524 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 86.7239ms
2024-12-09 23:22:59.129 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:22:59.134 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:59.139 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:59.143 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:59.153 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#B4DDD3","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:22:59.156 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:22:59.161 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:22:59.164 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:22:59.173 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:22:59.184 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:22:59.189 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:22:59.203 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:22:59.206 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:22:59.209 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:22:59.211 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:22:59.218 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 65.5299ms
2024-12-09 23:22:59.222 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:59.225 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 96.6101ms
2024-12-09 23:22:59.345 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:22:59.350 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:22:59.352 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:59.353 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:22:59.360 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#B4DDD3","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:22:59.361 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:22:59.364 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:22:59.365 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:22:59.378 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:22:59.386 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:22:59.392 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:22:59.398 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:22:59.402 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:22:59.409 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:22:59.416 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:22:59.423 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 64.6667ms
2024-12-09 23:22:59.430 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:22:59.435 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 90.9266ms
2024-12-09 23:23:00.116 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:23:00.120 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:23:00.121 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:23:00.123 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:23:00.129 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#E2F6D3","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:23:00.130 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:23:00.133 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:23:00.134 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:23:00.139 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:23:00.149 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:23:00.154 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:23:00.161 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:23:00.168 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:23:00.171 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:23:00.173 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:23:00.174 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:23:00.181 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 52.6453ms
2024-12-09 23:23:00.186 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:23:00.189 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 72.9153ms
2024-12-09 23:23:00.309 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:23:00.314 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:23:00.316 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:23:00.318 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:23:00.327 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#E2F6D3","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:23:00.335 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:23:00.339 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:23:00.344 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:23:00.351 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:23:00.363 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:23:00.375 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:23:00.383 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:23:00.389 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:23:00.391 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:23:00.395 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:23:00.400 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 73.7557ms
2024-12-09 23:23:00.407 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:23:00.412 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 103.1043ms
2024-12-09 23:23:00.529 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:23:00.535 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:23:00.537 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:23:00.538 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:23:00.542 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#E2F6D3","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:23:00.547 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:23:00.554 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:23:00.558 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:23:00.568 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:23:00.572 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:23:00.581 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:23:00.594 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:23:00.596 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:23:00.598 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:23:00.602 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:23:00.606 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 64.833ms
2024-12-09 23:23:00.611 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:23:00.613 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 84.376ms
2024-12-09 23:23:01.624 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:23:01.628 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:23:01.629 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 5.1284ms
2024-12-09 23:23:01.632 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:23:01.638 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:23:01.642 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:23:01.647 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:23:01.662 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#D3BFDB","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:23:01.665 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:23:01.668 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:23:01.672 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:23:01.682 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:23:01.688 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:23:01.691 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:23:01.701 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:23:01.707 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:23:01.714 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:23:01.721 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:23:01.723 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:23:01.725 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 63.738ms
2024-12-09 23:23:01.728 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:23:01.733 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 101.3914ms
2024-12-09 23:23:01.840 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:23:01.843 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:23:01.845 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:23:01.847 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:23:01.851 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#D3BFDB","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:23:01.853 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:23:01.854 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:23:01.855 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:23:01.860 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:23:01.871 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:23:01.874 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:23:01.880 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:23:01.883 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:23:01.887 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:23:01.890 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:23:01.894 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 43.5659ms
2024-12-09 23:23:01.903 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:23:01.907 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 67.2002ms
2024-12-09 23:23:02.057 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:23:02.060 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:23:02.063 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:23:02.066 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:23:02.075 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#D3BFDB","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:23:02.078 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:23:02.080 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:23:02.081 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:23:02.086 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:23:02.092 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:23:02.100 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:23:02.105 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:23:02.106 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:23:02.108 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:23:02.115 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:23:02.118 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 42.7749ms
2024-12-09 23:23:02.122 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:23:02.128 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 71.7106ms
2024-12-09 23:24:01.227 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:24:01.242 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:01.244 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 17.0876ms
2024-12-09 23:24:01.247 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:24:01.260 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:01.261 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:01.263 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:01.266 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#F6E2DD","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:24:01.272 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:24:01.275 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:24:01.276 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:01.288 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:01.298 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:24:01.305 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:24:01.310 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:24:01.319 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:24:01.324 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:24:01.325 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:24:01.327 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:24:01.336 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 70.7162ms
2024-12-09 23:24:01.347 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:01.349 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 101.9618ms
2024-12-09 23:24:04.812 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:24:04.816 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:04.818 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:04.819 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:04.822 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#FFF8B8","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:24:04.824 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:24:04.826 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:24:04.828 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:04.840 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:04.846 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:24:04.849 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:24:04.853 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:24:04.867 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:24:04.870 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:24:04.873 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:24:04.874 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:24:04.876 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 54.5063ms
2024-12-09 23:24:04.882 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:04.887 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 74.5244ms
2024-12-09 23:24:05.242 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:24:05.246 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:05.248 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:05.250 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:05.254 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#FFF8B8","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:24:05.258 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:24:05.262 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:24:05.267 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:05.274 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:05.280 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:24:05.284 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:24:05.295 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:24:05.297 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:24:05.300 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:24:05.301 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:24:05.303 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 49.322ms
2024-12-09 23:24:05.305 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:05.307 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 65.8013ms
2024-12-09 23:24:05.460 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:24:05.468 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:05.471 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:05.473 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:05.476 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#FFF8B8","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:24:05.484 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:24:05.486 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:24:05.488 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:05.493 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:05.505 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:24:05.513 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:24:05.522 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:24:05.526 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:24:05.531 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:24:05.532 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:24:05.535 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 58.9958ms
2024-12-09 23:24:05.541 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:05.543 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 84.0494ms
2024-12-09 23:24:06.810 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - null null
2024-12-09 23:24:06.821 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:06.823 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - 204 null null 13.733ms
2024-12-09 23:24:06.827 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - application/json 5
2024-12-09 23:24:06.839 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:06.842 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:24:06.844 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:06.850 +05:30 [INF] Received noteId: 1034, isArchive: False
2024-12-09 23:24:06.855 +05:30 [INF] Received request to toggle archive status for note with ID: 1034
2024-12-09 23:24:06.859 +05:30 [INF] Initiating toggle of archive status for note with ID: 1034 for user ID: 1
2024-12-09 23:24:06.863 +05:30 [INF] Received isArchive value: False
2024-12-09 23:24:06.869 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:06.881 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:24:06.889 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:24:06.899 +05:30 [INF] Note with ID: 1034 archive status updated to false
2024-12-09 23:24:06.902 +05:30 [INF] Successfully toggled archive status for note with ID: 1034
2024-12-09 23:24:06.906 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:24:06.910 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 60.489ms
2024-12-09 23:24:06.913 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:24:06.914 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - 200 null application/json; charset=utf-8 87.1225ms
2024-12-09 23:24:08.975 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:24:08.979 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:08.981 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.5993ms
2024-12-09 23:24:08.984 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:24:09.002 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:09.005 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:09.012 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:09.021 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:24:09.025 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:24:09.028 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:24:09.031 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:24:09.033 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:09.037 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:09.044 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:24:09.055 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:24:09.061 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:24:09.062 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:24:09.064 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:24:09.072 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:24:09.077 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 55.3908ms
2024-12-09 23:24:09.080 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:09.082 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 97.8995ms
2024-12-09 23:24:11.103 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:24:11.109 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:11.110 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:11.113 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:11.117 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:24:11.124 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:24:11.128 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:24:11.131 +05:30 [INF] Deserializing the notes
2024-12-09 23:24:11.135 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:24:11.146 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 29.3526ms
2024-12-09 23:24:11.148 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:11.151 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.9824ms
2024-12-09 23:24:15.097 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:24:15.102 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:15.105 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 8.6449ms
2024-12-09 23:24:15.108 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 120
2024-12-09 23:24:15.117 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:15.120 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:15.127 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:15.130 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#AECCDC","isArchive":false,"isCreated":true,"isTrash":false}
2024-12-09 23:24:15.132 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:24:15.133 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:24:15.134 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:15.139 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:15.147 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:24:15.150 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:24:15.153 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:24:15.158 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:24:15.164 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:24:15.166 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:24:15.167 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:24:15.176 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 46.6552ms
2024-12-09 23:24:15.179 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:15.181 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 72.9828ms
2024-12-09 23:24:17.572 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:24:17.577 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:17.580 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.1463ms
2024-12-09 23:24:17.591 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:24:17.598 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:17.600 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:17.605 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:17.615 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:24:17.619 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:24:17.622 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:24:17.626 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:24:17.628 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:17.633 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:17.637 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:24:17.640 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:24:17.648 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:24:17.649 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:24:17.650 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:24:17.660 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:24:17.662 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 48.3431ms
2024-12-09 23:24:17.664 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:17.666 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 74.544ms
2024-12-09 23:24:19.789 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - null null
2024-12-09 23:24:19.793 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:19.795 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - 204 null null 6.413ms
2024-12-09 23:24:19.798 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - application/json 4
2024-12-09 23:24:19.815 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:19.818 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:24:19.820 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:19.829 +05:30 [INF] Received noteId: 1034, isArchive: True
2024-12-09 23:24:19.830 +05:30 [INF] Received request to toggle archive status for note with ID: 1034
2024-12-09 23:24:19.833 +05:30 [INF] Initiating toggle of archive status for note with ID: 1034 for user ID: 1
2024-12-09 23:24:19.835 +05:30 [INF] Received isArchive value: True
2024-12-09 23:24:19.842 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:19.854 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:24:19.867 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:24:19.873 +05:30 [INF] Note with ID: 1034 archive status updated to true
2024-12-09 23:24:19.874 +05:30 [INF] Successfully toggled archive status for note with ID: 1034
2024-12-09 23:24:19.880 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:24:19.884 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 55.331ms
2024-12-09 23:24:19.885 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:24:19.888 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - 200 null application/json; charset=utf-8 90.6322ms
2024-12-09 23:24:22.116 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:24:22.128 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:22.132 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:22.135 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:22.143 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:24:22.147 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:24:22.151 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:24:22.153 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:24:22.155 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:22.159 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:22.162 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:24:22.165 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:24:22.174 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:24:22.177 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:24:22.180 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:24:22.181 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:24:22.183 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 40.0563ms
2024-12-09 23:24:22.185 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:22.194 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 78.0499ms
2024-12-09 23:24:29.918 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:24:29.922 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:29.926 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 9.0104ms
2024-12-09 23:24:29.931 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:24:29.944 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:29.945 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:29.948 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:29.951 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#F6E2DD","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:24:29.954 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:24:29.957 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:24:29.960 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:29.970 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:29.980 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:24:29.991 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:24:29.998 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:24:30.002 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:24:30.008 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:24:30.012 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:24:30.015 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:24:30.018 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 67.7344ms
2024-12-09 23:24:30.020 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:30.022 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 91.4601ms
2024-12-09 23:24:32.866 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - null null
2024-12-09 23:24:32.872 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:32.876 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - 204 null null 10.3828ms
2024-12-09 23:24:32.880 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - application/json 5
2024-12-09 23:24:32.895 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:32.897 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:24:32.898 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:32.903 +05:30 [INF] Received noteId: 1034, isArchive: False
2024-12-09 23:24:32.904 +05:30 [INF] Received request to toggle archive status for note with ID: 1034
2024-12-09 23:24:32.906 +05:30 [INF] Initiating toggle of archive status for note with ID: 1034 for user ID: 1
2024-12-09 23:24:32.907 +05:30 [INF] Received isArchive value: False
2024-12-09 23:24:32.916 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:32.925 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:24:32.936 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:24:32.941 +05:30 [INF] Note with ID: 1034 archive status updated to false
2024-12-09 23:24:32.942 +05:30 [INF] Successfully toggled archive status for note with ID: 1034
2024-12-09 23:24:32.944 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:24:32.949 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 46.7681ms
2024-12-09 23:24:32.951 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:24:32.954 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - 200 null application/json; charset=utf-8 73.7473ms
2024-12-09 23:24:34.934 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:24:34.938 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:34.940 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.7658ms
2024-12-09 23:24:34.944 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:24:34.961 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:34.963 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:34.966 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:34.973 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:24:34.975 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:24:34.981 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:24:34.983 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:24:34.986 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:34.990 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:34.996 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:24:35.006 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:24:35.012 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:24:35.014 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:24:35.016 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:24:35.017 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:24:35.025 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 51.5792ms
2024-12-09 23:24:35.026 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:35.029 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 85.0971ms
2024-12-09 23:24:42.892 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:24:42.895 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:42.899 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 6.2269ms
2024-12-09 23:24:42.901 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 120
2024-12-09 23:24:42.918 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:42.922 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:42.924 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:42.928 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#FFFFFF","isArchive":false,"isCreated":true,"isTrash":false}
2024-12-09 23:24:42.928 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:24:42.935 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:24:42.938 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:42.943 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:42.949 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:24:42.952 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:24:42.960 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:24:42.970 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:24:42.982 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:24:42.989 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:24:42.992 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:24:42.996 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 69.4956ms
2024-12-09 23:24:42.999 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:43.002 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 101.1053ms
2024-12-09 23:24:44.714 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - null null
2024-12-09 23:24:44.719 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:44.721 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - 204 null null 6.9795ms
2024-12-09 23:24:44.725 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - application/json 4
2024-12-09 23:24:44.734 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:44.739 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:24:44.740 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:44.743 +05:30 [INF] Received noteId: 1034, isArchive: True
2024-12-09 23:24:44.745 +05:30 [INF] Received request to toggle archive status for note with ID: 1034
2024-12-09 23:24:44.750 +05:30 [INF] Initiating toggle of archive status for note with ID: 1034 for user ID: 1
2024-12-09 23:24:44.753 +05:30 [INF] Received isArchive value: True
2024-12-09 23:24:44.762 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:44.769 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:24:44.781 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:24:44.789 +05:30 [INF] Note with ID: 1034 archive status updated to true
2024-12-09 23:24:44.795 +05:30 [INF] Successfully toggled archive status for note with ID: 1034
2024-12-09 23:24:44.798 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:24:44.802 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 59.2592ms
2024-12-09 23:24:44.805 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:24:44.810 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - 200 null application/json; charset=utf-8 85.7418ms
2024-12-09 23:24:47.741 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:24:47.746 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:47.750 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 9.5085ms
2024-12-09 23:24:47.754 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:24:47.772 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:47.778 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:47.781 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:47.784 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:24:47.786 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:24:47.790 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:24:47.792 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:24:47.794 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:47.802 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:47.813 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:24:47.827 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:24:47.835 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:24:47.841 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:24:47.849 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:24:47.850 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:24:47.852 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 68.3798ms
2024-12-09 23:24:47.857 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:47.861 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 107.8194ms
2024-12-09 23:24:52.548 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:24:52.554 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:52.557 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 8.8074ms
2024-12-09 23:24:52.559 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:24:52.570 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:52.577 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:52.581 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:52.585 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#F6E2DD","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:24:52.587 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:24:52.589 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:24:52.590 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:52.604 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:52.608 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:24:52.615 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:24:52.622 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:24:52.634 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:24:52.644 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:24:52.646 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:24:52.649 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:24:52.653 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 68.9071ms
2024-12-09 23:24:52.656 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:24:52.658 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 98.9298ms
2024-12-09 23:24:54.676 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - null null
2024-12-09 23:24:54.681 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:54.683 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - 204 null null 7.0996ms
2024-12-09 23:24:54.687 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - application/json 5
2024-12-09 23:24:54.704 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:54.706 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:24:54.707 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:54.715 +05:30 [INF] Received noteId: 1034, isArchive: False
2024-12-09 23:24:54.716 +05:30 [INF] Received request to toggle archive status for note with ID: 1034
2024-12-09 23:24:54.718 +05:30 [INF] Initiating toggle of archive status for note with ID: 1034 for user ID: 1
2024-12-09 23:24:54.720 +05:30 [INF] Received isArchive value: False
2024-12-09 23:24:54.725 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:54.732 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:24:54.749 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:24:54.754 +05:30 [INF] Note with ID: 1034 archive status updated to false
2024-12-09 23:24:54.759 +05:30 [INF] Successfully toggled archive status for note with ID: 1034
2024-12-09 23:24:54.762 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:24:54.764 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 49.9031ms
2024-12-09 23:24:54.770 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:24:54.772 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - 200 null application/json; charset=utf-8 85.337ms
2024-12-09 23:24:57.041 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:24:57.047 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:57.051 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 10.3447ms
2024-12-09 23:24:57.055 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:24:57.069 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:24:57.075 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:57.080 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:24:57.086 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:24:57.088 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:24:57.091 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:24:57.092 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:24:57.094 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:24:57.097 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:24:57.106 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:24:57.117 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:24:57.126 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:24:57.130 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:24:57.133 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:24:57.137 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:24:57.139 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 53.7813ms
2024-12-09 23:24:57.145 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:24:57.150 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 95.5739ms
2024-12-09 23:25:34.824 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:25:34.837 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:25:34.840 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 16.156ms
2024-12-09 23:25:34.844 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:25:34.857 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:25:34.863 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:25:34.867 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:25:34.872 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:25:34.875 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:25:34.880 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:25:34.883 +05:30 [INF] Deserializing the notes
2024-12-09 23:25:34.886 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:25:34.890 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 18.5382ms
2024-12-09 23:25:34.901 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:25:34.904 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 59.6011ms
2024-12-09 23:25:43.098 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:25:43.105 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:25:43.109 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 11.1989ms
2024-12-09 23:25:43.113 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:25:43.125 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:25:43.132 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:25:43.135 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:25:43.144 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:25:43.148 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:25:43.152 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:25:43.155 +05:30 [INF] Deserializing the notes
2024-12-09 23:25:43.158 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:25:43.164 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 20.0772ms
2024-12-09 23:25:43.168 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:25:43.171 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 58.1447ms
2024-12-09 23:25:49.847 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:25:49.854 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:25:49.856 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 8.7315ms
2024-12-09 23:25:49.859 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:25:49.873 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:25:49.878 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:25:49.880 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:25:49.886 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:25:49.890 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:25:49.895 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:25:49.897 +05:30 [INF] Deserializing the notes
2024-12-09 23:25:49.900 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:25:49.903 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.77ms
2024-12-09 23:25:49.906 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:25:49.913 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 54.2509ms
2024-12-09 23:26:17.487 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:26:17.501 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:17.502 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 15.0208ms
2024-12-09 23:26:17.507 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:26:17.518 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:17.525 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:17.528 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:26:17.533 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:26:17.538 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:26:17.541 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:26:17.543 +05:30 [INF] Deserializing the notes
2024-12-09 23:26:17.548 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:26:17.551 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 17.8589ms
2024-12-09 23:26:17.554 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:17.562 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 55.0169ms
2024-12-09 23:26:26.053 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:26:26.059 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:26.064 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 11.6749ms
2024-12-09 23:26:26.068 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 120
2024-12-09 23:26:26.087 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:26.089 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:26:26.093 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:26:26.098 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#FFFFFF","isArchive":false,"isCreated":true,"isTrash":false}
2024-12-09 23:26:26.100 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:26:26.102 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:26:26.103 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:26:26.112 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:26:26.121 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:26:26.126 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:26:26.130 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:26:26.143 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:26:26.149 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:26:26.152 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:26:26.158 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:26:26.163 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 65.5827ms
2024-12-09 23:26:26.167 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:26:26.170 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 102.7078ms
2024-12-09 23:26:27.580 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - null null
2024-12-09 23:26:27.585 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:27.588 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/archive/1034 - 204 null null 8.3955ms
2024-12-09 23:26:27.590 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - application/json 4
2024-12-09 23:26:27.604 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:27.606 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:26:27.613 +05:30 [INF] Route matched with {action = "ToggleArchiveNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleArchiveNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:26:27.622 +05:30 [INF] Received noteId: 1034, isArchive: True
2024-12-09 23:26:27.624 +05:30 [INF] Received request to toggle archive status for note with ID: 1034
2024-12-09 23:26:27.626 +05:30 [INF] Initiating toggle of archive status for note with ID: 1034 for user ID: 1
2024-12-09 23:26:27.627 +05:30 [INF] Received isArchive value: True
2024-12-09 23:26:27.635 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:26:27.643 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:26:27.654 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsArchive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:26:27.663 +05:30 [INF] Note with ID: 1034 archive status updated to true
2024-12-09 23:26:27.665 +05:30 [INF] Successfully toggled archive status for note with ID: 1034
2024-12-09 23:26:27.668 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:26:27.677 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes) in 55.4458ms
2024-12-09 23:26:27.682 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleArchiveNote (FunDooNotes)'
2024-12-09 23:26:27.683 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/archive/1034 - 200 null application/json; charset=utf-8 93.7545ms
2024-12-09 23:26:29.691 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:26:29.696 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:29.698 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.9845ms
2024-12-09 23:26:29.701 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:26:29.720 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:29.726 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:29.732 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:26:29.735 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:26:29.739 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:26:29.742 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:26:29.743 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:26:29.744 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:26:29.749 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:26:29.755 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:26:29.765 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:26:29.778 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:26:29.781 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:26:29.786 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:26:29.788 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:26:29.793 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 57.5326ms
2024-12-09 23:26:29.799 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:29.802 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 101.784ms
2024-12-09 23:26:33.997 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - null null
2024-12-09 23:26:34.007 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:34.009 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/1034 - 204 null null 11.8584ms
2024-12-09 23:26:34.011 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/1034 - application/json 119
2024-12-09 23:26:34.018 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:34.019 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:26:34.021 +05:30 [INF] Route matched with {action = "UpdateNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateNote(Int32, Models.DTOs.NoteUpdateDto) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:26:34.025 +05:30 [INF] Received note update: {"Title":"string","Description":"string","Color":"#FAAFA8","isArchive":true,"isCreated":true,"isTrash":false}
2024-12-09 23:26:34.032 +05:30 [INF] Updating note with ID: 1034
2024-12-09 23:26:34.034 +05:30 [INF] User with ID: 1 is attempting to update note with ID: 1034
2024-12-09 23:26:34.036 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:26:34.040 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:26:34.045 +05:30 [INF] Retrieving note with ID: 1034
2024-12-09 23:26:34.048 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:26:34.058 +05:30 [INF] User with ID: 1 has permission to update note ID: 1034
2024-12-09 23:26:34.064 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [Color] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:26:34.070 +05:30 [INF] Successfully updated note with ID: 1034
2024-12-09 23:26:34.073 +05:30 [INF] Retrieved notes successfully
2024-12-09 23:26:34.080 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-12-09 23:26:34.084 +05:30 [INF] Executed action FunDo.Controllers.NoteController.UpdateNote (FunDooNotes) in 59.3554ms
2024-12-09 23:26:34.088 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.UpdateNote (FunDooNotes)'
2024-12-09 23:26:34.091 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/1034 - 200 null application/json; charset=utf-8 79.9039ms
2024-12-09 23:26:36.021 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:26:36.024 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:36.027 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.1894ms
2024-12-09 23:26:36.030 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:26:36.029 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:26:36.035 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:36.044 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:36.047 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:36.051 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 21.509ms
2024-12-09 23:26:36.055 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:26:36.063 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:26:36.065 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:26:36.073 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:26:36.076 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:26:36.083 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:26:36.093 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:26:36.097 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:26:36.100 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:26:36.113 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:26:36.116 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:26:36.119 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:26:36.120 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:26:36.129 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 66.3438ms
2024-12-09 23:26:36.131 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:26:36.132 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:36.135 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:36.138 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 108.4615ms
2024-12-09 23:26:36.140 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:36.153 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:26:36.156 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:26:36.161 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:26:36.164 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:26:36.166 +05:30 [INF] Deserializing the notes
2024-12-09 23:26:36.169 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:26:36.172 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 16.4463ms
2024-12-09 23:26:36.176 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:36.179 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 47.7363ms
2024-12-09 23:26:40.017 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:26:40.024 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:40.028 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:40.034 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:26:40.046 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:26:40.055 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:26:40.057 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:26:40.059 +05:30 [INF] Deserializing the notes
2024-12-09 23:26:40.062 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:26:40.071 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 24.7492ms
2024-12-09 23:26:40.076 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:40.079 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 62.3399ms
2024-12-09 23:26:47.272 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1034 - null null
2024-12-09 23:26:47.281 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:47.284 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1034 - 204 null null 11.8922ms
2024-12-09 23:26:47.287 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1034 - application/json 4
2024-12-09 23:26:47.295 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:47.296 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 23:26:47.312 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:26:47.323 +05:30 [INF] Received request to toggle trash status for note with ID: 1034
2024-12-09 23:26:47.328 +05:30 [INF] Initiating toggle of trash status for note with ID: 1034 for user ID: 1
2024-12-09 23:26:47.341 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:26:47.350 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:26:47.364 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:26:47.375 +05:30 [INF] Note with ID: 1034 trash status updated to true
2024-12-09 23:26:47.380 +05:30 [INF] Successfully toggled trash status for note with ID: 1034
2024-12-09 23:26:47.382 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:26:47.385 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 65.2546ms
2024-12-09 23:26:47.390 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 23:26:47.393 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1034 - 200 null application/json; charset=utf-8 107.0365ms
2024-12-09 23:26:49.935 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:26:49.939 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:49.942 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 7.2013ms
2024-12-09 23:26:49.945 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:26:49.966 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:49.969 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:49.974 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:26:49.985 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:26:49.988 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:26:49.991 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:26:49.993 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:26:49.996 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:26:50.004 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:26:50.011 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:26:50.018 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:26:50.030 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:26:50.032 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:26:50.034 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:26:50.035 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:26:50.042 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 57.8215ms
2024-12-09 23:26:50.047 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:50.049 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 104.0402ms
2024-12-09 23:26:52.921 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1034 - null null
2024-12-09 23:26:52.930 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:52.931 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes/trash/1034 - 204 null null 10.9656ms
2024-12-09 23:26:52.935 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:5000/api/notes/trash/1034 - application/json 5
2024-12-09 23:26:52.949 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:52.950 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 23:26:52.951 +05:30 [INF] Route matched with {action = "ToggleTrashNote", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ToggleTrashNote(Int32, Boolean) on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:26:52.954 +05:30 [INF] Received request to toggle trash status for note with ID: 1034
2024-12-09 23:26:52.955 +05:30 [INF] Initiating toggle of trash status for note with ID: 1034 for user ID: 1
2024-12-09 23:26:52.959 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:26:52.970 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[Color], [n].[Description], [n].[IsArchive], [n].[IsTrash], [n].[Title], [n].[UserId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__p_0
2024-12-09 23:26:52.979 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsTrash] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2024-12-09 23:26:52.985 +05:30 [INF] Note with ID: 1034 trash status updated to false
2024-12-09 23:26:52.987 +05:30 [INF] Successfully toggled trash status for note with ID: 1034
2024-12-09 23:26:52.990 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:26:52.994 +05:30 [INF] Executed action FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes) in 39.8274ms
2024-12-09 23:26:53.000 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.ToggleTrashNote (FunDooNotes)'
2024-12-09 23:26:53.005 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:5000/api/notes/trash/1034 - 200 null application/json; charset=utf-8 70.4042ms
2024-12-09 23:26:56.087 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:5000/api/notes - null null
2024-12-09 23:26:56.091 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:56.093 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:5000/api/notes - 204 null null 6.5419ms
2024-12-09 23:26:56.097 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:26:56.108 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:56.113 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:56.119 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:26:56.124 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:26:56.127 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:26:56.131 +05:30 [WRN] Failed to fetch notes from cache
2024-12-09 23:26:56.132 +05:30 [INF] Fetching all notes for user with ID: 1
2024-12-09 23:26:56.136 +05:30 [INF] Checking if user with ID: 1 exists
2024-12-09 23:26:56.140 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Id] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-12-09 23:26:56.144 +05:30 [INF] Fetching notes for user with ID: 1
2024-12-09 23:26:56.147 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[Title], [n].[Description], [n].[Color], [n].[IsArchive], [n].[IsTrash], CASE
    WHEN [n].[UserId] = @__userId_0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [IsCreated]
FROM [Notes] AS [n]
WHERE [n].[UserId] = @__userId_0 OR EXISTS (
    SELECT 1
    FROM [Collaborators] AS [c]
    WHERE [c].[UserId] = @__userId_0 AND [c].[NoteId] = [n].[Id])
2024-12-09 23:26:56.154 +05:30 [INF] 2 notes retrieved for user with ID: 1
2024-12-09 23:26:56.156 +05:30 [INF] Serializing notes to store it in cache
2024-12-09 23:26:56.160 +05:30 [INF] Notes retrieved successfully
2024-12-09 23:26:56.162 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:26:56.174 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 49.5033ms
2024-12-09 23:26:56.178 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:56.183 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 86.1966ms
2024-12-09 23:26:58.891 +05:30 [INF] Request starting HTTP/2 GET https://localhost:5000/api/notes - null null
2024-12-09 23:26:58.896 +05:30 [INF] CORS policy execution successful.
2024-12-09 23:26:58.901 +05:30 [INF] Executing endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:58.905 +05:30 [INF] Route matched with {action = "GetAllNotes", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllNotes() on controller FunDo.Controllers.NoteController (FunDooNotes).
2024-12-09 23:26:58.915 +05:30 [INF] Attempt to get all notes from Database
2024-12-09 23:26:58.921 +05:30 [INF] Attempt to fetch notes from cache for user 1
2024-12-09 23:26:58.926 +05:30 [INF] Fetched notes from cache successfully
2024-12-09 23:26:58.927 +05:30 [INF] Deserializing the notes
2024-12-09 23:26:58.933 +05:30 [INF] Executing OkObjectResult, writing value of type 'Models.ApiResponse`1[[System.Collections.Generic.IEnumerable`1[[Models.DTOs.NoteResponseDto, Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-12-09 23:26:58.941 +05:30 [INF] Executed action FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes) in 25.973ms
2024-12-09 23:26:58.947 +05:30 [INF] Executed endpoint 'FunDo.Controllers.NoteController.GetAllNotes (FunDooNotes)'
2024-12-09 23:26:58.950 +05:30 [INF] Request finished HTTP/2 GET https://localhost:5000/api/notes - 200 null application/json; charset=utf-8 59.8434ms
